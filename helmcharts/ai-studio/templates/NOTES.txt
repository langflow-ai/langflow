1. Get the application URLs by running these commands:

{{- if .Values.frontend.ingress.enabled }}
Frontend:
{{- range $host := .Values.frontend.ingress.hosts }}
  {{- range .paths }}
  http{{ if $.Values.frontend.ingress.tls }}s{{ end }}://{{ $host.host }}{{ .path }}
  {{- end }}
{{- end }}
{{- else if contains "NodePort" .Values.frontend.service.type }}
Frontend:
  export NODE_PORT=$(kubectl get --namespace {{ .Release.Namespace }} -o jsonpath="{.spec.ports[0].nodePort}" services {{ include "ai-studio.frontend.fullname" . }})
  export NODE_IP=$(kubectl get nodes --namespace {{ .Release.Namespace }} -o jsonpath="{.items[0].status.addresses[0].address}")
  echo http://$NODE_IP:$NODE_PORT
{{- else if contains "LoadBalancer" .Values.frontend.service.type }}
Frontend:
     NOTE: It may take a few minutes for the LoadBalancer IP to be available.
           You can watch the status of by running 'kubectl get --namespace {{ .Release.Namespace }} svc -w {{ include "ai-studio.frontend.fullname" . }}'
  export SERVICE_IP=$(kubectl get svc --namespace {{ .Release.Namespace }} {{ include "ai-studio.frontend.fullname" . }} --template "{{"{{ range (index .status.loadBalancer.ingress 0) }}{{.}}{{ end }}"}}")
  echo http://$SERVICE_IP:{{ .Values.frontend.service.port }}
{{- else if contains "ClusterIP" .Values.frontend.service.type }}
Frontend:
  export POD_NAME=$(kubectl get pods --namespace {{ .Release.Namespace }} -l "{{- include "ai-studio.frontend.selectorLabels" . }}" -o jsonpath="{.items[0].metadata.name}")
  export CONTAINER_PORT=$(kubectl get pod --namespace {{ .Release.Namespace }} $POD_NAME -o jsonpath="{.spec.containers[0].ports[0].containerPort}")
  echo "Visit http://127.0.0.1:3000 to use your application"
  kubectl --namespace {{ .Release.Namespace }} port-forward $POD_NAME 3000:$CONTAINER_PORT
{{- end }}

{{- if .Values.backend.ingress.enabled }}
Backend API:
{{- range $host := .Values.backend.ingress.hosts }}
  {{- range .paths }}
  http{{ if $.Values.backend.ingress.tls }}s{{ end }}://{{ $host.host }}{{ .path }}
  {{- end }}
{{- end }}
{{- else if contains "NodePort" .Values.backend.service.type }}
Backend API:
  export NODE_PORT=$(kubectl get --namespace {{ .Release.Namespace }} -o jsonpath="{.spec.ports[0].nodePort}" services {{ include "ai-studio.backend.fullname" . }})
  export NODE_IP=$(kubectl get nodes --namespace {{ .Release.Namespace }} -o jsonpath="{.items[0].status.addresses[0].address}")
  echo http://$NODE_IP:$NODE_PORT
{{- else if contains "LoadBalancer" .Values.backend.service.type }}
Backend API:
     NOTE: It may take a few minutes for the LoadBalancer IP to be available.
           You can watch the status of by running 'kubectl get --namespace {{ .Release.Namespace }} svc -w {{ include "ai-studio.backend.fullname" . }}'
  export SERVICE_IP=$(kubectl get svc --namespace {{ .Release.Namespace }} {{ include "ai-studio.backend.fullname" . }} --template "{{"{{ range (index .status.loadBalancer.ingress 0) }}{{.}}{{ end }}"}}")
  echo http://$SERVICE_IP:{{ .Values.backend.service.port }}
{{- else if contains "ClusterIP" .Values.backend.service.type }}
Backend API:
  export POD_NAME=$(kubectl get pods --namespace {{ .Release.Namespace }} -l "{{- include "ai-studio.backend.selectorLabels" . }}" -o jsonpath="{.items[0].metadata.name}")
  export CONTAINER_PORT=$(kubectl get pod --namespace {{ .Release.Namespace }} $POD_NAME -o jsonpath="{.spec.containers[0].ports[0].containerPort}")
  echo "Visit http://127.0.0.1:7860 to use your application"
  kubectl --namespace {{ .Release.Namespace }} port-forward $POD_NAME 7860:$CONTAINER_PORT
{{- end }}

2. Health checks:
  - Frontend: /
  - Backend: /api/v1/health

3. To get deployment status:
  kubectl get all -l app.kubernetes.io/instance={{ .Release.Name }} -n {{ .Release.Namespace }}

4. To view logs:
  Frontend: kubectl logs -l app.kubernetes.io/component=frontend,app.kubernetes.io/instance={{ .Release.Name }} -n {{ .Release.Namespace }}
  Backend:  kubectl logs -l app.kubernetes.io/component=backend,app.kubernetes.io/instance={{ .Release.Name }} -n {{ .Release.Namespace }}

{{- if .Values.backend.persistence.enabled }}

5. Persistent storage:
  Data volume: {{ include "ai-studio.backend.fullname" . }}-data ({{ .Values.backend.persistence.size }})
{{- end }}