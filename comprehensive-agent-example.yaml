name: "Comprehensive Agent Example"
description: "Example showing proper tool connections for all component types"
version: "1.0.0"

components:
  # Input components
  user-input:
    type: "genesis:chat_input"
    config:
      input_value: "Enter your query here"

  # Tool components with provides declarations
  knowledge-search:
    type: "genesis:knowledge_hub_search"
    config:
      search_query: "{user_query}"
      selected_hubs: ["documents", "policies"]
    provides:
      - useAs: "tools"
        in: "main-agent"

  mcp-validator:
    type: "genesis:mcp_tool"
    config:
      mcp_server: "validation_service"
      tool: "validate_data"
    provides:
      - useAs: "tools"
        in: "main-agent"

  calculator-tool:
    type: "genesis:calculator"
    config:
      input_value: "{calculation_expression}"
    provides:
      - useAs: "tools"
        in: "main-agent"

  # Document processing tool
  document-processor:
    type: "genesis:document_intelligence"
    config:
      model_type: "prebuilt-document"
      extract_tables: true
      extract_key_value_pairs: true
    provides:
      - useAs: "tools"
        in: "main-agent"

  # Main agent that uses all tools
  main-agent:
    type: "genesis:agent"
    config:
      system_prompt: |
        You are a comprehensive AI assistant with access to multiple tools:
        - Knowledge hub search for finding relevant information
        - MCP validation service for data verification
        - Calculator for mathematical computations
        - Document intelligence for processing documents

        Use these tools as needed to provide accurate and helpful responses.
      model_provider: "OpenAI"
      model_name: "gpt-4"

  # Output component
  response-output:
    type: "genesis:chat_output"
    config:
      sender: "Machine"
      sender_name: "Comprehensive Agent"

connections:
  # Input to agent
  - from: "user-input"
    to: "main-agent"
    field: "input_value"

  # Agent to output
  - from: "main-agent"
    to: "response-output"
    field: "input_value"

# Note: Tool connections are handled automatically via provides declarations
# Each tool component with provides: [useAs: "tools", in: "main-agent"]
# will automatically connect its component_as_tool output to main-agent's tools input