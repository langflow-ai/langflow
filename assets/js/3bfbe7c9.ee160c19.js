"use strict";(self.webpackChunklangflow_docs=self.webpackChunklangflow_docs||[]).push([[7720],{8787:(e,o,n)=>{n.r(o),n.d(o,{CH:()=>h,assets:()=>p,chCodeConfig:()=>f,contentTitle:()=>d,default:()=>y,frontMatter:()=>a,metadata:()=>t,toc:()=>u});const t=JSON.parse('{"id":"Deployment/develop-application","title":"Containerize a Langflow application","description":"Designing flows in the visual editor is only the first step in building an application that uses Langflow.","source":"@site/docs/Deployment/develop-application.mdx","sourceDirName":"Deployment","slug":"/develop-application","permalink":"/develop-application","draft":false,"unlisted":false,"tags":[],"version":"current","frontMatter":{"title":"Containerize a Langflow application","slug":"/develop-application"},"sidebar":"docs","previous":{"title":"Deploy Langflow with Nginx and SSL","permalink":"/deployment-nginx-ssl"},"next":{"title":"Langflow Docker images","permalink":"/deployment-docker"}}');var s=n(74848),r=n(28453),l=n(24754),i=n(40619),c=n(63905);const a={title:"Containerize a Langflow application",slug:"/develop-application"},d=void 0,p={},h={annotations:l.hk,Code:l.Cy},f={staticMediaQuery:"not screen, (max-width: 768px)",lineNumbers:!0,showCopyButton:!0,themeName:"github-dark"},u=[...c.RM,{value:"Directory structure",id:"directory-structure",level:2},{value:"Package management",id:"package-management",level:3},{value:"Environment variables",id:"docker-env",level:3},{value:"Secrets",id:"secrets",level:3},{value:"Storage",id:"storage",level:3},{value:"Flows",id:"flows",level:3},{value:"Components",id:"components",level:3},{value:"Langflow Dockerfile",id:"dockerfile",level:2},{value:"Backend-only mode",id:"backend-only-mode",level:3},{value:"Test your Langflow Docker image",id:"test-your-langflow-docker-image",level:2},{value:"Deploy to Docker Hub and Kubernetes",id:"deploy-docker",level:2}];function g(e){const o={a:"a",code:"code",em:"em",h2:"h2",h3:"h3",li:"li",ol:"ol",p:"p",strong:"strong",ul:"ul",...(0,r.R)(),...e.components},{Details:n}=o;return h||m("CH",!1),h.Code||m("CH.Code",!0),n||m("Details",!0),(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)("style",{dangerouslySetInnerHTML:{__html:'[data-ch-theme="github-dark"] {  --ch-t-colorScheme: dark;--ch-t-foreground: #c9d1d9;--ch-t-background: #0d1117;--ch-t-lighter-inlineBackground: #0d1117e6;--ch-t-editor-background: #0d1117;--ch-t-editor-foreground: #c9d1d9;--ch-t-editor-lineHighlightBackground: #6e76811a;--ch-t-editor-rangeHighlightBackground: #ffffff0b;--ch-t-editor-infoForeground: #3794FF;--ch-t-editor-selectionBackground: #264F78;--ch-t-focusBorder: #1f6feb;--ch-t-tab-activeBackground: #0d1117;--ch-t-tab-activeForeground: #c9d1d9;--ch-t-tab-inactiveBackground: #010409;--ch-t-tab-inactiveForeground: #8b949e;--ch-t-tab-border: #30363d;--ch-t-tab-activeBorder: #0d1117;--ch-t-editorGroup-border: #30363d;--ch-t-editorGroupHeader-tabsBackground: #010409;--ch-t-editorLineNumber-foreground: #6e7681;--ch-t-input-background: #0d1117;--ch-t-input-foreground: #c9d1d9;--ch-t-input-border: #30363d;--ch-t-icon-foreground: #8b949e;--ch-t-sideBar-background: #010409;--ch-t-sideBar-foreground: #c9d1d9;--ch-t-sideBar-border: #30363d;--ch-t-list-activeSelectionBackground: #6e768166;--ch-t-list-activeSelectionForeground: #c9d1d9;--ch-t-list-hoverBackground: #6e76811a;--ch-t-list-hoverForeground: #c9d1d9; }'}}),"\n","\n",(0,s.jsx)(c.Ay,{}),"\n",(0,s.jsx)(o.p,{children:"Designing flows in the visual editor is only the first step in building an application that uses Langflow."}),"\n",(0,s.jsx)(o.p,{children:"Once you have a functional flow, you can use that flow in a larger application, such as a website or mobile app.\nBecause Langflow is both an IDE and a runtime, you can use Langflow to build and test your flows locally, and then package and serve your flows in a production environment."}),"\n",(0,s.jsx)(o.p,{children:"This guide introduces application development with Langflow from initial setup through packaging and deployment.\nThis documentation doesn't explain how to write a complete application; it only describes how to include Langflow in the context of a larger application."}),"\n",(0,s.jsx)(o.h2,{id:"directory-structure",children:"Directory structure"}),"\n",(0,s.jsx)(o.p,{children:"The following example describes the directory structure for a minimal Langflow application:"}),"\n",(0,s.jsx)(h.Code,{codeConfig:f,northPanel:{tabs:[""],active:"",heightRatio:1},files:[{name:"",focus:"",code:{lines:[{tokens:[{content:"LANGFLOW-APPLICATION/",props:{}}]},{tokens:[{content:"\u251c\u2500\u2500 docker.env",props:{}}]},{tokens:[{content:"\u251c\u2500\u2500 Dockerfile",props:{}}]},{tokens:[{content:"\u251c\u2500\u2500 flows/",props:{}}]},{tokens:[{content:"\u2502   \u251c\u2500\u2500 flow1.json",props:{}}]},{tokens:[{content:"\u2502   \u2514\u2500\u2500 flow2.json",props:{}}]},{tokens:[{content:"\u251c\u2500\u2500 langflow-config-dir/",props:{}}]},{tokens:[{content:"\u251c\u2500\u2500 README.md",props:{}}]}],lang:"text"},annotations:[]}]}),"\n",(0,s.jsx)(o.p,{children:"This directory contains the following:"}),"\n",(0,s.jsxs)(o.ul,{children:["\n",(0,s.jsxs)(o.li,{children:[(0,s.jsx)(o.a,{href:"#docker-env",children:(0,s.jsx)(o.code,{children:"docker.env"})}),": This file is copied to the Docker image as a ",(0,s.jsx)(o.code,{children:".env"})," file in the container root."]}),"\n",(0,s.jsxs)(o.li,{children:[(0,s.jsx)(o.a,{href:"#dockerfile",children:(0,s.jsx)(o.code,{children:"Dockerfile"})}),": This file controls how your Langflow image is built."]}),"\n",(0,s.jsxs)(o.li,{children:[(0,s.jsx)(o.a,{href:"#flows",children:(0,s.jsx)(o.code,{children:"/flows"})}),": This folder holds the flows you want to host, which are the flows that your application uses."]}),"\n",(0,s.jsxs)(o.li,{children:[(0,s.jsx)(o.code,{children:"/langflow-config-dir"}),": This folder is referenced in the Dockerfile as the location for your Langflow deployment's configuration files, database, and logs."]}),"\n",(0,s.jsxs)(o.li,{children:[(0,s.jsx)(o.code,{children:"README.md"}),": This is a typical README file for your application's documentation."]}),"\n"]}),"\n",(0,s.jsxs)(o.p,{children:["This is a minimal example of a Langflow application directory.\nYour application might have additional files and folders, such as a ",(0,s.jsx)(o.code,{children:"/components"})," folder for custom components, or a ",(0,s.jsx)(o.code,{children:"pyproject.toml"})," file for additional dependencies."]}),"\n",(0,s.jsx)(o.h3,{id:"package-management",children:"Package management"}),"\n",(0,s.jsxs)(o.p,{children:["The base Langflow Docker image includes the Langflow core dependencies because it uses ",(0,s.jsx)(o.code,{children:"langflowai/langflow:latest"})," as the parent image."]}),"\n",(0,s.jsxs)(o.p,{children:["If your application requires additional dependencies, create a ",(0,s.jsx)(o.a,{href:"https://packaging.python.org/en/latest/guides/writing-pyproject-toml",children:(0,s.jsx)(o.code,{children:"pyproject.toml"})})," file for the additional dependencies.\nFor more information, see ",(0,s.jsx)(o.a,{href:"/install-custom-dependencies",children:"Install custom dependencies"}),"."]}),"\n",(0,s.jsxs)(o.p,{children:["To deploy an application with additional dependencies to Docker, you must copy the ",(0,s.jsx)(o.code,{children:"pyproject.toml"})," and ",(0,s.jsx)(o.code,{children:"uv.lock"})," files to the Docker image.\nTo do this, add the following to your Langflow application's Dockerfile:"]}),"\n",(0,s.jsx)(h.Code,{codeConfig:f,northPanel:{tabs:[""],active:"",heightRatio:1},files:[{name:"",focus:"",code:{lines:[{tokens:[{content:"COPY pyproject.toml uv.lock /app/",props:{}}]}],lang:"text"},annotations:[]}]}),"\n",(0,s.jsx)(o.h3,{id:"docker-env",children:"Environment variables"}),"\n",(0,s.jsxs)(o.p,{children:["The ",(0,s.jsx)(o.code,{children:"docker.env"})," file is a ",(0,s.jsx)(o.code,{children:".env"})," file loaded into your Docker image.\nIt contains ",(0,s.jsx)(o.a,{href:"/environment-variables",children:"Langflow environment variables"})," that are used in flows or control Langflow's behavior, such as authentication, database storage, API keys, and server configurations.\nFor example:"]}),"\n",(0,s.jsx)(h.Code,{codeConfig:f,northPanel:{tabs:[""],active:"",heightRatio:1},files:[{name:"",focus:"",code:{lines:[{tokens:[{content:"LANGFLOW_AUTO_LOGIN=True",props:{}}]},{tokens:[{content:"LANGFLOW_SAVE_DB_IN_CONFIG_DIR=True",props:{}}]},{tokens:[{content:"LANGFLOW_BASE_URL=http://0.0.0.0:7860",props:{}}]},{tokens:[{content:"OPENAI_API_KEY=sk-...",props:{}}]}],lang:"text"},annotations:[]}]}),"\n",(0,s.jsxs)(o.p,{children:["You can set environment variables in the Dockerfile as well.\nHowever, if you set an environment variable in both ",(0,s.jsx)(o.code,{children:"docker.env"})," and the Dockerfile, Langflow uses the value set in ",(0,s.jsx)(o.code,{children:"docker.env"}),"."]}),"\n",(0,s.jsxs)(o.p,{children:["Langflow can also ",(0,s.jsx)(o.a,{href:"/configuration-global-variables#add-custom-global-variables-from-the-environment",children:"create global variables from your environment variables"}),", or ",(0,s.jsx)(o.a,{href:"/configuration-global-variables#use-environment-variables-for-missing-global-variables",children:"use environment variables as a backup for missing global variables"}),"."]}),"\n",(0,s.jsx)(o.h3,{id:"secrets",children:"Secrets"}),"\n",(0,s.jsx)(o.p,{children:"For simplicity, the examples in the Langflow documentation might use direct references to API keys and other sensitive values.\nIn your own applications, you should always follow industry best practices for managing secrets, such as using environment variables or secret management tools."}),"\n",(0,s.jsxs)(o.p,{children:["For information about generating authentication keys and managing secrets in Langflow, see ",(0,s.jsx)(o.a,{href:"/api-keys-and-authentication",children:"API keys and authentication"}),"."]}),"\n",(0,s.jsx)(o.h3,{id:"storage",children:"Storage"}),"\n",(0,s.jsxs)(o.p,{children:["By default, Langflow uses an ",(0,s.jsx)(o.a,{href:"https://www.sqlite.org/",children:"SQLite"})," database for storage.\nIf you prefer to use PostgreSQL, see ",(0,s.jsx)(o.a,{href:"/configuration-custom-database",children:"Configure an external PostgreSQL database"}),"."]}),"\n",(0,s.jsxs)(o.p,{children:["For more information about storage, including cache and memory, see ",(0,s.jsx)(o.a,{href:"/memory",children:"Memory management options"}),"."]}),"\n",(0,s.jsx)(o.h3,{id:"flows",children:"Flows"}),"\n",(0,s.jsx)(o.p,{children:"Your local Langflow instance might have many flows for different applications.\nWhen you package Langflow as a dependency of an application, you only want to include the flows your application uses."}),"\n",(0,s.jsxs)(o.ol,{children:["\n",(0,s.jsxs)(o.li,{children:["\n",(0,s.jsxs)(o.p,{children:[(0,s.jsx)(o.a,{href:"/concepts-flows-import",children:"Export flows"})," that are relevant to your application."]}),"\n",(0,s.jsxs)(o.p,{children:["If you have chained flows (flows that trigger other flows), make sure you export ",(0,s.jsx)(o.em,{children:"all"})," necessary flows."]}),"\n"]}),"\n",(0,s.jsxs)(o.li,{children:["\n",(0,s.jsxs)(o.p,{children:["Add the exported Langflow JSON files to the ",(0,s.jsx)(o.code,{children:"/flows"})," folder in your application directory."]}),"\n"]}),"\n"]}),"\n",(0,s.jsx)(o.h3,{id:"components",children:"Components"}),"\n",(0,s.jsxs)(o.p,{children:["The ",(0,s.jsx)(i.A,{name:"Component","aria-hidden":"true"})," ",(0,s.jsx)(o.strong,{children:"Core components"})," and ",(0,s.jsx)(i.A,{name:"Blocks","aria-hidden":"true"})," [",(0,s.jsx)(o.strong,{children:"Bundles"}),"] that you see in the Langflow visual editor are automatically included in the base Langflow Docker image."]}),"\n",(0,s.jsxs)(o.p,{children:["If you have any ",(0,s.jsx)(o.a,{href:"/components-custom-components",children:"custom components"})," that you created for your application, you must include these components in your application directory:"]}),"\n",(0,s.jsxs)(o.ol,{children:["\n",(0,s.jsxs)(o.li,{children:["Create a ",(0,s.jsx)(o.code,{children:"/components"})," folder in your application directory."]}),"\n",(0,s.jsxs)(o.li,{children:["Add your custom component files to the ",(0,s.jsx)(o.code,{children:"/components"})," folder."]}),"\n",(0,s.jsxs)(o.li,{children:["Specify the path to ",(0,s.jsx)(o.code,{children:"/components"})," in your ",(0,s.jsx)(o.code,{children:"docker.env"}),"."]}),"\n"]}),"\n",(0,s.jsx)(o.h2,{id:"dockerfile",children:"Langflow Dockerfile"}),"\n",(0,s.jsx)(o.p,{children:"The Dockerfile determines how your Langflow image is built, including the dependencies, flows, components, and configuration files."}),"\n",(0,s.jsx)(o.p,{children:"At minimum, you need to specify the base Langflow image, create the necessary folders in the container, copy folders and files to the container, and provide a startup command."}),"\n",(0,s.jsx)(h.Code,{codeConfig:f,northPanel:{tabs:[""],active:"",heightRatio:1},files:[{name:"",focus:"",code:{lines:[{tokens:[{content:"# Use the latest version of the base Langflow image",props:{style:{color:"#8B949E"}}}]},{tokens:[{content:"FROM",props:{style:{color:"#FF7B72"}}},{content:" langflowai/langflow:latest",props:{style:{color:"#C9D1D9"}}}]},{tokens:[{content:"",props:{style:{color:"#C9D1D9"}}}]},{tokens:[{content:"# Create folders and set the working directory in the container",props:{style:{color:"#8B949E"}}}]},{tokens:[{content:"RUN",props:{style:{color:"#FF7B72"}}},{content:" mkdir /app/flows",props:{style:{color:"#C9D1D9"}}}]},{tokens:[{content:"RUN",props:{style:{color:"#FF7B72"}}},{content:" mkdir /app/langflow-config-dir",props:{style:{color:"#C9D1D9"}}}]},{tokens:[{content:"WORKDIR",props:{style:{color:"#FF7B72"}}},{content:" /app",props:{style:{color:"#C9D1D9"}}}]},{tokens:[{content:"",props:{style:{color:"#C9D1D9"}}}]},{tokens:[{content:"# Copy flows, langflow-config-dir, and docker.env to the container",props:{style:{color:"#8B949E"}}}]},{tokens:[{content:"COPY",props:{style:{color:"#FF7B72"}}},{content:" flows /app/flows",props:{style:{color:"#C9D1D9"}}}]},{tokens:[{content:"COPY",props:{style:{color:"#FF7B72"}}},{content:" langflow-config-dir /app/langflow-config-dir",props:{style:{color:"#C9D1D9"}}}]},{tokens:[{content:"COPY",props:{style:{color:"#FF7B72"}}},{content:" docker.env /app/.env",props:{style:{color:"#C9D1D9"}}}]},{tokens:[{content:"",props:{style:{color:"#C9D1D9"}}}]},{tokens:[{content:"# Optional: Copy custom components to the container",props:{style:{color:"#8B949E"}}}]},{tokens:[{content:"COPY",props:{style:{color:"#FF7B72"}}},{content:" components /app/components",props:{style:{color:"#C9D1D9"}}}]},{tokens:[{content:"",props:{style:{color:"#C9D1D9"}}}]},{tokens:[{content:"# Optional: Use custom dependencies",props:{style:{color:"#8B949E"}}}]},{tokens:[{content:"COPY",props:{style:{color:"#FF7B72"}}},{content:" pyproject.toml uv.lock /app/",props:{style:{color:"#C9D1D9"}}}]},{tokens:[{content:"",props:{style:{color:"#C9D1D9"}}}]},{tokens:[{content:"# Set environment variables if not set in docker.env",props:{style:{color:"#8B949E"}}}]},{tokens:[{content:"ENV",props:{style:{color:"#FF7B72"}}},{content:" PYTHONPATH=/app",props:{style:{color:"#C9D1D9"}}}]},{tokens:[{content:"ENV",props:{style:{color:"#FF7B72"}}},{content:" LANGFLOW_LOAD_FLOWS_PATH=/app/flows",props:{style:{color:"#C9D1D9"}}}]},{tokens:[{content:"ENV",props:{style:{color:"#FF7B72"}}},{content:" LANGFLOW_CONFIG_DIR=/app/langflow-config-dir",props:{style:{color:"#C9D1D9"}}}]},{tokens:[{content:"ENV",props:{style:{color:"#FF7B72"}}},{content:" LANGFLOW_COMPONENTS_PATH=/app/components",props:{style:{color:"#C9D1D9"}}}]},{tokens:[{content:"ENV",props:{style:{color:"#FF7B72"}}},{content:" LANGFLOW_LOG_ENV=container",props:{style:{color:"#C9D1D9"}}}]},{tokens:[{content:"",props:{style:{color:"#C9D1D9"}}}]},{tokens:[{content:"# Command to run the Langflow server on port 7860",props:{style:{color:"#8B949E"}}}]},{tokens:[{content:"EXPOSE",props:{style:{color:"#FF7B72"}}},{content:" 7860",props:{style:{color:"#C9D1D9"}}}]},{tokens:[{content:"CMD",props:{style:{color:"#FF7B72"}}},{content:" [",props:{style:{color:"#C9D1D9"}}},{content:'"langflow"',props:{style:{color:"#A5D6FF"}}},{content:", ",props:{style:{color:"#C9D1D9"}}},{content:'"run"',props:{style:{color:"#A5D6FF"}}},{content:", ",props:{style:{color:"#C9D1D9"}}},{content:'"--backend-only"',props:{style:{color:"#A5D6FF"}}},{content:", ",props:{style:{color:"#C9D1D9"}}},{content:'"--env-file"',props:{style:{color:"#A5D6FF"}}},{content:",",props:{style:{color:"#C9D1D9"}}},{content:'"/app/.env"',props:{style:{color:"#A5D6FF"}}},{content:",",props:{style:{color:"#C9D1D9"}}},{content:'"--host"',props:{style:{color:"#A5D6FF"}}},{content:", ",props:{style:{color:"#C9D1D9"}}},{content:'"0.0.0.0"',props:{style:{color:"#A5D6FF"}}},{content:", ",props:{style:{color:"#C9D1D9"}}},{content:'"--port"',props:{style:{color:"#A5D6FF"}}},{content:", ",props:{style:{color:"#C9D1D9"}}},{content:'"7860"',props:{style:{color:"#A5D6FF"}}},{content:"]",props:{style:{color:"#C9D1D9"}}}]}],lang:"dockerfile"},annotations:[]}]}),"\n",(0,s.jsxs)(o.p,{children:["The environment variables set directly in this Dockerfile specify resource paths for Langflow.\nIf these variables are also set in ",(0,s.jsx)(o.code,{children:"docker.env"}),", the values in ",(0,s.jsx)(o.code,{children:"docker.env"})," override the values set in the Dockerfile."]}),"\n",(0,s.jsxs)(o.p,{children:["In this example, ",(0,s.jsx)(o.code,{children:"ENV LANGFLOW_LOG_ENV=container"})," sets the logging behavior for serialized JSON to ",(0,s.jsx)(o.code,{children:"stdout"})," to track the application's behavior in a containerized environment. For more information, see ",(0,s.jsx)(o.a,{href:"/logging",children:"Logging"}),"."]}),"\n",(0,s.jsx)(o.h3,{id:"backend-only-mode",children:"Backend-only mode"}),"\n",(0,s.jsxs)(o.p,{children:["The ",(0,s.jsx)(o.code,{children:"--backend-only"})," flag in ",(0,s.jsx)(o.code,{children:"CMD"})," starts Langflow in backend-only mode, which provides programmatic access only.\nThis is recommended when running Langflow as a dependency of an application where you don't need access to the visual editor."]}),"\n",(0,s.jsxs)(o.p,{children:["If you want to serve the Langflow visual editor ",(0,s.jsx)(o.em,{children:"and"})," backend, then omit ",(0,s.jsx)(o.code,{children:"--backend-only"}),"."]}),"\n",(0,s.jsxs)(o.p,{children:["For more information, see ",(0,s.jsx)(o.a,{href:"/deployment-docker",children:"Deploy Langflow on Docker"}),"."]}),"\n",(0,s.jsx)(o.h2,{id:"test-your-langflow-docker-image",children:"Test your Langflow Docker image"}),"\n",(0,s.jsx)(o.p,{children:"Build and run your Langflow Docker image to test it."}),"\n",(0,s.jsxs)(o.p,{children:["This example runs the container locally.\nFor information about publishing your image on Docker Hub and running a Langflow container remotely, see ",(0,s.jsx)(o.a,{href:"#deploy-docker",children:"Deploy to Docker Hub and Kubernetes"}),"."]}),"\n",(0,s.jsxs)(o.ol,{children:["\n",(0,s.jsxs)(o.li,{children:["\n",(0,s.jsx)(o.p,{children:"Build the Docker image:"}),"\n",(0,s.jsx)(h.Code,{codeConfig:f,northPanel:{tabs:[""],active:"",heightRatio:1},files:[{name:"",focus:"",code:{lines:[{tokens:[{content:"docker ",props:{style:{color:"#FFA657"}}},{content:"build ",props:{style:{color:"#A5D6FF"}}},{content:"-t ",props:{style:{color:"#79C0FF"}}},{content:"langflow-pokedex:",props:{style:{color:"#A5D6FF"}}},{content:"1.2.0 ",props:{style:{color:"#79C0FF"}}},{content:".",props:{style:{color:"#A5D6FF"}}}]}],lang:"bash"},annotations:[]}]}),"\n"]}),"\n",(0,s.jsxs)(o.li,{children:["\n",(0,s.jsx)(o.p,{children:"Run the Docker container to start your Langflow server:"}),"\n",(0,s.jsx)(h.Code,{codeConfig:f,northPanel:{tabs:[""],active:"",heightRatio:1},files:[{name:"",focus:"",code:{lines:[{tokens:[{content:"docker ",props:{style:{color:"#FFA657"}}},{content:"run ",props:{style:{color:"#A5D6FF"}}},{content:"-p ",props:{style:{color:"#79C0FF"}}},{content:"7860:",props:{style:{color:"#A5D6FF"}}},{content:"7860 ",props:{style:{color:"#79C0FF"}}},{content:"langflow-pokedex:",props:{style:{color:"#A5D6FF"}}},{content:"1.2.0",props:{style:{color:"#79C0FF"}}}]}],lang:"bash"},annotations:[]}]}),"\n"]}),"\n",(0,s.jsxs)(o.li,{children:["\n",(0,s.jsx)(o.p,{children:"To confirm that the container is serving your flows as expected, use the Langflow API to run a flow:"}),"\n",(0,s.jsxs)(o.ol,{children:["\n",(0,s.jsxs)(o.li,{children:["\n",(0,s.jsxs)(o.p,{children:["Open one of the JSON files in your application's ",(0,s.jsx)(o.code,{children:"/flows"})," folder, and then find the flow's ",(0,s.jsx)(o.code,{children:"id"})," in the  ",(0,s.jsx)(o.a,{href:"/concepts-flows-import#additional-metadata-and-project-information",children:"additional metadata and project information"}),"."]}),"\n",(0,s.jsxs)(o.p,{children:["There are many ",(0,s.jsx)(o.code,{children:"id"})," values; make sure you get the ID for the entire flow, not the ID for an individual component.\nIf your flow is complex, try searching for the flow's name, which is typically near the flow's ",(0,s.jsx)(o.code,{children:"id"}),"."]}),"\n",(0,s.jsx)(h.Code,{codeConfig:f,northPanel:{tabs:[""],active:"",heightRatio:1},files:[{name:"",focus:"",code:{lines:[{tokens:[{content:'"name"',props:{style:{color:"#A5D6FF"}}},{content:": ",props:{style:{color:"#C9D1D9"}}},{content:'"Basic Prompting"',props:{style:{color:"#A5D6FF"}}},{content:",",props:{style:{color:"#C9D1D9"}}}]},{tokens:[{content:'"description"',props:{style:{color:"#A5D6FF"}}},{content:": ",props:{style:{color:"#C9D1D9"}}},{content:'"Perform basic prompting with an OpenAI model."',props:{style:{color:"#A5D6FF"}}},{content:",",props:{style:{color:"#C9D1D9"}}}]},{tokens:[{content:'"id"',props:{style:{color:"#A5D6FF"}}},{content:": ",props:{style:{color:"#C9D1D9"}}},{content:'"e4167236-938f-4aca-845b-21de3f399858"',props:{style:{color:"#A5D6FF"}}},{content:",",props:{style:{color:"#C9D1D9"}}}]}],lang:"json"},annotations:[]}]}),"\n"]}),"\n",(0,s.jsxs)(o.li,{children:["\n",(0,s.jsxs)(o.p,{children:["Send a POST request to the ",(0,s.jsx)(o.a,{href:"/api-flows-run#run-flow",children:(0,s.jsx)(o.code,{children:"/v1/run/$FLOW_ID"})})," endpoint using the flow ID from the previous step ."]}),"\n",(0,s.jsxs)(o.p,{children:["The following example runs a simple LLM chat flow that responds to a chat input string.\nIf necessary, modify the payload for your flow.\nFor example, if your flow doesn't have a ",(0,s.jsx)(o.strong,{children:"Chat Input"})," component, you must modify the payload to provide the expected input for your flow."]}),"\n",(0,s.jsx)(h.Code,{codeConfig:f,northPanel:{tabs:[""],active:"",heightRatio:1},files:[{name:"",focus:"",code:{lines:[{tokens:[{content:"curl ",props:{style:{color:"#FFA657"}}},{content:"--request ",props:{style:{color:"#79C0FF"}}},{content:"POST ",props:{style:{color:"#A5D6FF"}}},{content:"\\",props:{style:{color:"#79C0FF"}}}]},{tokens:[{content:"  --url ",props:{style:{color:"#79C0FF"}}},{content:"'http://localhost:7860/api/v1/run/e4167236-938f-4aca-845b-21de3f399858?stream=true' ",props:{style:{color:"#A5D6FF"}}},{content:"\\",props:{style:{color:"#79C0FF"}}}]},{tokens:[{content:"  --header ",props:{style:{color:"#79C0FF"}}},{content:"'Content-Type: application/json' ",props:{style:{color:"#A5D6FF"}}},{content:"\\",props:{style:{color:"#79C0FF"}}}]},{tokens:[{content:"  --data ",props:{style:{color:"#79C0FF"}}},{content:"'{",props:{style:{color:"#A5D6FF"}}}]},{tokens:[{content:'    "input_value": "Tell me about Charizard.",',props:{style:{color:"#A5D6FF"}}}]},{tokens:[{content:'    "output_type": "chat",',props:{style:{color:"#A5D6FF"}}}]},{tokens:[{content:'    "input_type": "chat",',props:{style:{color:"#A5D6FF"}}}]},{tokens:[{content:'    "session_id": "charizard_test_request"',props:{style:{color:"#A5D6FF"}}}]},{tokens:[{content:"}'",props:{style:{color:"#A5D6FF"}}}]}],lang:"bash"},annotations:[]}]}),"\n",(0,s.jsxs)(n,{children:[(0,s.jsx)("summary",{children:"About this example"}),(0,s.jsxs)(o.p,{children:["This command runs the ",(0,s.jsx)(o.strong,{children:"Pok\xe9dex"})," template flow.\nIt provides chat input about a specific Pok\xe9mon, uses an optional custom ",(0,s.jsx)(o.code,{children:"session_id"}),", and enables response streaming with ",(0,s.jsx)(o.code,{children:"?stream=true"}),"."]}),(0,s.jsxs)(o.p,{children:["The default ",(0,s.jsx)(o.a,{href:"/session-id",children:"session ID"})," is the flow ID.\nCustom session IDs can help isolate unique conversation threads to keep the LLM's context clean, and they can help identify specific conversations in flow logs to make debugging easier."]}),(0,s.jsxs)(o.p,{children:["This command uses response streaming because the Pok\xe9dex flow can return a large amount of text.\nTo use batching, set ",(0,s.jsx)(o.code,{children:"?stream=false"}),"."]})]}),"\n"]}),"\n",(0,s.jsxs)(o.li,{children:["\n",(0,s.jsx)(o.p,{children:"Verify that the request succeeds and the response is valid, depending on the specific flow you ran."}),"\n",(0,s.jsx)(o.p,{children:"This confirms that your Langflow Docker image is correctly configured and this flow is accessible through the Langflow API server that is hosted on the container.\nWhen you build and test your entire application stack, your front-end application can use Langflow API requests to trigger the flows served by your Langflow container in the same way you manually tested the flow in the previous step."}),"\n",(0,s.jsxs)(o.p,{children:["This example triggered a flow by sending chat input to the ",(0,s.jsx)(o.code,{children:"/v1/run/$FLOW_ID"})," endpoint.\nFor more examples of flow triggers, see ",(0,s.jsx)(o.a,{href:"/webhook",children:"Trigger flows with webhooks"})," and the tutorial to ",(0,s.jsx)(o.a,{href:"/chat-with-files",children:"Create a chatbot that can ingest files"}),"."]}),"\n"]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,s.jsx)(o.h2,{id:"deploy-docker",children:"Deploy to Docker Hub and Kubernetes"}),"\n",(0,s.jsx)(o.p,{children:"When you're ready to share your application with the world, you need to serve Langflow in a production environment.\nFor more information about deploying Langflow, see the following:"}),"\n",(0,s.jsxs)(o.ul,{children:["\n",(0,s.jsx)(o.li,{children:(0,s.jsx)(o.a,{href:"/deployment-overview",children:"Learn about Langflow deployments"})}),"\n",(0,s.jsx)(o.li,{children:(0,s.jsx)(o.a,{href:"/deployment-docker",children:"Deploy Langflow on Docker"})}),"\n",(0,s.jsx)(o.li,{children:(0,s.jsx)(o.a,{href:"/deployment-kubernetes-prod",children:"Deploy the Langflow production environment on Kubernetes"})}),"\n"]})]})}function y(e={}){const{wrapper:o}={...(0,r.R)(),...e.components};return o?(0,s.jsx)(o,{...e,children:(0,s.jsx)(g,{...e})}):g(e)}function m(e,o){throw new Error("Expected "+(o?"component":"object")+" `"+e+"` to be defined: you likely forgot to import, pass, or provide it.")}},63905:(e,o,n)=>{n.d(o,{Ay:()=>i,RM:()=>r});var t=n(74848),s=n(28453);const r=[];function l(e){const o={a:"a",admonition:"admonition",p:"p",...(0,s.R)(),...e.components};return(0,t.jsx)(o.admonition,{type:"tip",children:(0,t.jsxs)(o.p,{children:["Podman can be used instead of Docker for all commands shown here. For more information, see the ",(0,t.jsx)(o.a,{href:"https://podman.io/docs",children:"Podman documentation"}),"."]})})}function i(e={}){const{wrapper:o}={...(0,s.R)(),...e.components};return o?(0,t.jsx)(o,{...e,children:(0,t.jsx)(l,{...e})}):l(e)}}}]);