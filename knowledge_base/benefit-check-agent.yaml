id: urn:agent:genesis:benefit_check:1
name: Benefit Check Agent
fullyQualifiedName: genesis.autonomize.ai.benefit_check
description: Orchestrates comprehensive healthcare authorization analysis using specialized agents
domain: autonomize.ai
subDomain: benefit-validation
version: 1.0.0
environment: production
agentOwner: benefit-orchestration@autonomize.ai
agentOwnerDisplayName: Benefit Orchestration Team
email: benefit-orchestration@autonomize.ai
status: ACTIVE
variables:
- name: llm_provider
  type: string
  required: false
  default: Azure OpenAI
  description: LLM provider (AzureOpenAI, OpenAI, Anthropic, etc.)
- name: model_name
  type: string
  required: false
  default: gpt-4
  description: Model name to use for orchestration
- name: temperature
  type: float
  required: false
  default: 0.2
  description: Temperature for model generation
- name: max_iterations
  type: integer
  required: false
  default: 15
  description: Maximum iterations for orchestration
- name: benefit_collections
  type: string
  required: false
  default: benefit_policies,authorization_guidelines
  description: Knowledge hub collections for benefit search
tags:
- UM
- orchestrator
- benefit-validation
- agent-as-tool
- healthcare
- authorization
- coordinator
kind: Single Agent
agentGoal: Orchestrate comprehensive healthcare authorization analysis by evaluating service code eligibility, coverage benefits,
  and utilization limits
targetUser: internal
valueGeneration: ProcessAutomation
interactionMode: MultiTurnConversation
runMode: RealTime
agencyLevel: ModelDrivenWorkflow
toolsUse: true
learningCapability: None
reusability:
  asTools: true
  standalone: true
  provides:
    toolName: BenefitChecker
    toolDescription: Comprehensive benefit validation orchestrator
    inputSchema:
      type: object
      properties:
        member_id:
          type: string
          description: Member ID
        service_codes:
          type: array
          items:
            type: string
          description: Service codes to validate
        service_date:
          type: string
          description: Proposed service date
        provider_id:
          type: string
          description: Provider ID
        diagnosis_codes:
          type: array
          items:
            type: string
          description: Diagnosis codes
      required:
      - member_id
      - service_codes
    outputSchema:
      type: object
      properties:
        authorization_decision:
          type: object
        coverage_details:
          type: object
        member_costs:
          type: object
        recommendations:
          type: array
  dependencies:
  - agentId: urn:agent:genesis:eoc_check:1
    version: '>=1.0.0'
    required: true
  - agentId: urn:agent:genesis:accumulator_check:1
    version: '>=1.0.0'
    required: true
sampleInput:
  member_id: M123456789
  service_codes:
  - '70553'
  - '72148'
  service_date: '2024-03-15'
  provider_id: '1234567890'
  diagnosis_codes:
  - M79.3
  - R51.9
  line_of_business: Medicare
  state: WA
promptConfiguration:
  basePromptId: benefit_check_orchestrator_v1
  customPrompt: 'You are a Benefit Check Orchestrator. You have access to specialized agents as tools:

    1. EOCChecker - Validates services against Evidence of Coverage

    2. AccumulatorChecker - Checks deductibles and out-of-pocket maximums

    3. KnowledgeHubSearch - Searches benefit documents

    4. PALookup - Checks prior authorization requirements

    5. EncoderPro - Medical coding validation


    Process benefit checks by:

    1. First, validate the service codes using EncoderPro

    2. Check EOC coverage using EOCChecker

    3. Verify accumulator status using AccumulatorChecker

    4. Check PA requirements using PALookup

    5. Search for additional benefit details if needed

    6. Provide comprehensive benefit determination


    Always provide clear cost estimates and coverage explanations.

    '
components:
- id: benefit-request
  name: Benefit Check Request
  kind: Data
  type: genesis:chat_input
  description: Member and service information for benefit check
  provides:
  - useAs: input
    in: benefit-orchestrator
    description: Benefit check request
- id: benefit-orchestrator-prompt
  name: Agent Instructions
  kind: Prompt
  type: genesis:prompt_template
  description: Prompt template for agent instructions
  config:
    saved_prompt: benefit_check_prompt_v1
    template: 'You are a Benefit Check Orchestrator. You have access to specialized agents as tools:

      1. EOCChecker - Validates services against Evidence of Coverage

      2. AccumulatorChecker - Checks deductibles and out-of-pocket maximums

      3. KnowledgeHubSearch - Searches benefit documents

      4. PALookup - Checks prior authorization requirements

      5. EncoderPro - Medical coding validation

      6. QNXT History - Claims and authorization history


      Process benefit checks by:

      1. First, validate the service codes using EncoderPro

      2. Check EOC coverage using EOCChecker

      3. Verify accumulator status using AccumulatorChecker

      4. Check PA requirements using PALookup

      5. Search for additional benefit details if needed

      6. Check member history with QNXT if relevant

      7. Provide comprehensive benefit determination


      Always provide:

      - Coverage determination (covered/not covered)

      - Member cost responsibility

      - Prior authorization requirements

      - Any limitations or exclusions

      - Clear explanations for members'
  provides:
  - useAs: system_prompt
    in: benefit-orchestrator
    description: System prompt for the agent
- id: benefit-orchestrator
  name: Benefit Check Orchestrator
  kind: Agent
  type: genesis:agent
  description: Main orchestrator with access to other agents as tools
  config:
    agent_llm: Azure OpenAI
    model_name: gpt-4
    temperature: 0.2
    max_tokens: 3000
    handle_parsing_errors: true
    max_iterations: 15
    verbose: true
  provides:
  - useAs: input
    in: benefit-formatter
    description: Benefit determination results
- id: eoc-checker-tool
  name: EOC Checker Tool
  kind: Agent
  type: $ref:eoc_check
  description: EOC validation agent used as tool
  asTools: true
  config:
    tool_name: EOCChecker
    tool_description: Validate services against Evidence of Coverage
  provides:
  - useAs: tools
    in: benefit-orchestrator
    description: EOC validation tool
- id: accumulator-tool
  name: Accumulator Checker Tool
  kind: Agent
  type: $ref:accumulator_check
  description: Accumulator check agent used as tool
  asTools: true
  config:
    tool_name: AccumulatorChecker
    tool_description: Check deductibles and out-of-pocket status
  provides:
  - useAs: tools
    in: benefit-orchestrator
    description: Accumulator check tool
- id: benefit-search
  name: Benefit Document Search
  kind: Tool
  type: genesis:knowledge_hub_search
  description: Search benefit documents
  asTools: true
  config:
    collections:
    - benefit_policies
    - authorization_guidelines
    search_type: similarity
    top_k: 5
  provides:
  - useAs: tools
    in: benefit-orchestrator
    description: Document search tool
- id: pa-lookup
  name: PA Lookup
  kind: Tool
  type: genesis:pa_lookup
  description: Check prior authorization requirements
  asTools: true
  config:
    include_criteria: true
    check_alternatives: true
  provides:
  - useAs: tools
    in: benefit-orchestrator
    description: PA requirements tool
- id: encoder-pro
  name: Encoder Pro
  kind: Tool
  type: genesis:encoder_pro
  description: Medical coding validation and lookup
  asTools: true
  config:
    validate_codes: true
    include_descriptions: true
    check_compatibility: true
  provides:
  - useAs: tools
    in: benefit-orchestrator
    description: Medical coding tool
- id: qnxt-history
  name: QNXT Claim & Auth History
  kind: Tool
  type: genesis:qnext_auth_history
  description: Retrieve claims and authorization history
  asTools: true
  config:
    lookback_months: 12
    include_claims: true
    include_authorizations: true
  provides:
  - useAs: tools
    in: benefit-orchestrator
    description: Member history tool
- id: conversation-memory
  name: Conversation Memory
  kind: Memory
  type: genesis:conversation_memory
  description: Track conversation context
  config:
    memory_key: benefit_check_memory
    max_messages: 50
  provides:
  - useAs: memory
    in: benefit-orchestrator
    description: Conversation context
- id: benefit-formatter
  name: Benefit Decision
  kind: Data
  type: genesis:chat_output
  description: Display comprehensive benefit decision
  config:
    should_store_message: true
outputs:
- benefit_determination
- coverage_summary
- cost_estimate
- authorization_requirements
- tool_usage_summary
kpis:
- name: Orchestration Success Rate
  category: Quality
  valueType: percentage
  target: 98
  unit: '%'
  description: Percentage of successful benefit checks
- name: Total Processing Time
  category: Performance
  valueType: numeric
  target: 8000
  unit: ms
  description: Total time for comprehensive benefit analysis
- name: Agent Tool Utilization
  category: Efficiency
  valueType: percentage
  target: 85
  unit: '%'
  description: Percentage of checks using multiple agent tools
- name: Decision Accuracy
  category: Quality
  valueType: percentage
  target: 96
  unit: '%'
  description: Accuracy of benefit determinations when audited
securityInfo:
  visibility: Private
  confidentiality: High
  gdprSensitive: true
