[project]
name = "langflow"
version = "1.4.3"
description = "A Python package with a built-in web application"
requires-python = ">=3.10,<3.14"
license = "MIT"
keywords = ["nlp", "langchain", "openai", "gpt", "gui"]
readme = "README.md"
maintainers = [
    { name = "Carlos Coelho", email = "carlos@langflow.org" },
    { name = "Cristhian Zanforlin", email = "cristhian.lousa@gmail.com" },
    { name = "Gabriel Almeida", email = "gabriel@langflow.org" },
    { name = "Lucas Eduoli", email = "lucaseduoli@gmail.com" },
    { name = "OtÃ¡vio Anovazzi", email = "otavio2204@gmail.com" },
    { name = "Rodrigo Nader", email = "rodrigo@langflow.org" },
    { name = "Italo dos Anjos", email = "italojohnnydosanjos@gmail.com" },
]
# Define your main dependencies here
dependencies = [
    "langflow-base[complete]==0.1.5",
]

[dependency-groups]
dev = [
    "pytest-instafail>=0.5.0",
    "types-redis>=4.6.0.5",
    "ipykernel>=6.29.0",
    "mypy>=1.11.0",
    "ruff>=0.9.7,<0.10",
    "httpx>=0.27.0",
    "pytest>=8.2.0",
    "types-requests>=2.32.0",
    "requests>=2.32.0",
    "pytest-cov>=5.0.0",
    "pandas-stubs>=2.1.4.231227",
    "types-pillow>=10.2.0.20240213",
    "types-pyyaml>=6.0.12.8",
    "types-python-jose>=3.3.4.8",
    "types-passlib>=1.7.7.13",
    "pytest-mock>=3.14.0",
    "pytest-xdist>=3.6.0",
    "types-pywin32>=306.0.0.4",
    "types-google-cloud-ndb>=2.2.0.0",
    "pytest-sugar>=1.0.0",
    "respx>=0.21.1",
    "pytest-asyncio>=0.23.0",
    "pytest-profiling>=1.7.0",
    "pre-commit>=3.7.0",
    "vulture>=2.11",
    "dictdiffer>=0.9.0",
    "pytest-split>=0.9.0",
    "pytest-flakefinder>=1.1.0",
    "types-markdown>=3.7.0.20240822",
    "packaging>=24.1,<25.0",
    "asgi-lifespan>=2.1.0",
    "pytest-github-actions-annotate-failures>=0.2.0",
    "blockbuster>=1.5.20,<1.6",
    "types-aiofiles>=24.1.0.20240626",
    "codeflash>=0.8.4",
    "hypothesis>=6.123.17",
    "locust>=2.32.9",
    "pytest-rerunfailures>=15.0",
    "scrapegraph-py>=1.10.2",
    "pydantic-ai>=0.0.19",
    'elevenlabs==1.58.1; python_version == "3.12"',
    'elevenlabs>=1.52.0; python_version != "3.12"',
    "faker>=37.0.0",
    "pytest-timeout>=2.3.1",
    "types-cachetools>=5.5.0.20240820",
]

[tool.uv.sources]
langflow-base = { workspace = true }
langflow = { workspace = true }

[tool.uv.workspace]
members = ["src/backend/base", "."]

[tool.hatch.build.targets.wheel]
packages = ["src/backend/langflow"]

[project.urls]
Repository = "https://github.com/langflow-ai/langflow"
Documentation = "https://docs.langflow.org"

[project.optional-dependencies]
couchbase = [
    "couchbase>=4.2.1"
]
cassio = [
    "cassio>=0.1.7"
]
local = [
    "llama-cpp-python~=0.2.0",
    "sentence-transformers>=2.3.1",
    "ctransformers>=0.2.10"
]
clickhouse-connect = [
    "clickhouse-connect==0.7.19"
]

nv-ingest = [
    "nv-ingest-api==2025.4.22.dev20250422",
    "nv-ingest-client==2025.4.22.dev20250422",
]

postgresql = [
  "sqlalchemy[postgresql_psycopg2binary]",
    "sqlalchemy[postgresql_psycopg]",

]

[project.scripts]
langflow = "langflow.__main__:main"

[tool.codespell]
skip = '.git,*.pdf,*.svg,*.pdf,*.yaml,*.ipynb,poetry.lock,*.min.js,*.css,package-lock.json,*.trig.,**/node_modules/**,./stuff/*,*.csv'
# Ignore latin etc
ignore-regex = '.*(Stati Uniti|Tense=Pres).*'


[tool.pytest.ini_options]
timeout = 120
timeout_method = "signal"
minversion = "6.0"
testpaths = ["tests", "integration"]
console_output_style = "progress"
filterwarnings = ["ignore::DeprecationWarning", "ignore::ResourceWarning"]
log_cli = true
log_cli_format = "%(asctime)s [%(levelname)8s] %(message)s (%(filename)s:%(lineno)s)"
log_cli_date_format = "%Y-%m-%d %H:%M:%S"
markers = ["async_test", "api_key_required", "no_blockbuster", "benchmark"]
asyncio_mode = "auto"
asyncio_default_fixture_loop_scope = "function"

[tool.coverage.run]
command_line = """
    -m pytest --ignore=tests/integration
    --cov --cov-report=term --cov-report=html
    --instafail -ra -n auto -m "not api_key_required"
"""
source = ["src/backend/base/langflow/"]
omit = ["*/alembic/*", "tests/*", "*/__init__.py"]


[tool.coverage.report]
sort = "Stmts"
skip_empty = true
show_missing = false
ignore_errors = true


[tool.coverage.html]
directory = "coverage"


[tool.ruff]
exclude = ["src/backend/base/langflow/alembic/*", "src/frontend/tests/assets/*"]
line-length = 120

[tool.ruff.lint]
pydocstyle.convention = "google"
select = ["ALL"]
ignore = [
    "C90", # McCabe complexity
    "CPY", # Missing copyright
    "COM812", # Messes with the formatter
    "ERA", # Eradicate commented-out code
    "FIX002", # Line contains TODO
    "ISC001", # Messes with the formatter
    "PERF203", # Rarely useful
    "PLR09", # Too many something (arg, statements, etc)
    "RUF012", # Pydantic models are currently not well detected. See https://github.com/astral-sh/ruff/issues/13630
    "TD002", # Missing author in TODO
    "TD003", # Missing issue link in TODO
    "TRY301", # A bit too harsh (Abstract `raise` to an inner function)

    # Rules that are TODOs
    "ANN",
]

# Preview rules that are not yet activated
external = ["RUF027"]

[tool.ruff.lint.per-file-ignores]
"scripts/*" = [
    "D1",
    "INP",
    "T201",
]
"src/backend/tests/*" = [
    "D1",
    "PLR2004",
    "S101",
    "SLF001",
]

[tool.ruff.lint.flake8-builtins]
builtins-allowed-modules = [ "io", "logging", "socket"]

[tool.mypy]
plugins = ["pydantic.mypy"]
follow_imports = "skip"
disable_error_code = ["type-var"]
namespace_packages = true
mypy_path = "langflow"
ignore_missing_imports = true

[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"
