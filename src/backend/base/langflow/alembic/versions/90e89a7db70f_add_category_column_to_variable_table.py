"""Add category column to variable table.

Revision ID: 90e89a7db70f
Revises: 66f72f04a1de
Create Date: 2025-06-30 13:50:12.878778

"""

from collections.abc import Sequence

import sqlalchemy as sa
import sqlmodel
from alembic import op

# revision identifiers, used by Alembic.
revision: str = "90e89a7db70f"
down_revision: str | None = "66f72f04a1de"
branch_labels: str | Sequence[str] | None = None
depends_on: str | Sequence[str] | None = None


def upgrade() -> None:
    conn = op.get_bind()
    inspector = sa.inspect(conn)  # type: ignore[arg-type]
    column_names = [column["name"] for column in inspector.get_columns("variable")]
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table("variable", schema=None) as batch_op:
        if "category" not in column_names:
            batch_op.add_column(sa.Column("category", sqlmodel.sql.sqltypes.AutoString(), nullable=True))

    # ### end Alembic commands ###


def downgrade() -> None:
    conn = op.get_bind()
    inspector = sa.inspect(conn)  # type: ignore[arg-type]
    column_names = [column["name"] for column in inspector.get_columns("variable")]
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table("variable", schema=None) as batch_op:
        if "category" in column_names:
            batch_op.drop_column("category")

    # ### end Alembic commands ###
