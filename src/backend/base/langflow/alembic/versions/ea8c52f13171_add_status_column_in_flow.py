"""add status column in flow.

Revision ID: ea8c52f13171
Revises: d37bc4322900
Create Date: 2025-05-07 14:30:49.260805

"""

from collections.abc import Sequence

import sqlalchemy as sa
from alembic import op

from langflow.utils import migration

# revision identifiers, used by Alembic.
revision: str = "ea8c52f13171" # pragma: allowlist secret
down_revision: str | None = "d37bc4322900" # pragma: allowlist secret
branch_labels: str | Sequence[str] | None = None
depends_on: str | Sequence[str] | None = None


def upgrade() -> None:
    conn = op.get_bind()
    # ### commands auto generated by Alembic - please adjust! ###
    deployment_state_enum = sa.Enum("DRAFT", "DEPLOYED", name="deployment_state_enum")
    deployment_state_enum.create(conn, checkfirst=True)
    with op.batch_alter_table("flow", schema=None) as batch_op:
        if not migration.column_exists(table_name="flow", column_name="status", conn=conn):
            batch_op.add_column(
                sa.Column("status", deployment_state_enum, server_default=sa.text("'DRAFT'"), nullable=False)
            )

    # ### end Alembic commands ###


def downgrade() -> None:
    conn = op.get_bind()
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table("flow", schema=None) as batch_op:
        if migration.column_exists(table_name="flow", column_name="status", conn=conn):
            batch_op.drop_column("status")

    deployment_state_enum = sa.Enum("DRAFT", "DEPLOYED", name="deployment_state_enum")
    deployment_state_enum.drop(conn, checkfirst=True)

    # ### end Alembic commands ###
