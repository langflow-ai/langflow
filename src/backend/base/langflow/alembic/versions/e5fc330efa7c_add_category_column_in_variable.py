"""Add category column in variable.

Revision ID: e5fc330efa7c
Revises: 0882f9657f22
Create Date: 2025-03-14 15:12:39.234016

"""

from collections.abc import Sequence

import sqlalchemy as sa
import sqlmodel
from alembic import op

# revision identifiers, used by Alembic.
revision: str = "e5fc330efa7c"
down_revision: str | None = "0882f9657f22"
branch_labels: str | Sequence[str] | None = None
depends_on: str | Sequence[str] | None = None


def upgrade() -> None:
    conn = op.get_bind()
    inspector = sa.inspect(conn)  # type: ignore[arg-type]
    # ### commands auto generated by Alembic - please adjust! ###
    columns = inspector.get_columns("variable")
    column_names = [column["name"] for column in columns]

    with op.batch_alter_table("variable", schema=None) as batch_op:
        if "category" not in column_names:
            # Add new column as non-nullable with default
            batch_op.add_column(
                sa.Column("category", sqlmodel.sql.sqltypes.AutoString(), nullable=False, server_default="global")
            )
        else:
            # Check if column exists but is nullable - need to make it non-nullable
            category_column = next((col for col in columns if col["name"] == "category"), None)
            if category_column and category_column.get("nullable", True):
                # First update any NULL values to 'global'
                op.execute("UPDATE variable SET category = 'global' WHERE category IS NULL")
                # Then make the column non-nullable
                batch_op.alter_column("category", nullable=False, server_default="global")

    # ### end Alembic commands ###


def downgrade() -> None:
    # Get current connection and inspector
    conn = op.get_bind()
    inspector = sa.inspect(conn)  # type: ignore[arg-type]
    # ### commands auto generated by Alembic - please adjust! ###
    column_names = [column["name"] for column in inspector.get_columns("variable")]
    with op.batch_alter_table("variable", schema=None) as batch_op:
        if "category" in column_names:
            batch_op.drop_column("category")

    # ### end Alembic commands ###
