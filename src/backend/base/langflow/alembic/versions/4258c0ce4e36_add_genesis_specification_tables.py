"""Add Genesis specification tables

Revision ID: 4258c0ce4e36
Revises: d37bc4322900
Create Date: 2025-10-04 11:24:08.253976

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
import sqlmodel
from sqlalchemy.engine.reflection import Inspector
from langflow.utils import migration


# revision identifiers, used by Alembic.
revision: str = '4258c0ce4e36'
down_revision: Union[str, None] = 'd37bc4322900'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    conn = op.get_bind()
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('agentspecification',
    sa.Column('name', sqlmodel.sql.sqltypes.AutoString(length=255), nullable=False),
    sa.Column('version', sqlmodel.sql.sqltypes.AutoString(length=50), nullable=False),
    sa.Column('spec_yaml', sa.Text(), nullable=False),
    sa.Column('spec_json', sa.JSON(), nullable=False),
    sa.Column('domain', sqlmodel.sql.sqltypes.AutoString(length=255), nullable=False),
    sa.Column('subdomain', sqlmodel.sql.sqltypes.AutoString(length=255), nullable=True),
    sa.Column('owner_email', sqlmodel.sql.sqltypes.AutoString(length=255), nullable=False),
    sa.Column('fully_qualified_name', sqlmodel.sql.sqltypes.AutoString(length=500), nullable=False),
    sa.Column('kind', sa.Enum('Single Agent', 'Multi Agent', 'Orchestrator', name='agent_kind_enum'), server_default=sa.text("'Single Agent'"), nullable=False),
    sa.Column('target_user', sa.Enum('internal', 'external', 'both', name='target_user_enum'), server_default=sa.text("'internal'"), nullable=False),
    sa.Column('value_generation', sqlmodel.sql.sqltypes.AutoString(length=100), nullable=True),
    sa.Column('interaction_mode', sqlmodel.sql.sqltypes.AutoString(length=100), nullable=True),
    sa.Column('run_mode', sqlmodel.sql.sqltypes.AutoString(length=50), nullable=True),
    sa.Column('agency_level', sqlmodel.sql.sqltypes.AutoString(length=100), nullable=True),
    sa.Column('status', sa.Enum('draft', 'published', 'deprecated', name='specification_status_enum'), server_default=sa.text("'draft'"), nullable=False),
    sa.Column('goal', sa.Text(), nullable=True),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('tags', sa.JSON(), nullable=True),
    sa.Column('components', sa.JSON(), nullable=True),
    sa.Column('variables', sa.JSON(), nullable=True),
    sa.Column('reusability_score', sa.Float(), nullable=True),
    sa.Column('complexity_score', sa.Float(), nullable=True),
    sa.Column('deployment_mode', sqlmodel.sql.sqltypes.AutoString(length=50), nullable=True),
    sa.Column('docker_image', sqlmodel.sql.sqltypes.AutoString(length=500), nullable=True),
    sa.Column('helm_release', sqlmodel.sql.sqltypes.AutoString(length=255), nullable=True),
    sa.Column('api_endpoint', sqlmodel.sql.sqltypes.AutoString(length=500), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.Column('published_at', sa.DateTime(), nullable=True),
    sa.Column('id', sa.Uuid(), nullable=False),
    sa.Column('user_id', sa.Uuid(), nullable=True),
    sa.Column('flow_id', sa.Uuid(), nullable=True),
    sa.ForeignKeyConstraint(['flow_id'], ['flow.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('name', 'version', name='unique_spec_version'),
    sa.UniqueConstraint('user_id', 'name', name='unique_user_spec_name')
    )
    with op.batch_alter_table('agentspecification', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_agentspecification_description'), ['description'], unique=False)
        batch_op.create_index(batch_op.f('ix_agentspecification_domain'), ['domain'], unique=False)
        batch_op.create_index(batch_op.f('ix_agentspecification_flow_id'), ['flow_id'], unique=False)
        batch_op.create_index(batch_op.f('ix_agentspecification_name'), ['name'], unique=False)
        batch_op.create_index(batch_op.f('ix_agentspecification_owner_email'), ['owner_email'], unique=False)
        batch_op.create_index(batch_op.f('ix_agentspecification_reusability_score'), ['reusability_score'], unique=False)
        batch_op.create_index(batch_op.f('ix_agentspecification_user_id'), ['user_id'], unique=False)
        batch_op.create_index(batch_op.f('ix_agentspecification_version'), ['version'], unique=False)

    op.create_table('specificationcomponent',
    sa.Column('component_id', sqlmodel.sql.sqltypes.AutoString(length=255), nullable=False),
    sa.Column('component_type', sqlmodel.sql.sqltypes.AutoString(length=100), nullable=False),
    sa.Column('component_config', sa.JSON(), nullable=True),
    sa.Column('provides_config', sa.JSON(), nullable=True),
    sa.Column('reusable', sa.Boolean(), nullable=False),
    sa.Column('usage_count', sa.Integer(), nullable=False),
    sa.Column('id', sa.Uuid(), nullable=False),
    sa.Column('spec_id', sa.Uuid(), nullable=False),
    sa.ForeignKeyConstraint(['spec_id'], ['agentspecification.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('specificationcomponent', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_specificationcomponent_component_id'), ['component_id'], unique=False)
        batch_op.create_index(batch_op.f('ix_specificationcomponent_component_type'), ['component_type'], unique=False)
        batch_op.create_index(batch_op.f('ix_specificationcomponent_spec_id'), ['spec_id'], unique=False)

    op.create_table('specificationusage',
    sa.Column('usage_type', sqlmodel.sql.sqltypes.AutoString(length=50), nullable=False),
    sa.Column('context_info', sa.JSON(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('id', sa.Uuid(), nullable=False),
    sa.Column('spec_id', sa.Uuid(), nullable=False),
    sa.Column('user_id', sa.Uuid(), nullable=True),
    sa.ForeignKeyConstraint(['spec_id'], ['agentspecification.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('specificationusage', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_specificationusage_spec_id'), ['spec_id'], unique=False)

    op.create_table('componentrelationship',
    sa.Column('relationship_type', sqlmodel.sql.sqltypes.AutoString(length=50), nullable=False),
    sa.Column('confidence_score', sa.Float(), nullable=True),
    sa.Column('id', sa.Uuid(), nullable=False),
    sa.Column('source_component_id', sa.Uuid(), nullable=False),
    sa.Column('target_component_id', sa.Uuid(), nullable=False),
    sa.ForeignKeyConstraint(['source_component_id'], ['specificationcomponent.id'], ),
    sa.ForeignKeyConstraint(['target_component_id'], ['specificationcomponent.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    conn = op.get_bind()
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('componentrelationship')
    with op.batch_alter_table('specificationusage', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_specificationusage_spec_id'))

    op.drop_table('specificationusage')
    with op.batch_alter_table('specificationcomponent', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_specificationcomponent_spec_id'))
        batch_op.drop_index(batch_op.f('ix_specificationcomponent_component_type'))
        batch_op.drop_index(batch_op.f('ix_specificationcomponent_component_id'))

    op.drop_table('specificationcomponent')
    with op.batch_alter_table('agentspecification', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_agentspecification_version'))
        batch_op.drop_index(batch_op.f('ix_agentspecification_user_id'))
        batch_op.drop_index(batch_op.f('ix_agentspecification_reusability_score'))
        batch_op.drop_index(batch_op.f('ix_agentspecification_owner_email'))
        batch_op.drop_index(batch_op.f('ix_agentspecification_name'))
        batch_op.drop_index(batch_op.f('ix_agentspecification_flow_id'))
        batch_op.drop_index(batch_op.f('ix_agentspecification_domain'))
        batch_op.drop_index(batch_op.f('ix_agentspecification_description'))

    op.drop_table('agentspecification')
    # ### end Alembic commands ###
