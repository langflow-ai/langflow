{
  "2b3a59d8b68b182d": {
    "agent_id": "2b3a59d8b68b182d",
    "name": "Update Episode Agent",
    "description": "Update case management system with adjudication results",
    "agent_goal": "Write back the adjudication status, summary, and rationale to the client's system of record",
    "version": "1.0.0",
    "components": [
      {
        "component_id": "input",
        "component_type": "genesis:chat_input",
        "name": "Request Input",
        "description": "Input for update episode agent",
        "purpose": "input",
        "category": "data",
        "config_schema": {},
        "input_data_types": [],
        "output_data_types": [
          "text",
          "json"
        ],
        "input_schema": null,
        "output_schema": null,
        "provides": [
          {
            "useAs": "input",
            "in": "main-agent",
            "description": "Input data"
          }
        ],
        "accepts_input_from": [],
        "sends_output_to": [
          "main-agent"
        ],
        "required_config": [],
        "optional_config": [],
        "capabilities": [],
        "usage_examples": [],
        "tags": []
      },
      {
        "component_id": "main-agent-prompt",
        "component_type": "genesis:prompt_template",
        "name": "Agent Instructions",
        "description": "Prompt template for agent instructions",
        "purpose": "unknown",
        "category": "unknown",
        "config_schema": {},
        "input_data_types": [
          "text",
          "json"
        ],
        "output_data_types": [
          "text",
          "json"
        ],
        "input_schema": null,
        "output_schema": null,
        "provides": [
          {
            "useAs": "system_prompt",
            "in": "main-agent",
            "description": "System prompt for the agent"
          }
        ],
        "accepts_input_from": [],
        "sends_output_to": [
          "main-agent"
        ],
        "required_config": [],
        "optional_config": [],
        "capabilities": [],
        "usage_examples": [],
        "tags": []
      },
      {
        "component_id": "main-agent",
        "component_type": "genesis:agent",
        "name": "Update Episode Agent",
        "description": "Update case management system with adjudication results",
        "purpose": "processing",
        "category": "agent",
        "config_schema": {
          "temperature": 0.1,
          "max_tokens": 2000
        },
        "input_data_types": [
          "text",
          "json",
          "structured_data",
          "tool_results"
        ],
        "output_data_types": [
          "text",
          "json",
          "structured_data",
          "agent_response"
        ],
        "input_schema": null,
        "output_schema": null,
        "provides": [
          {
            "useAs": "input",
            "in": "output",
            "description": "Results"
          }
        ],
        "accepts_input_from": [],
        "sends_output_to": [
          "output"
        ],
        "required_config": [],
        "optional_config": [
          "temperature",
          "max_tokens"
        ],
        "capabilities": [],
        "usage_examples": [],
        "tags": []
      },
      {
        "component_id": "tool-1",
        "component_type": "genesis:mcp_tool",
        "name": "Api Component",
        "description": "Tool for update episode agent via MCP",
        "purpose": "mcp_integration",
        "category": "mcp",
        "config_schema": {},
        "input_data_types": [
          "text",
          "json",
          "structured_data"
        ],
        "output_data_types": [
          "text",
          "json",
          "structured_data",
          "tool_response"
        ],
        "input_schema": null,
        "output_schema": null,
        "provides": [
          {
            "useAs": "tools",
            "in": "main-agent",
            "description": "Api Component tool"
          }
        ],
        "accepts_input_from": [],
        "sends_output_to": [
          "main-agent"
        ],
        "required_config": [],
        "optional_config": [],
        "capabilities": [],
        "usage_examples": [],
        "tags": []
      },
      {
        "component_id": "output",
        "component_type": "genesis:chat_output",
        "name": "Results Output",
        "description": "Display results",
        "purpose": "output",
        "category": "data",
        "config_schema": {},
        "input_data_types": [
          "text",
          "json",
          "structured_data"
        ],
        "output_data_types": [],
        "input_schema": null,
        "output_schema": null,
        "provides": [],
        "accepts_input_from": [],
        "sends_output_to": [],
        "required_config": [],
        "optional_config": [],
        "capabilities": [],
        "usage_examples": [],
        "tags": []
      }
    ],
    "component_types": [
      "genesis:mcp_tool",
      "genesis:agent",
      "genesis:prompt_template",
      "genesis:chat_output",
      "genesis:chat_input"
    ],
    "component_categories": [
      "data",
      "unknown",
      "mcp",
      "agent"
    ],
    "capabilities": [
      "external_system_integration"
    ],
    "input_components": [
      "input"
    ],
    "output_components": [
      "output"
    ],
    "tool_components": [],
    "model_components": [],
    "agent_components": [
      "main-agent"
    ],
    "data_flow": [
      {
        "from_component": "input",
        "to_component": "main-agent",
        "from_type": "genesis:chat_input",
        "to_type": "genesis:agent",
        "from_category": "data",
        "to_category": "agent",
        "data_purpose": "input"
      },
      {
        "from_component": "main-agent-prompt",
        "to_component": "main-agent",
        "from_type": "genesis:prompt_template",
        "to_type": "genesis:agent",
        "from_category": "unknown",
        "to_category": "agent",
        "data_purpose": "unknown"
      },
      {
        "from_component": "main-agent",
        "to_component": "output",
        "from_type": "genesis:agent",
        "to_type": "genesis:chat_output",
        "from_category": "agent",
        "to_category": "data",
        "data_purpose": "processing"
      },
      {
        "from_component": "tool-1",
        "to_component": "main-agent",
        "from_type": "genesis:mcp_tool",
        "to_type": "genesis:agent",
        "from_category": "mcp",
        "to_category": "agent",
        "data_purpose": "mcp_integration"
      }
    ],
    "complexity_score": 13,
    "tags": [],
    "domain": "integration",
    "file_path": "genesis-agents-cli/examples/agents/update-episode-agent.yaml",
    "created_at": "2025-10-08T14:22:10.219871"
  },
  "f611a719a46dba9c": {
    "agent_id": "f611a719a46dba9c",
    "name": "Classification Agent",
    "description": "Classify incoming prior authorization faxes into specific categories to route them correctly",
    "agent_goal": "Classify incoming prior authorization faxes into specific categories such as Radiology, DME, Pharmacy, or MSK to route them into the correct processing pipeline",
    "version": "1.0.0",
    "components": [
      {
        "component_id": "document-input",
        "component_type": "genesis:chat_input",
        "name": "Document Input",
        "description": "OCR text from fax document for classification",
        "purpose": "input",
        "category": "data",
        "config_schema": {},
        "input_data_types": [],
        "output_data_types": [
          "text",
          "json"
        ],
        "input_schema": null,
        "output_schema": null,
        "provides": [
          {
            "in": "classification-agent",
            "useAs": "input",
            "description": "Document text to classify"
          }
        ],
        "accepts_input_from": [],
        "sends_output_to": [
          "classification-agent"
        ],
        "required_config": [],
        "optional_config": [],
        "capabilities": [],
        "usage_examples": [],
        "tags": []
      },
      {
        "component_id": "classification-agent",
        "component_type": "genesis:agent",
        "name": "Document Classification Agent",
        "description": "Classifies PA requests by type and domain",
        "purpose": "processing",
        "category": "agent",
        "config_schema": {
          "has_system_prompt": true,
          "temperature": 0.1,
          "max_tokens": 1000
        },
        "input_data_types": [
          "text",
          "json",
          "structured_data",
          "tool_results"
        ],
        "output_data_types": [
          "text",
          "json",
          "structured_data",
          "agent_response"
        ],
        "input_schema": null,
        "output_schema": null,
        "provides": [
          {
            "in": "classification-output",
            "useAs": "input",
            "description": "Classification results"
          }
        ],
        "accepts_input_from": [],
        "sends_output_to": [
          "classification-output"
        ],
        "required_config": [],
        "optional_config": [
          "system_prompt",
          "temperature",
          "max_tokens"
        ],
        "capabilities": [],
        "usage_examples": [],
        "tags": []
      },
      {
        "component_id": "classification-output",
        "component_type": "genesis:chat_output",
        "name": "Classification Results",
        "description": "Display classification results and routing",
        "purpose": "output",
        "category": "data",
        "config_schema": {},
        "input_data_types": [
          "text",
          "json",
          "structured_data"
        ],
        "output_data_types": [],
        "input_schema": null,
        "output_schema": null,
        "provides": [],
        "accepts_input_from": [],
        "sends_output_to": [],
        "required_config": [],
        "optional_config": [],
        "capabilities": [],
        "usage_examples": [],
        "tags": []
      }
    ],
    "component_types": [
      "genesis:agent",
      "genesis:chat_output",
      "genesis:chat_input"
    ],
    "component_categories": [
      "data",
      "agent"
    ],
    "capabilities": [],
    "input_components": [
      "document-input"
    ],
    "output_components": [
      "classification-output"
    ],
    "tool_components": [],
    "model_components": [],
    "agent_components": [
      "classification-agent"
    ],
    "data_flow": [
      {
        "from_component": "document-input",
        "to_component": "classification-agent",
        "from_type": "genesis:chat_input",
        "to_type": "genesis:agent",
        "from_category": "data",
        "to_category": "agent",
        "data_purpose": "input"
      },
      {
        "from_component": "classification-agent",
        "to_component": "classification-output",
        "from_type": "genesis:agent",
        "to_type": "genesis:chat_output",
        "from_category": "agent",
        "to_category": "data",
        "data_purpose": "processing"
      }
    ],
    "complexity_score": 7,
    "tags": [],
    "domain": "general",
    "file_path": "genesis-agents-cli/examples/agents/classification-agent.yaml",
    "created_at": "2025-10-08T14:22:10.221778"
  },
  "74d852bb2a90bfe1": {
    "agent_id": "74d852bb2a90bfe1",
    "name": "Guideline Retrieval Agent",
    "description": "Retrieve applicable clinical guidelines based on procedure codes",
    "agent_goal": "Retrieve applicable clinical guidelines, such as LCDs and NCDs, based on the requested service codes to support medical necessity evaluation",
    "version": "1.0.0",
    "components": [
      {
        "component_id": "input",
        "component_type": "genesis:chat_input",
        "name": "Request Input",
        "description": "Input for guideline retrieval agent",
        "purpose": "input",
        "category": "data",
        "config_schema": {},
        "input_data_types": [],
        "output_data_types": [
          "text",
          "json"
        ],
        "input_schema": null,
        "output_schema": null,
        "provides": [
          {
            "useAs": "input",
            "in": "main-agent",
            "description": "Input data"
          }
        ],
        "accepts_input_from": [],
        "sends_output_to": [
          "main-agent"
        ],
        "required_config": [],
        "optional_config": [],
        "capabilities": [],
        "usage_examples": [],
        "tags": []
      },
      {
        "component_id": "main-agent-prompt",
        "component_type": "genesis:prompt_template",
        "name": "Agent Instructions",
        "description": "Prompt template for agent instructions",
        "purpose": "unknown",
        "category": "unknown",
        "config_schema": {},
        "input_data_types": [
          "text",
          "json"
        ],
        "output_data_types": [
          "text",
          "json"
        ],
        "input_schema": null,
        "output_schema": null,
        "provides": [
          {
            "useAs": "system_prompt",
            "in": "main-agent",
            "description": "System prompt for the agent"
          }
        ],
        "accepts_input_from": [],
        "sends_output_to": [
          "main-agent"
        ],
        "required_config": [],
        "optional_config": [],
        "capabilities": [],
        "usage_examples": [],
        "tags": []
      },
      {
        "component_id": "main-agent",
        "component_type": "genesis:agent",
        "name": "Guideline Retrieval Agent",
        "description": "Retrieve applicable clinical guidelines based on procedure codes",
        "purpose": "processing",
        "category": "agent",
        "config_schema": {
          "temperature": 0.1,
          "max_tokens": 2000
        },
        "input_data_types": [
          "text",
          "json",
          "structured_data",
          "tool_results"
        ],
        "output_data_types": [
          "text",
          "json",
          "structured_data",
          "agent_response"
        ],
        "input_schema": null,
        "output_schema": null,
        "provides": [
          {
            "useAs": "input",
            "in": "output",
            "description": "Results"
          }
        ],
        "accepts_input_from": [],
        "sends_output_to": [
          "output"
        ],
        "required_config": [],
        "optional_config": [
          "temperature",
          "max_tokens"
        ],
        "capabilities": [],
        "usage_examples": [],
        "tags": []
      },
      {
        "component_id": "tool-1",
        "component_type": "genesis:knowledge_hub_search",
        "name": "Knowledge Hub Search",
        "description": "Tool for guideline retrieval agent",
        "purpose": "unknown",
        "category": "unknown",
        "config_schema": {},
        "input_data_types": [
          "text",
          "json"
        ],
        "output_data_types": [
          "text",
          "json"
        ],
        "input_schema": null,
        "output_schema": null,
        "provides": [
          {
            "useAs": "tools",
            "in": "main-agent",
            "description": "Knowledge Hub Search tool"
          }
        ],
        "accepts_input_from": [],
        "sends_output_to": [
          "main-agent"
        ],
        "required_config": [],
        "optional_config": [],
        "capabilities": [],
        "usage_examples": [],
        "tags": []
      },
      {
        "component_id": "output",
        "component_type": "genesis:chat_output",
        "name": "Results Output",
        "description": "Display results",
        "purpose": "output",
        "category": "data",
        "config_schema": {},
        "input_data_types": [
          "text",
          "json",
          "structured_data"
        ],
        "output_data_types": [],
        "input_schema": null,
        "output_schema": null,
        "provides": [],
        "accepts_input_from": [],
        "sends_output_to": [],
        "required_config": [],
        "optional_config": [],
        "capabilities": [],
        "usage_examples": [],
        "tags": []
      }
    ],
    "component_types": [
      "genesis:agent",
      "genesis:knowledge_hub_search",
      "genesis:prompt_template",
      "genesis:chat_output",
      "genesis:chat_input"
    ],
    "component_categories": [
      "data",
      "unknown",
      "agent"
    ],
    "capabilities": [],
    "input_components": [
      "input"
    ],
    "output_components": [
      "output"
    ],
    "tool_components": [],
    "model_components": [],
    "agent_components": [
      "main-agent"
    ],
    "data_flow": [
      {
        "from_component": "input",
        "to_component": "main-agent",
        "from_type": "genesis:chat_input",
        "to_type": "genesis:agent",
        "from_category": "data",
        "to_category": "agent",
        "data_purpose": "input"
      },
      {
        "from_component": "main-agent-prompt",
        "to_component": "main-agent",
        "from_type": "genesis:prompt_template",
        "to_type": "genesis:agent",
        "from_category": "unknown",
        "to_category": "agent",
        "data_purpose": "unknown"
      },
      {
        "from_component": "main-agent",
        "to_component": "output",
        "from_type": "genesis:agent",
        "to_type": "genesis:chat_output",
        "from_category": "agent",
        "to_category": "data",
        "data_purpose": "processing"
      },
      {
        "from_component": "tool-1",
        "to_component": "main-agent",
        "from_type": "genesis:knowledge_hub_search",
        "to_type": "genesis:agent",
        "from_category": "unknown",
        "to_category": "agent",
        "data_purpose": "unknown"
      }
    ],
    "complexity_score": 13,
    "tags": [
      "medical",
      "healthcare"
    ],
    "domain": "general",
    "file_path": "genesis-agents-cli/examples/agents/guideline-retrieval-agent.yaml",
    "created_at": "2025-10-08T14:22:10.226486"
  },
  "cc7c178a855d30fe": {
    "agent_id": "cc7c178a855d30fe",
    "name": "Document Processor",
    "description": "Process and extract information from healthcare documents",
    "agent_goal": "Extract structured information from healthcare documents using OCR and NLP",
    "version": "1.0.0",
    "components": [
      {
        "component_id": "document-input",
        "component_type": "genesis:chat_input",
        "name": "Document Input",
        "description": "Upload or input document for processing",
        "purpose": "input",
        "category": "data",
        "config_schema": {},
        "input_data_types": [],
        "output_data_types": [
          "text",
          "json"
        ],
        "input_schema": null,
        "output_schema": null,
        "provides": [
          {
            "in": "processing-agent",
            "useAs": "input",
            "description": "Send document to processing agent"
          }
        ],
        "accepts_input_from": [],
        "sends_output_to": [
          "processing-agent"
        ],
        "required_config": [],
        "optional_config": [],
        "capabilities": [],
        "usage_examples": [],
        "tags": []
      },
      {
        "component_id": "processing-agent",
        "component_type": "genesis:agent",
        "name": "Document Processing Agent",
        "description": "Agent that processes and extracts information from documents",
        "purpose": "processing",
        "category": "agent",
        "config_schema": {
          "has_system_prompt": true,
          "temperature": 0.1,
          "max_tokens": 2000
        },
        "input_data_types": [
          "text",
          "json",
          "structured_data",
          "tool_results"
        ],
        "output_data_types": [
          "text",
          "json",
          "structured_data",
          "agent_response"
        ],
        "input_schema": null,
        "output_schema": null,
        "provides": [
          {
            "in": "document-output",
            "useAs": "input",
            "description": "Send processed results to output"
          }
        ],
        "accepts_input_from": [],
        "sends_output_to": [
          "document-output"
        ],
        "required_config": [],
        "optional_config": [
          "system_prompt",
          "temperature",
          "max_tokens"
        ],
        "capabilities": [],
        "usage_examples": [],
        "tags": []
      },
      {
        "component_id": "document-output",
        "component_type": "genesis:chat_output",
        "name": "Processed Document",
        "description": "Display structured document information",
        "purpose": "output",
        "category": "data",
        "config_schema": {},
        "input_data_types": [
          "text",
          "json",
          "structured_data"
        ],
        "output_data_types": [],
        "input_schema": null,
        "output_schema": null,
        "provides": [],
        "accepts_input_from": [],
        "sends_output_to": [],
        "required_config": [],
        "optional_config": [],
        "capabilities": [],
        "usage_examples": [],
        "tags": []
      }
    ],
    "component_types": [
      "genesis:agent",
      "genesis:chat_output",
      "genesis:chat_input"
    ],
    "component_categories": [
      "data",
      "agent"
    ],
    "capabilities": [],
    "input_components": [
      "document-input"
    ],
    "output_components": [
      "document-output"
    ],
    "tool_components": [],
    "model_components": [],
    "agent_components": [
      "processing-agent"
    ],
    "data_flow": [
      {
        "from_component": "document-input",
        "to_component": "processing-agent",
        "from_type": "genesis:chat_input",
        "to_type": "genesis:agent",
        "from_category": "data",
        "to_category": "agent",
        "data_purpose": "input"
      },
      {
        "from_component": "processing-agent",
        "to_component": "document-output",
        "from_type": "genesis:agent",
        "to_type": "genesis:chat_output",
        "from_category": "agent",
        "to_category": "data",
        "data_purpose": "processing"
      }
    ],
    "complexity_score": 7,
    "tags": [
      "medical",
      "healthcare"
    ],
    "domain": "general",
    "file_path": "genesis-agents-cli/examples/agents/document-processor.yaml",
    "created_at": "2025-10-08T14:22:10.228091"
  },
  "e8c612dae1d40cee": {
    "agent_id": "e8c612dae1d40cee",
    "name": "Eligibility Checker",
    "description": "Verify member eligibility and check benefit coverage for requested services",
    "agent_goal": "Verify member eligibility and check benefit coverage for requested services",
    "version": "1.0.0",
    "components": [
      {
        "component_id": "member-input",
        "component_type": "genesis:chat_input",
        "name": "Member Information",
        "description": "Receive member ID and service details",
        "purpose": "input",
        "category": "data",
        "config_schema": {},
        "input_data_types": [],
        "output_data_types": [
          "text",
          "json"
        ],
        "input_schema": null,
        "output_schema": null,
        "provides": [
          {
            "useAs": "input",
            "in": "eligibility-agent",
            "description": "Member and service information"
          }
        ],
        "accepts_input_from": [],
        "sends_output_to": [
          "eligibility-agent"
        ],
        "required_config": [],
        "optional_config": [],
        "capabilities": [],
        "usage_examples": [],
        "tags": []
      },
      {
        "component_id": "eligibility-agent-prompt",
        "component_type": "genesis:prompt_template",
        "name": "Agent Instructions",
        "description": "Prompt template for agent instructions",
        "purpose": "unknown",
        "category": "unknown",
        "config_schema": {},
        "input_data_types": [
          "text",
          "json"
        ],
        "output_data_types": [
          "text",
          "json"
        ],
        "input_schema": null,
        "output_schema": null,
        "provides": [
          {
            "useAs": "system_prompt",
            "in": "eligibility-agent",
            "description": "System prompt for the agent"
          }
        ],
        "accepts_input_from": [],
        "sends_output_to": [
          "eligibility-agent"
        ],
        "required_config": [],
        "optional_config": [],
        "capabilities": [],
        "usage_examples": [],
        "tags": []
      },
      {
        "component_id": "eligibility-agent",
        "component_type": "genesis:agent",
        "name": "Eligibility Verification Agent",
        "description": "Agent that verifies eligibility and benefits",
        "purpose": "processing",
        "category": "agent",
        "config_schema": {
          "temperature": 0.1,
          "max_tokens": 2000
        },
        "input_data_types": [
          "text",
          "json",
          "structured_data",
          "tool_results"
        ],
        "output_data_types": [
          "text",
          "json",
          "structured_data",
          "agent_response"
        ],
        "input_schema": null,
        "output_schema": null,
        "provides": [
          {
            "useAs": "input",
            "in": "eligibility-output",
            "description": "Verification results"
          }
        ],
        "accepts_input_from": [],
        "sends_output_to": [
          "eligibility-output"
        ],
        "required_config": [],
        "optional_config": [
          "temperature",
          "max_tokens"
        ],
        "capabilities": [],
        "usage_examples": [],
        "tags": []
      },
      {
        "component_id": "eligibility-lookup",
        "component_type": "genesis:mcp_tool",
        "name": "Eligibility Lookup Service",
        "description": "Real-time eligibility verification service via MCP",
        "purpose": "mcp_integration",
        "category": "mcp",
        "config_schema": {},
        "input_data_types": [
          "text",
          "json",
          "structured_data"
        ],
        "output_data_types": [
          "text",
          "json",
          "structured_data",
          "tool_response"
        ],
        "input_schema": null,
        "output_schema": null,
        "provides": [
          {
            "useAs": "tools",
            "in": "eligibility-agent",
            "description": "Eligibility verification tool"
          }
        ],
        "accepts_input_from": [],
        "sends_output_to": [
          "eligibility-agent"
        ],
        "required_config": [],
        "optional_config": [],
        "capabilities": [],
        "usage_examples": [],
        "tags": []
      },
      {
        "component_id": "eligibility-output",
        "component_type": "genesis:chat_output",
        "name": "Eligibility Results",
        "description": "Display eligibility verification results",
        "purpose": "output",
        "category": "data",
        "config_schema": {},
        "input_data_types": [
          "text",
          "json",
          "structured_data"
        ],
        "output_data_types": [],
        "input_schema": null,
        "output_schema": null,
        "provides": [],
        "accepts_input_from": [],
        "sends_output_to": [],
        "required_config": [],
        "optional_config": [],
        "capabilities": [],
        "usage_examples": [],
        "tags": []
      }
    ],
    "component_types": [
      "genesis:mcp_tool",
      "genesis:agent",
      "genesis:prompt_template",
      "genesis:chat_output",
      "genesis:chat_input"
    ],
    "component_categories": [
      "data",
      "unknown",
      "mcp",
      "agent"
    ],
    "capabilities": [
      "external_system_integration"
    ],
    "input_components": [
      "member-input"
    ],
    "output_components": [
      "eligibility-output"
    ],
    "tool_components": [],
    "model_components": [],
    "agent_components": [
      "eligibility-agent"
    ],
    "data_flow": [
      {
        "from_component": "member-input",
        "to_component": "eligibility-agent",
        "from_type": "genesis:chat_input",
        "to_type": "genesis:agent",
        "from_category": "data",
        "to_category": "agent",
        "data_purpose": "input"
      },
      {
        "from_component": "eligibility-agent-prompt",
        "to_component": "eligibility-agent",
        "from_type": "genesis:prompt_template",
        "to_type": "genesis:agent",
        "from_category": "unknown",
        "to_category": "agent",
        "data_purpose": "unknown"
      },
      {
        "from_component": "eligibility-agent",
        "to_component": "eligibility-output",
        "from_type": "genesis:agent",
        "to_type": "genesis:chat_output",
        "from_category": "agent",
        "to_category": "data",
        "data_purpose": "processing"
      },
      {
        "from_component": "eligibility-lookup",
        "to_component": "eligibility-agent",
        "from_type": "genesis:mcp_tool",
        "to_type": "genesis:agent",
        "from_category": "mcp",
        "to_category": "agent",
        "data_purpose": "mcp_integration"
      }
    ],
    "complexity_score": 13,
    "tags": [],
    "domain": "integration",
    "file_path": "genesis-agents-cli/examples/agents/eligibility-checker.yaml",
    "created_at": "2025-10-08T14:22:10.233005"
  },
  "5d044ef9be403e04": {
    "agent_id": "5d044ef9be403e04",
    "name": "Provider Check Agent",
    "description": "Verify provider network participation status using payer provider directory systems",
    "agent_goal": "Verify the network participation status of requesting, referring, and treating providers using payer provider directory systems",
    "version": "1.0.0",
    "components": [
      {
        "component_id": "provider-input",
        "component_type": "genesis:chat_input",
        "name": "Provider Information",
        "description": "Provider NPIs and service information",
        "purpose": "input",
        "category": "data",
        "config_schema": {},
        "input_data_types": [],
        "output_data_types": [
          "text",
          "json"
        ],
        "input_schema": null,
        "output_schema": null,
        "provides": [
          {
            "useAs": "input",
            "in": "provider-check-agent",
            "description": "Provider details to validate"
          }
        ],
        "accepts_input_from": [],
        "sends_output_to": [
          "provider-check-agent"
        ],
        "required_config": [],
        "optional_config": [],
        "capabilities": [],
        "usage_examples": [],
        "tags": []
      },
      {
        "component_id": "provider-check-agent-prompt",
        "component_type": "genesis:prompt_template",
        "name": "Agent Instructions",
        "description": "Prompt template for agent instructions",
        "purpose": "unknown",
        "category": "unknown",
        "config_schema": {},
        "input_data_types": [
          "text",
          "json"
        ],
        "output_data_types": [
          "text",
          "json"
        ],
        "input_schema": null,
        "output_schema": null,
        "provides": [
          {
            "useAs": "system_prompt",
            "in": "provider-check-agent",
            "description": "System prompt for the agent"
          }
        ],
        "accepts_input_from": [],
        "sends_output_to": [
          "provider-check-agent"
        ],
        "required_config": [],
        "optional_config": [],
        "capabilities": [],
        "usage_examples": [],
        "tags": []
      },
      {
        "component_id": "provider-check-agent",
        "component_type": "genesis:agent",
        "name": "Provider Network Validation Agent",
        "description": "Validates provider network participation",
        "purpose": "processing",
        "category": "agent",
        "config_schema": {
          "temperature": 0.1,
          "max_tokens": 1500
        },
        "input_data_types": [
          "text",
          "json",
          "structured_data",
          "tool_results"
        ],
        "output_data_types": [
          "text",
          "json",
          "structured_data",
          "agent_response"
        ],
        "input_schema": null,
        "output_schema": null,
        "provides": [
          {
            "useAs": "input",
            "in": "provider-output",
            "description": "Provider validation results"
          }
        ],
        "accepts_input_from": [],
        "sends_output_to": [
          "provider-output"
        ],
        "required_config": [],
        "optional_config": [
          "temperature",
          "max_tokens"
        ],
        "capabilities": [],
        "usage_examples": [],
        "tags": []
      },
      {
        "component_id": "provider-directory",
        "component_type": "genesis:mcp_tool",
        "name": "Provider Directory API",
        "description": "Access payer provider directory via MCP",
        "purpose": "mcp_integration",
        "category": "mcp",
        "config_schema": {},
        "input_data_types": [
          "text",
          "json",
          "structured_data"
        ],
        "output_data_types": [
          "text",
          "json",
          "structured_data",
          "tool_response"
        ],
        "input_schema": null,
        "output_schema": null,
        "provides": [
          {
            "useAs": "tools",
            "in": "provider-check-agent",
            "description": "Provider network lookup tool"
          }
        ],
        "accepts_input_from": [],
        "sends_output_to": [
          "provider-check-agent"
        ],
        "required_config": [],
        "optional_config": [],
        "capabilities": [],
        "usage_examples": [],
        "tags": []
      },
      {
        "component_id": "provider-output",
        "component_type": "genesis:chat_output",
        "name": "Provider Network Status",
        "description": "Display provider network validation results",
        "purpose": "output",
        "category": "data",
        "config_schema": {},
        "input_data_types": [
          "text",
          "json",
          "structured_data"
        ],
        "output_data_types": [],
        "input_schema": null,
        "output_schema": null,
        "provides": [],
        "accepts_input_from": [],
        "sends_output_to": [],
        "required_config": [],
        "optional_config": [],
        "capabilities": [],
        "usage_examples": [],
        "tags": []
      }
    ],
    "component_types": [
      "genesis:mcp_tool",
      "genesis:agent",
      "genesis:prompt_template",
      "genesis:chat_output",
      "genesis:chat_input"
    ],
    "component_categories": [
      "data",
      "unknown",
      "mcp",
      "agent"
    ],
    "capabilities": [
      "external_system_integration"
    ],
    "input_components": [
      "provider-input"
    ],
    "output_components": [
      "provider-output"
    ],
    "tool_components": [],
    "model_components": [],
    "agent_components": [
      "provider-check-agent"
    ],
    "data_flow": [
      {
        "from_component": "provider-input",
        "to_component": "provider-check-agent",
        "from_type": "genesis:chat_input",
        "to_type": "genesis:agent",
        "from_category": "data",
        "to_category": "agent",
        "data_purpose": "input"
      },
      {
        "from_component": "provider-check-agent-prompt",
        "to_component": "provider-check-agent",
        "from_type": "genesis:prompt_template",
        "to_type": "genesis:agent",
        "from_category": "unknown",
        "to_category": "agent",
        "data_purpose": "unknown"
      },
      {
        "from_component": "provider-check-agent",
        "to_component": "provider-output",
        "from_type": "genesis:agent",
        "to_type": "genesis:chat_output",
        "from_category": "agent",
        "to_category": "data",
        "data_purpose": "processing"
      },
      {
        "from_component": "provider-directory",
        "to_component": "provider-check-agent",
        "from_type": "genesis:mcp_tool",
        "to_type": "genesis:agent",
        "from_category": "mcp",
        "to_category": "agent",
        "data_purpose": "mcp_integration"
      }
    ],
    "complexity_score": 13,
    "tags": [],
    "domain": "integration",
    "file_path": "genesis-agents-cli/examples/agents/provider-check-agent.yaml",
    "created_at": "2025-10-08T14:22:10.239780"
  },
  "b9fe1d33592acfaf": {
    "agent_id": "b9fe1d33592acfaf",
    "name": "Summary Generation Agent",
    "description": "Generate human-readable summaries of prior authorization requests and extracted data",
    "agent_goal": "Generate a human-readable summary of the fax contents, including extracted clinical and administrative data, for quick reviewer reference",
    "version": "1.0.0",
    "components": [
      {
        "component_id": "summary-input",
        "component_type": "genesis:chat_input",
        "name": "Case Data Input",
        "description": "Structured case data for summary generation",
        "purpose": "input",
        "category": "data",
        "config_schema": {},
        "input_data_types": [],
        "output_data_types": [
          "text",
          "json"
        ],
        "input_schema": null,
        "output_schema": null,
        "provides": [
          {
            "useAs": "input",
            "in": "summary-agent",
            "description": "Case information to summarize"
          }
        ],
        "accepts_input_from": [],
        "sends_output_to": [
          "summary-agent"
        ],
        "required_config": [],
        "optional_config": [],
        "capabilities": [],
        "usage_examples": [],
        "tags": []
      },
      {
        "component_id": "summary-agent",
        "component_type": "genesis:agent",
        "name": "Clinical Summary Generator",
        "description": "Generates comprehensive case summaries",
        "purpose": "processing",
        "category": "agent",
        "config_schema": {
          "has_system_prompt": true,
          "temperature": 0.3,
          "max_tokens": 2500
        },
        "input_data_types": [
          "text",
          "json",
          "structured_data",
          "tool_results"
        ],
        "output_data_types": [
          "text",
          "json",
          "structured_data",
          "agent_response"
        ],
        "input_schema": null,
        "output_schema": null,
        "provides": [
          {
            "useAs": "input",
            "in": "summary-output",
            "description": "Generated summary"
          }
        ],
        "accepts_input_from": [],
        "sends_output_to": [
          "summary-output"
        ],
        "required_config": [],
        "optional_config": [
          "system_prompt",
          "temperature",
          "max_tokens"
        ],
        "capabilities": [],
        "usage_examples": [],
        "tags": []
      },
      {
        "component_id": "prompt-template",
        "component_type": "genesis:prompt_template",
        "name": "Summary Template",
        "description": "Structured template for consistent summaries",
        "purpose": "unknown",
        "category": "unknown",
        "config_schema": {},
        "input_data_types": [
          "text",
          "json"
        ],
        "output_data_types": [
          "text",
          "json"
        ],
        "input_schema": null,
        "output_schema": null,
        "provides": [
          {
            "useAs": "tools",
            "in": "summary-agent",
            "description": "Summary formatting tool"
          }
        ],
        "accepts_input_from": [],
        "sends_output_to": [
          "summary-agent"
        ],
        "required_config": [],
        "optional_config": [],
        "capabilities": [],
        "usage_examples": [],
        "tags": []
      },
      {
        "component_id": "summary-output",
        "component_type": "genesis:chat_output",
        "name": "Case Summary",
        "description": "Display generated case summary",
        "purpose": "output",
        "category": "data",
        "config_schema": {},
        "input_data_types": [
          "text",
          "json",
          "structured_data"
        ],
        "output_data_types": [],
        "input_schema": null,
        "output_schema": null,
        "provides": [],
        "accepts_input_from": [],
        "sends_output_to": [],
        "required_config": [],
        "optional_config": [],
        "capabilities": [],
        "usage_examples": [],
        "tags": []
      }
    ],
    "component_types": [
      "genesis:agent",
      "genesis:prompt_template",
      "genesis:chat_output",
      "genesis:chat_input"
    ],
    "component_categories": [
      "data",
      "unknown",
      "agent"
    ],
    "capabilities": [],
    "input_components": [
      "summary-input"
    ],
    "output_components": [
      "summary-output"
    ],
    "tool_components": [],
    "model_components": [],
    "agent_components": [
      "summary-agent"
    ],
    "data_flow": [
      {
        "from_component": "summary-input",
        "to_component": "summary-agent",
        "from_type": "genesis:chat_input",
        "to_type": "genesis:agent",
        "from_category": "data",
        "to_category": "agent",
        "data_purpose": "input"
      },
      {
        "from_component": "summary-agent",
        "to_component": "summary-output",
        "from_type": "genesis:agent",
        "to_type": "genesis:chat_output",
        "from_category": "agent",
        "to_category": "data",
        "data_purpose": "processing"
      },
      {
        "from_component": "prompt-template",
        "to_component": "summary-agent",
        "from_type": "genesis:prompt_template",
        "to_type": "genesis:agent",
        "from_category": "unknown",
        "to_category": "agent",
        "data_purpose": "unknown"
      }
    ],
    "complexity_score": 10,
    "tags": [],
    "domain": "general",
    "file_path": "genesis-agents-cli/examples/agents/summary-generation-agent.yaml",
    "created_at": "2025-10-08T14:22:10.245120"
  },
  "f9d9da52d2ad377a": {
    "agent_id": "f9d9da52d2ad377a",
    "name": "MCP Enhanced Agent",
    "description": "Agent with Model Context Protocol tool integration",
    "agent_goal": "Demonstrate MCP tool capabilities and integration",
    "version": "1.0.0",
    "components": [
      {
        "component_id": "user-input",
        "component_type": "genesis:chat_input",
        "name": "User Input",
        "description": "User query input",
        "purpose": "input",
        "category": "data",
        "config_schema": {},
        "input_data_types": [],
        "output_data_types": [
          "text",
          "json"
        ],
        "input_schema": null,
        "output_schema": null,
        "provides": [
          {
            "in": "main-agent",
            "useAs": "input",
            "description": "Send query to main agent"
          }
        ],
        "accepts_input_from": [],
        "sends_output_to": [
          "main-agent"
        ],
        "required_config": [],
        "optional_config": [],
        "capabilities": [],
        "usage_examples": [],
        "tags": []
      },
      {
        "component_id": "mcp-tool-1",
        "component_type": "genesis:mcp_tool",
        "name": "MCP Tool Alpha",
        "description": "First MCP tool for the agent",
        "purpose": "mcp_integration",
        "category": "mcp",
        "config_schema": {},
        "input_data_types": [
          "text",
          "json",
          "structured_data"
        ],
        "output_data_types": [
          "text",
          "json",
          "structured_data",
          "tool_response"
        ],
        "input_schema": null,
        "output_schema": null,
        "provides": [
          {
            "in": "main-agent",
            "useAs": "tool",
            "description": "Provide MCP tool to agent"
          }
        ],
        "accepts_input_from": [],
        "sends_output_to": [
          "main-agent"
        ],
        "required_config": [],
        "optional_config": [],
        "capabilities": [],
        "usage_examples": [],
        "tags": []
      },
      {
        "component_id": "mcp-tool-2",
        "component_type": "genesis:mcp_tool",
        "name": "MCP Tool Beta",
        "description": "Second MCP tool for the agent",
        "purpose": "mcp_integration",
        "category": "mcp",
        "config_schema": {},
        "input_data_types": [
          "text",
          "json",
          "structured_data"
        ],
        "output_data_types": [
          "text",
          "json",
          "structured_data",
          "tool_response"
        ],
        "input_schema": null,
        "output_schema": null,
        "provides": [
          {
            "in": "main-agent",
            "useAs": "tool",
            "description": "Provide another MCP tool to agent"
          }
        ],
        "accepts_input_from": [],
        "sends_output_to": [
          "main-agent"
        ],
        "required_config": [],
        "optional_config": [],
        "capabilities": [],
        "usage_examples": [],
        "tags": []
      },
      {
        "component_id": "main-agent",
        "component_type": "genesis:agent",
        "name": "MCP Enhanced Agent",
        "description": "Agent with multiple MCP tools",
        "purpose": "processing",
        "category": "agent",
        "config_schema": {
          "has_system_prompt": true,
          "temperature": 0.3,
          "max_tokens": 2000
        },
        "input_data_types": [
          "text",
          "json",
          "structured_data",
          "tool_results"
        ],
        "output_data_types": [
          "text",
          "json",
          "structured_data",
          "agent_response"
        ],
        "input_schema": null,
        "output_schema": null,
        "provides": [
          {
            "in": "final-output",
            "useAs": "input",
            "description": "Send response to output"
          }
        ],
        "accepts_input_from": [],
        "sends_output_to": [
          "final-output"
        ],
        "required_config": [],
        "optional_config": [
          "system_prompt",
          "temperature",
          "max_tokens"
        ],
        "capabilities": [],
        "usage_examples": [],
        "tags": []
      },
      {
        "component_id": "final-output",
        "component_type": "genesis:chat_output",
        "name": "Final Output",
        "description": "Display agent response with MCP tool results",
        "purpose": "output",
        "category": "data",
        "config_schema": {},
        "input_data_types": [
          "text",
          "json",
          "structured_data"
        ],
        "output_data_types": [],
        "input_schema": null,
        "output_schema": null,
        "provides": [],
        "accepts_input_from": [],
        "sends_output_to": [],
        "required_config": [],
        "optional_config": [],
        "capabilities": [],
        "usage_examples": [],
        "tags": []
      }
    ],
    "component_types": [
      "genesis:mcp_tool",
      "genesis:chat_output",
      "genesis:chat_input",
      "genesis:agent"
    ],
    "component_categories": [
      "data",
      "mcp",
      "agent"
    ],
    "capabilities": [
      "external_system_integration"
    ],
    "input_components": [
      "user-input"
    ],
    "output_components": [
      "final-output"
    ],
    "tool_components": [],
    "model_components": [],
    "agent_components": [
      "main-agent"
    ],
    "data_flow": [
      {
        "from_component": "user-input",
        "to_component": "main-agent",
        "from_type": "genesis:chat_input",
        "to_type": "genesis:agent",
        "from_category": "data",
        "to_category": "agent",
        "data_purpose": "input"
      },
      {
        "from_component": "mcp-tool-1",
        "to_component": "main-agent",
        "from_type": "genesis:mcp_tool",
        "to_type": "genesis:agent",
        "from_category": "mcp",
        "to_category": "agent",
        "data_purpose": "mcp_integration"
      },
      {
        "from_component": "mcp-tool-2",
        "to_component": "main-agent",
        "from_type": "genesis:mcp_tool",
        "to_type": "genesis:agent",
        "from_category": "mcp",
        "to_category": "agent",
        "data_purpose": "mcp_integration"
      },
      {
        "from_component": "main-agent",
        "to_component": "final-output",
        "from_type": "genesis:agent",
        "to_type": "genesis:chat_output",
        "from_category": "agent",
        "to_category": "data",
        "data_purpose": "processing"
      }
    ],
    "complexity_score": 13,
    "tags": [
      "integration"
    ],
    "domain": "integration",
    "file_path": "genesis-agents-cli/examples/agents/mcp-enhanced-agent.yaml",
    "created_at": "2025-10-08T14:22:10.247116"
  },
  "d666a4a2677f813f": {
    "agent_id": "d666a4a2677f813f",
    "name": "Clinical Processing Agent",
    "description": "Agent that processes clinical data using unified AutonomizeModel components",
    "agent_goal": "Process and classify clinical data using RxNorm, ICD-10, and Clinical LLM models",
    "version": "1.0.0",
    "components": [
      {
        "component_id": "clinical-input",
        "component_type": "genesis:chat_input",
        "name": "Clinical Data Input",
        "description": "Input for clinical text or data",
        "purpose": "input",
        "category": "data",
        "config_schema": {},
        "input_data_types": [],
        "output_data_types": [
          "text",
          "json"
        ],
        "input_schema": null,
        "output_schema": null,
        "provides": [
          {
            "in": "rxnorm-processor",
            "useAs": "input",
            "description": "Send clinical text to RxNorm processor"
          }
        ],
        "accepts_input_from": [],
        "sends_output_to": [
          "rxnorm-processor"
        ],
        "required_config": [],
        "optional_config": [],
        "capabilities": [],
        "usage_examples": [],
        "tags": []
      },
      {
        "component_id": "rxnorm-processor",
        "component_type": "genesis:autonomize_model",
        "name": "RxNorm Code Extractor",
        "description": "Extract RxNorm codes from clinical text using AutonomizeModel",
        "purpose": "model_inference",
        "category": "model",
        "config_schema": {
          "selected_model": "RxNorm Code"
        },
        "input_data_types": [
          "clinical_text",
          "medication_text"
        ],
        "output_data_types": [
          "structured_codes",
          "rxnorm_codes",
          "json"
        ],
        "input_schema": null,
        "output_schema": null,
        "provides": [
          {
            "in": "icd-processor",
            "useAs": "input",
            "description": "Send processed data to ICD processor"
          }
        ],
        "accepts_input_from": [],
        "sends_output_to": [
          "icd-processor"
        ],
        "required_config": [
          "selected_model"
        ],
        "optional_config": [],
        "capabilities": [
          "medication_extraction",
          "drug_coding",
          "rxnorm_mapping"
        ],
        "usage_examples": [],
        "tags": []
      },
      {
        "component_id": "icd-processor",
        "component_type": "genesis:autonomize_model",
        "name": "ICD-10 Code Extractor",
        "description": "Extract ICD-10 codes from clinical data using AutonomizeModel",
        "purpose": "model_inference",
        "category": "model",
        "config_schema": {
          "selected_model": "ICD-10 Code"
        },
        "input_data_types": [
          "clinical_text",
          "diagnosis_text"
        ],
        "output_data_types": [
          "structured_codes",
          "icd10_codes",
          "json"
        ],
        "input_schema": null,
        "output_schema": null,
        "provides": [
          {
            "in": "clinical-llm",
            "useAs": "input",
            "description": "Send extracted codes to Clinical LLM"
          }
        ],
        "accepts_input_from": [],
        "sends_output_to": [
          "clinical-llm"
        ],
        "required_config": [
          "selected_model"
        ],
        "optional_config": [],
        "capabilities": [
          "diagnosis_coding",
          "medical_coding",
          "icd10_mapping"
        ],
        "usage_examples": [],
        "tags": []
      },
      {
        "component_id": "clinical-llm",
        "component_type": "genesis:autonomize_model",
        "name": "Clinical LLM Analysis",
        "description": "Clinical language model for analysis using AutonomizeModel",
        "purpose": "model_inference",
        "category": "model",
        "config_schema": {
          "selected_model": "Clinical LLM"
        },
        "input_data_types": [
          "clinical_text",
          "medical_queries"
        ],
        "output_data_types": [
          "clinical_analysis",
          "text",
          "structured_data"
        ],
        "input_schema": null,
        "output_schema": null,
        "provides": [
          {
            "in": "analysis-agent",
            "useAs": "tool",
            "description": "Provide clinical analysis tool to agent"
          }
        ],
        "accepts_input_from": [],
        "sends_output_to": [
          "analysis-agent"
        ],
        "required_config": [
          "selected_model"
        ],
        "optional_config": [],
        "capabilities": [
          "clinical_analysis",
          "medical_reasoning",
          "clinical_insights"
        ],
        "usage_examples": [],
        "tags": []
      },
      {
        "component_id": "analysis-agent",
        "component_type": "genesis:agent",
        "name": "Clinical Analysis Agent",
        "description": "Agent that coordinates clinical data processing",
        "purpose": "processing",
        "category": "agent",
        "config_schema": {
          "has_system_prompt": true,
          "temperature": 0.2,
          "max_tokens": 2000
        },
        "input_data_types": [
          "text",
          "json",
          "structured_data",
          "tool_results"
        ],
        "output_data_types": [
          "text",
          "json",
          "structured_data",
          "agent_response"
        ],
        "input_schema": null,
        "output_schema": null,
        "provides": [
          {
            "in": "output-display",
            "useAs": "input",
            "description": "Send analysis to output"
          }
        ],
        "accepts_input_from": [],
        "sends_output_to": [
          "output-display"
        ],
        "required_config": [],
        "optional_config": [
          "system_prompt",
          "temperature",
          "max_tokens"
        ],
        "capabilities": [],
        "usage_examples": [],
        "tags": []
      },
      {
        "component_id": "output-display",
        "component_type": "genesis:chat_output",
        "name": "Analysis Output",
        "description": "Display comprehensive clinical analysis results",
        "purpose": "output",
        "category": "data",
        "config_schema": {},
        "input_data_types": [
          "text",
          "json",
          "structured_data"
        ],
        "output_data_types": [],
        "input_schema": null,
        "output_schema": null,
        "provides": [],
        "accepts_input_from": [],
        "sends_output_to": [],
        "required_config": [],
        "optional_config": [],
        "capabilities": [],
        "usage_examples": [],
        "tags": []
      }
    ],
    "component_types": [
      "genesis:agent",
      "genesis:autonomize_model",
      "genesis:chat_output",
      "genesis:chat_input"
    ],
    "component_categories": [
      "model",
      "data",
      "agent"
    ],
    "capabilities": [
      "diagnosis_coding",
      "drug_coding",
      "clinical_analysis",
      "rxnorm_mapping",
      "clinical_insights",
      "clinical_ai_processing",
      "medical_reasoning",
      "ai_powered_processing",
      "icd10_mapping",
      "medication_extraction",
      "medical_coding"
    ],
    "input_components": [
      "clinical-input"
    ],
    "output_components": [
      "output-display"
    ],
    "tool_components": [],
    "model_components": [
      "rxnorm-processor",
      "icd-processor",
      "clinical-llm"
    ],
    "agent_components": [
      "analysis-agent"
    ],
    "data_flow": [
      {
        "from_component": "clinical-input",
        "to_component": "rxnorm-processor",
        "from_type": "genesis:chat_input",
        "to_type": "genesis:autonomize_model",
        "from_category": "data",
        "to_category": "model",
        "data_purpose": "input"
      },
      {
        "from_component": "rxnorm-processor",
        "to_component": "icd-processor",
        "from_type": "genesis:autonomize_model",
        "to_type": "genesis:autonomize_model",
        "from_category": "model",
        "to_category": "model",
        "data_purpose": "model_inference"
      },
      {
        "from_component": "icd-processor",
        "to_component": "clinical-llm",
        "from_type": "genesis:autonomize_model",
        "to_type": "genesis:autonomize_model",
        "from_category": "model",
        "to_category": "model",
        "data_purpose": "model_inference"
      },
      {
        "from_component": "clinical-llm",
        "to_component": "analysis-agent",
        "from_type": "genesis:autonomize_model",
        "to_type": "genesis:agent",
        "from_category": "model",
        "to_category": "agent",
        "data_purpose": "model_inference"
      },
      {
        "from_component": "analysis-agent",
        "to_component": "output-display",
        "from_type": "genesis:agent",
        "to_type": "genesis:chat_output",
        "from_category": "agent",
        "to_category": "data",
        "data_purpose": "processing"
      }
    ],
    "complexity_score": 16,
    "tags": [
      "medical",
      "healthcare",
      "clinical-ai"
    ],
    "domain": "healthcare",
    "file_path": "genesis-agents-cli/examples/agents/clinical-processing-agent.yaml",
    "created_at": "2025-10-08T14:22:10.249137"
  },
  "75edc9aaa6d3edd2": {
    "agent_id": "75edc9aaa6d3edd2",
    "name": "Extraction Agent",
    "description": "Extract structured information from documents including patient, provider, and procedure details",
    "agent_goal": "Extract structured information from scanned or typed documents, including patient, provider, and procedure details, and map them to a standardized schema",
    "version": "1.0.0",
    "components": [
      {
        "component_id": "extraction-input",
        "component_type": "genesis:chat_input",
        "name": "Document Input",
        "description": "OCR text and images for data extraction",
        "purpose": "input",
        "category": "data",
        "config_schema": {},
        "input_data_types": [],
        "output_data_types": [
          "text",
          "json"
        ],
        "input_schema": null,
        "output_schema": null,
        "provides": [
          {
            "useAs": "input",
            "in": "extraction-agent",
            "description": "Document content to extract from"
          }
        ],
        "accepts_input_from": [],
        "sends_output_to": [
          "extraction-agent"
        ],
        "required_config": [],
        "optional_config": [],
        "capabilities": [],
        "usage_examples": [],
        "tags": []
      },
      {
        "component_id": "extraction-agent-prompt",
        "component_type": "genesis:prompt_template",
        "name": "Agent Instructions",
        "description": "Prompt template for agent instructions",
        "purpose": "unknown",
        "category": "unknown",
        "config_schema": {},
        "input_data_types": [
          "text",
          "json"
        ],
        "output_data_types": [
          "text",
          "json"
        ],
        "input_schema": null,
        "output_schema": null,
        "provides": [
          {
            "useAs": "system_prompt",
            "in": "extraction-agent",
            "description": "System prompt for the agent"
          }
        ],
        "accepts_input_from": [],
        "sends_output_to": [
          "extraction-agent"
        ],
        "required_config": [],
        "optional_config": [],
        "capabilities": [],
        "usage_examples": [],
        "tags": []
      },
      {
        "component_id": "extraction-agent",
        "component_type": "genesis:agent",
        "name": "Data Extraction Agent",
        "description": "Extracts structured data from healthcare documents",
        "purpose": "processing",
        "category": "agent",
        "config_schema": {
          "temperature": 0.1,
          "max_tokens": 2500
        },
        "input_data_types": [
          "text",
          "json",
          "structured_data",
          "tool_results"
        ],
        "output_data_types": [
          "text",
          "json",
          "structured_data",
          "agent_response"
        ],
        "input_schema": null,
        "output_schema": null,
        "provides": [
          {
            "useAs": "input",
            "in": "extraction-output",
            "description": "Extracted structured data"
          }
        ],
        "accepts_input_from": [],
        "sends_output_to": [
          "extraction-output"
        ],
        "required_config": [],
        "optional_config": [
          "temperature",
          "max_tokens"
        ],
        "capabilities": [],
        "usage_examples": [],
        "tags": []
      },
      {
        "component_id": "form-recognizer",
        "component_type": "genesis:form_recognizer",
        "name": "Form Recognizer",
        "description": "Extract data from forms and tables using Azure Form Recognizer",
        "purpose": "unknown",
        "category": "unknown",
        "config_schema": {},
        "input_data_types": [
          "text",
          "json"
        ],
        "output_data_types": [
          "text",
          "json"
        ],
        "input_schema": null,
        "output_schema": null,
        "provides": [
          {
            "useAs": "tools",
            "in": "extraction-agent",
            "description": "Form extraction tool"
          }
        ],
        "accepts_input_from": [],
        "sends_output_to": [
          "extraction-agent"
        ],
        "required_config": [],
        "optional_config": [],
        "capabilities": [],
        "usage_examples": [],
        "tags": []
      },
      {
        "component_id": "data-transformer",
        "component_type": "genesis:mcp_tool",
        "name": "Data Transformer",
        "description": "Transform and standardize extracted data via MCP",
        "purpose": "mcp_integration",
        "category": "mcp",
        "config_schema": {},
        "input_data_types": [
          "text",
          "json",
          "structured_data"
        ],
        "output_data_types": [
          "text",
          "json",
          "structured_data",
          "tool_response"
        ],
        "input_schema": null,
        "output_schema": null,
        "provides": [
          {
            "useAs": "tools",
            "in": "extraction-agent",
            "description": "Data standardization tool"
          }
        ],
        "accepts_input_from": [],
        "sends_output_to": [
          "extraction-agent"
        ],
        "required_config": [],
        "optional_config": [],
        "capabilities": [],
        "usage_examples": [],
        "tags": []
      },
      {
        "component_id": "extraction-output",
        "component_type": "genesis:chat_output",
        "name": "Extracted Data",
        "description": "Display extracted structured data",
        "purpose": "output",
        "category": "data",
        "config_schema": {},
        "input_data_types": [
          "text",
          "json",
          "structured_data"
        ],
        "output_data_types": [],
        "input_schema": null,
        "output_schema": null,
        "provides": [],
        "accepts_input_from": [],
        "sends_output_to": [],
        "required_config": [],
        "optional_config": [],
        "capabilities": [],
        "usage_examples": [],
        "tags": []
      }
    ],
    "component_types": [
      "genesis:mcp_tool",
      "genesis:form_recognizer",
      "genesis:agent",
      "genesis:prompt_template",
      "genesis:chat_output",
      "genesis:chat_input"
    ],
    "component_categories": [
      "data",
      "unknown",
      "mcp",
      "agent"
    ],
    "capabilities": [
      "external_system_integration"
    ],
    "input_components": [
      "extraction-input"
    ],
    "output_components": [
      "extraction-output"
    ],
    "tool_components": [],
    "model_components": [],
    "agent_components": [
      "extraction-agent"
    ],
    "data_flow": [
      {
        "from_component": "extraction-input",
        "to_component": "extraction-agent",
        "from_type": "genesis:chat_input",
        "to_type": "genesis:agent",
        "from_category": "data",
        "to_category": "agent",
        "data_purpose": "input"
      },
      {
        "from_component": "extraction-agent-prompt",
        "to_component": "extraction-agent",
        "from_type": "genesis:prompt_template",
        "to_type": "genesis:agent",
        "from_category": "unknown",
        "to_category": "agent",
        "data_purpose": "unknown"
      },
      {
        "from_component": "extraction-agent",
        "to_component": "extraction-output",
        "from_type": "genesis:agent",
        "to_type": "genesis:chat_output",
        "from_category": "agent",
        "to_category": "data",
        "data_purpose": "processing"
      },
      {
        "from_component": "form-recognizer",
        "to_component": "extraction-agent",
        "from_type": "genesis:form_recognizer",
        "to_type": "genesis:agent",
        "from_category": "unknown",
        "to_category": "agent",
        "data_purpose": "unknown"
      },
      {
        "from_component": "data-transformer",
        "to_component": "extraction-agent",
        "from_type": "genesis:mcp_tool",
        "to_type": "genesis:agent",
        "from_category": "mcp",
        "to_category": "agent",
        "data_purpose": "mcp_integration"
      }
    ],
    "complexity_score": 16,
    "tags": [],
    "domain": "integration",
    "file_path": "genesis-agents-cli/examples/agents/extraction-agent.yaml",
    "created_at": "2025-10-08T14:22:10.256238"
  },
  "616058211d0d7921": {
    "agent_id": "616058211d0d7921",
    "name": "Medication Extractor",
    "description": "Extracts medication information from clinical text",
    "agent_goal": "Extract all medications with their dosages, frequencies, and routes from clinical text",
    "version": "1.0.0",
    "components": [
      {
        "component_id": "clinical-input",
        "component_type": "genesis:chat_input",
        "name": "Clinical Text Input",
        "description": "Receive clinical text for medication extraction",
        "purpose": "input",
        "category": "data",
        "config_schema": {},
        "input_data_types": [],
        "output_data_types": [
          "text",
          "json"
        ],
        "input_schema": null,
        "output_schema": null,
        "provides": [
          {
            "in": "extraction-agent",
            "useAs": "input",
            "description": "Clinical text input to agent"
          }
        ],
        "accepts_input_from": [],
        "sends_output_to": [
          "extraction-agent"
        ],
        "required_config": [],
        "optional_config": [],
        "capabilities": [],
        "usage_examples": [],
        "tags": []
      },
      {
        "component_id": "rxnorm-extractor",
        "component_type": "genesis:autonomize_model",
        "name": "RxNorm Medication Extractor",
        "description": "Extract medications with RxNorm codes using AutonomizeModel",
        "purpose": "model_inference",
        "category": "model",
        "config_schema": {
          "selected_model": "RxNorm Code"
        },
        "input_data_types": [
          "clinical_text",
          "medication_text"
        ],
        "output_data_types": [
          "structured_codes",
          "rxnorm_codes",
          "json"
        ],
        "input_schema": null,
        "output_schema": null,
        "provides": [
          {
            "in": "extraction-agent",
            "useAs": "tool",
            "description": "RxNorm extraction tool for agent"
          }
        ],
        "accepts_input_from": [],
        "sends_output_to": [
          "extraction-agent"
        ],
        "required_config": [
          "selected_model"
        ],
        "optional_config": [],
        "capabilities": [
          "medication_extraction",
          "drug_coding",
          "rxnorm_mapping"
        ],
        "usage_examples": [],
        "tags": []
      },
      {
        "component_id": "extraction-agent",
        "component_type": "genesis:agent",
        "name": "Medication Extraction Agent",
        "description": "Agent specialized in medication extraction",
        "purpose": "processing",
        "category": "agent",
        "config_schema": {
          "has_system_prompt": true,
          "temperature": 0.1,
          "max_tokens": 2000
        },
        "input_data_types": [
          "text",
          "json",
          "structured_data",
          "tool_results"
        ],
        "output_data_types": [
          "text",
          "json",
          "structured_data",
          "agent_response"
        ],
        "input_schema": null,
        "output_schema": null,
        "provides": [
          {
            "in": "medication-output",
            "useAs": "input",
            "description": "Extracted medications to output"
          }
        ],
        "accepts_input_from": [],
        "sends_output_to": [
          "medication-output"
        ],
        "required_config": [],
        "optional_config": [
          "system_prompt",
          "temperature",
          "max_tokens"
        ],
        "capabilities": [],
        "usage_examples": [],
        "tags": []
      },
      {
        "component_id": "medication-output",
        "component_type": "genesis:chat_output",
        "name": "Medication Results",
        "description": "Display extracted medications",
        "purpose": "output",
        "category": "data",
        "config_schema": {},
        "input_data_types": [
          "text",
          "json",
          "structured_data"
        ],
        "output_data_types": [],
        "input_schema": null,
        "output_schema": null,
        "provides": [],
        "accepts_input_from": [],
        "sends_output_to": [],
        "required_config": [],
        "optional_config": [],
        "capabilities": [],
        "usage_examples": [],
        "tags": []
      }
    ],
    "component_types": [
      "genesis:agent",
      "genesis:autonomize_model",
      "genesis:chat_output",
      "genesis:chat_input"
    ],
    "component_categories": [
      "model",
      "data",
      "agent"
    ],
    "capabilities": [
      "drug_coding",
      "rxnorm_mapping",
      "clinical_ai_processing",
      "ai_powered_processing",
      "medication_extraction"
    ],
    "input_components": [
      "clinical-input"
    ],
    "output_components": [
      "medication-output"
    ],
    "tool_components": [],
    "model_components": [
      "rxnorm-extractor"
    ],
    "agent_components": [
      "extraction-agent"
    ],
    "data_flow": [
      {
        "from_component": "clinical-input",
        "to_component": "extraction-agent",
        "from_type": "genesis:chat_input",
        "to_type": "genesis:agent",
        "from_category": "data",
        "to_category": "agent",
        "data_purpose": "input"
      },
      {
        "from_component": "rxnorm-extractor",
        "to_component": "extraction-agent",
        "from_type": "genesis:autonomize_model",
        "to_type": "genesis:agent",
        "from_category": "model",
        "to_category": "agent",
        "data_purpose": "model_inference"
      },
      {
        "from_component": "extraction-agent",
        "to_component": "medication-output",
        "from_type": "genesis:agent",
        "to_type": "genesis:chat_output",
        "from_category": "agent",
        "to_category": "data",
        "data_purpose": "processing"
      }
    ],
    "complexity_score": 10,
    "tags": [
      "medical",
      "healthcare",
      "clinical-ai"
    ],
    "domain": "healthcare",
    "file_path": "genesis-agents-cli/examples/agents/medication-extractor.yaml",
    "created_at": "2025-10-08T14:22:10.258042"
  },
  "9d4200bb1a99f8b8": {
    "agent_id": "9d4200bb1a99f8b8",
    "name": "Accumulator Check Agent",
    "description": "Checks member's deductible, out-of-pocket maximums, and benefit utilization",
    "agent_goal": "Analyze member's benefit accumulators including deductibles, out-of-pocket maximums, and utilization limits",
    "version": "1.0.0",
    "components": [
      {
        "component_id": "input",
        "component_type": "genesis:chat_input",
        "name": "Accumulator Request",
        "description": "Member and service information for accumulator check",
        "purpose": "input",
        "category": "data",
        "config_schema": {},
        "input_data_types": [],
        "output_data_types": [
          "text",
          "json"
        ],
        "input_schema": null,
        "output_schema": null,
        "provides": [
          {
            "useAs": "input",
            "in": "accumulator-agent",
            "description": "Request details"
          }
        ],
        "accepts_input_from": [],
        "sends_output_to": [
          "accumulator-agent"
        ],
        "required_config": [],
        "optional_config": [],
        "capabilities": [],
        "usage_examples": [],
        "tags": []
      },
      {
        "component_id": "accumulator-agent-prompt",
        "component_type": "genesis:prompt_template",
        "name": "Agent Instructions",
        "description": "Prompt template for agent instructions",
        "purpose": "unknown",
        "category": "unknown",
        "config_schema": {},
        "input_data_types": [
          "text",
          "json"
        ],
        "output_data_types": [
          "text",
          "json"
        ],
        "input_schema": null,
        "output_schema": null,
        "provides": [
          {
            "useAs": "system_prompt",
            "in": "accumulator-agent",
            "description": "System prompt for the agent"
          }
        ],
        "accepts_input_from": [],
        "sends_output_to": [
          "accumulator-agent"
        ],
        "required_config": [],
        "optional_config": [],
        "capabilities": [],
        "usage_examples": [],
        "tags": []
      },
      {
        "component_id": "accumulator-agent",
        "component_type": "genesis:agent",
        "name": "Accumulator Check Agent",
        "description": "Analyzes benefit accumulators",
        "purpose": "processing",
        "category": "agent",
        "config_schema": {
          "temperature": 0.1,
          "max_tokens": 2000
        },
        "input_data_types": [
          "text",
          "json",
          "structured_data",
          "tool_results"
        ],
        "output_data_types": [
          "text",
          "json",
          "structured_data",
          "agent_response"
        ],
        "input_schema": null,
        "output_schema": null,
        "provides": [
          {
            "useAs": "input",
            "in": "accumulator-formatter",
            "description": "Accumulator analysis results"
          }
        ],
        "accepts_input_from": [],
        "sends_output_to": [
          "accumulator-formatter"
        ],
        "required_config": [],
        "optional_config": [
          "temperature",
          "max_tokens"
        ],
        "capabilities": [],
        "usage_examples": [],
        "tags": []
      },
      {
        "component_id": "qnxt-accumulator",
        "component_type": "genesis:mcp_tool",
        "name": "QNXT Auth History",
        "description": "Retrieve claims and authorization history via MCP",
        "purpose": "mcp_integration",
        "category": "mcp",
        "config_schema": {},
        "input_data_types": [
          "text",
          "json",
          "structured_data"
        ],
        "output_data_types": [
          "text",
          "json",
          "structured_data",
          "tool_response"
        ],
        "input_schema": null,
        "output_schema": null,
        "provides": [
          {
            "useAs": "tools",
            "in": "accumulator-agent",
            "description": "Real-time claims history"
          }
        ],
        "accepts_input_from": [],
        "sends_output_to": [
          "accumulator-agent"
        ],
        "required_config": [],
        "optional_config": [],
        "capabilities": [],
        "usage_examples": [],
        "tags": []
      },
      {
        "component_id": "claims-history",
        "component_type": "genesis:mcp_tool",
        "name": "Claims History API",
        "description": "Analyze claims history for accumulator impact via MCP",
        "purpose": "mcp_integration",
        "category": "mcp",
        "config_schema": {},
        "input_data_types": [
          "text",
          "json",
          "structured_data"
        ],
        "output_data_types": [
          "text",
          "json",
          "structured_data",
          "tool_response"
        ],
        "input_schema": null,
        "output_schema": null,
        "provides": [
          {
            "useAs": "tools",
            "in": "accumulator-agent",
            "description": "Claims analysis tool"
          }
        ],
        "accepts_input_from": [],
        "sends_output_to": [
          "accumulator-agent"
        ],
        "required_config": [],
        "optional_config": [],
        "capabilities": [],
        "usage_examples": [],
        "tags": []
      },
      {
        "component_id": "benefit-calculator",
        "component_type": "genesis:mcp_tool",
        "name": "Member Responsibility Calculator",
        "description": "Calculate member responsibility based on accumulators via MCP",
        "purpose": "mcp_integration",
        "category": "mcp",
        "config_schema": {},
        "input_data_types": [
          "text",
          "json",
          "structured_data"
        ],
        "output_data_types": [
          "text",
          "json",
          "structured_data",
          "tool_response"
        ],
        "input_schema": null,
        "output_schema": null,
        "provides": [
          {
            "useAs": "tools",
            "in": "accumulator-agent",
            "description": "Cost calculation tool"
          }
        ],
        "accepts_input_from": [],
        "sends_output_to": [
          "accumulator-agent"
        ],
        "required_config": [],
        "optional_config": [],
        "capabilities": [],
        "usage_examples": [],
        "tags": []
      },
      {
        "component_id": "accumulator-formatter",
        "component_type": "genesis:chat_output",
        "name": "Accumulator Report",
        "description": "Display accumulator check results",
        "purpose": "output",
        "category": "data",
        "config_schema": {},
        "input_data_types": [
          "text",
          "json",
          "structured_data"
        ],
        "output_data_types": [],
        "input_schema": null,
        "output_schema": null,
        "provides": [],
        "accepts_input_from": [],
        "sends_output_to": [],
        "required_config": [],
        "optional_config": [],
        "capabilities": [],
        "usage_examples": [],
        "tags": []
      }
    ],
    "component_types": [
      "genesis:mcp_tool",
      "genesis:agent",
      "genesis:prompt_template",
      "genesis:chat_output",
      "genesis:chat_input"
    ],
    "component_categories": [
      "data",
      "unknown",
      "mcp",
      "agent"
    ],
    "capabilities": [
      "external_system_integration"
    ],
    "input_components": [
      "input"
    ],
    "output_components": [
      "accumulator-formatter"
    ],
    "tool_components": [],
    "model_components": [],
    "agent_components": [
      "accumulator-agent"
    ],
    "data_flow": [
      {
        "from_component": "input",
        "to_component": "accumulator-agent",
        "from_type": "genesis:chat_input",
        "to_type": "genesis:agent",
        "from_category": "data",
        "to_category": "agent",
        "data_purpose": "input"
      },
      {
        "from_component": "accumulator-agent-prompt",
        "to_component": "accumulator-agent",
        "from_type": "genesis:prompt_template",
        "to_type": "genesis:agent",
        "from_category": "unknown",
        "to_category": "agent",
        "data_purpose": "unknown"
      },
      {
        "from_component": "accumulator-agent",
        "to_component": "accumulator-formatter",
        "from_type": "genesis:agent",
        "to_type": "genesis:chat_output",
        "from_category": "agent",
        "to_category": "data",
        "data_purpose": "processing"
      },
      {
        "from_component": "qnxt-accumulator",
        "to_component": "accumulator-agent",
        "from_type": "genesis:mcp_tool",
        "to_type": "genesis:agent",
        "from_category": "mcp",
        "to_category": "agent",
        "data_purpose": "mcp_integration"
      },
      {
        "from_component": "claims-history",
        "to_component": "accumulator-agent",
        "from_type": "genesis:mcp_tool",
        "to_type": "genesis:agent",
        "from_category": "mcp",
        "to_category": "agent",
        "data_purpose": "mcp_integration"
      },
      {
        "from_component": "benefit-calculator",
        "to_component": "accumulator-agent",
        "from_type": "genesis:mcp_tool",
        "to_type": "genesis:agent",
        "from_category": "mcp",
        "to_category": "agent",
        "data_purpose": "mcp_integration"
      }
    ],
    "complexity_score": 19,
    "tags": [],
    "domain": "integration",
    "file_path": "genesis-agents-cli/examples/agents/accumulator-check-agent.yaml",
    "created_at": "2025-10-08T14:22:10.265416"
  },
  "6f986d5c8367e0d0": {
    "agent_id": "6f986d5c8367e0d0",
    "name": "Q-set Retrieval Agent",
    "description": "Retrieve predefined Q-sets for pharmacy prior authorization evaluation",
    "agent_goal": "Retrieve a predefined Q-set used to evaluate pharmacy requests based on the prescribed medication and clinical context",
    "version": "1.0.0",
    "components": [
      {
        "component_id": "input",
        "component_type": "genesis:chat_input",
        "name": "Request Input",
        "description": "Input for q-set retrieval agent",
        "purpose": "input",
        "category": "data",
        "config_schema": {},
        "input_data_types": [],
        "output_data_types": [
          "text",
          "json"
        ],
        "input_schema": null,
        "output_schema": null,
        "provides": [
          {
            "useAs": "input",
            "in": "main-agent",
            "description": "Input data"
          }
        ],
        "accepts_input_from": [],
        "sends_output_to": [
          "main-agent"
        ],
        "required_config": [],
        "optional_config": [],
        "capabilities": [],
        "usage_examples": [],
        "tags": []
      },
      {
        "component_id": "main-agent-prompt",
        "component_type": "genesis:prompt_template",
        "name": "Agent Instructions",
        "description": "Prompt template for agent instructions",
        "purpose": "unknown",
        "category": "unknown",
        "config_schema": {},
        "input_data_types": [
          "text",
          "json"
        ],
        "output_data_types": [
          "text",
          "json"
        ],
        "input_schema": null,
        "output_schema": null,
        "provides": [
          {
            "useAs": "system_prompt",
            "in": "main-agent",
            "description": "System prompt for the agent"
          }
        ],
        "accepts_input_from": [],
        "sends_output_to": [
          "main-agent"
        ],
        "required_config": [],
        "optional_config": [],
        "capabilities": [],
        "usage_examples": [],
        "tags": []
      },
      {
        "component_id": "main-agent",
        "component_type": "genesis:agent",
        "name": "Q-set Retrieval Agent",
        "description": "Retrieve predefined Q-sets for pharmacy prior authorization evaluation",
        "purpose": "processing",
        "category": "agent",
        "config_schema": {
          "temperature": 0.1,
          "max_tokens": 2000
        },
        "input_data_types": [
          "text",
          "json",
          "structured_data",
          "tool_results"
        ],
        "output_data_types": [
          "text",
          "json",
          "structured_data",
          "agent_response"
        ],
        "input_schema": null,
        "output_schema": null,
        "provides": [
          {
            "useAs": "input",
            "in": "output",
            "description": "Results"
          }
        ],
        "accepts_input_from": [],
        "sends_output_to": [
          "output"
        ],
        "required_config": [],
        "optional_config": [
          "temperature",
          "max_tokens"
        ],
        "capabilities": [],
        "usage_examples": [],
        "tags": []
      },
      {
        "component_id": "tool-1",
        "component_type": "genesis:knowledge_hub_search",
        "name": "Knowledge Hub Search",
        "description": "Tool for q-set retrieval agent",
        "purpose": "unknown",
        "category": "unknown",
        "config_schema": {},
        "input_data_types": [
          "text",
          "json"
        ],
        "output_data_types": [
          "text",
          "json"
        ],
        "input_schema": null,
        "output_schema": null,
        "provides": [
          {
            "useAs": "tools",
            "in": "main-agent",
            "description": "Knowledge Hub Search tool"
          }
        ],
        "accepts_input_from": [],
        "sends_output_to": [
          "main-agent"
        ],
        "required_config": [],
        "optional_config": [],
        "capabilities": [],
        "usage_examples": [],
        "tags": []
      },
      {
        "component_id": "output",
        "component_type": "genesis:chat_output",
        "name": "Results Output",
        "description": "Display results",
        "purpose": "output",
        "category": "data",
        "config_schema": {},
        "input_data_types": [
          "text",
          "json",
          "structured_data"
        ],
        "output_data_types": [],
        "input_schema": null,
        "output_schema": null,
        "provides": [],
        "accepts_input_from": [],
        "sends_output_to": [],
        "required_config": [],
        "optional_config": [],
        "capabilities": [],
        "usage_examples": [],
        "tags": []
      }
    ],
    "component_types": [
      "genesis:agent",
      "genesis:knowledge_hub_search",
      "genesis:prompt_template",
      "genesis:chat_output",
      "genesis:chat_input"
    ],
    "component_categories": [
      "data",
      "unknown",
      "agent"
    ],
    "capabilities": [],
    "input_components": [
      "input"
    ],
    "output_components": [
      "output"
    ],
    "tool_components": [],
    "model_components": [],
    "agent_components": [
      "main-agent"
    ],
    "data_flow": [
      {
        "from_component": "input",
        "to_component": "main-agent",
        "from_type": "genesis:chat_input",
        "to_type": "genesis:agent",
        "from_category": "data",
        "to_category": "agent",
        "data_purpose": "input"
      },
      {
        "from_component": "main-agent-prompt",
        "to_component": "main-agent",
        "from_type": "genesis:prompt_template",
        "to_type": "genesis:agent",
        "from_category": "unknown",
        "to_category": "agent",
        "data_purpose": "unknown"
      },
      {
        "from_component": "main-agent",
        "to_component": "output",
        "from_type": "genesis:agent",
        "to_type": "genesis:chat_output",
        "from_category": "agent",
        "to_category": "data",
        "data_purpose": "processing"
      },
      {
        "from_component": "tool-1",
        "to_component": "main-agent",
        "from_type": "genesis:knowledge_hub_search",
        "to_type": "genesis:agent",
        "from_category": "unknown",
        "to_category": "agent",
        "data_purpose": "unknown"
      }
    ],
    "complexity_score": 13,
    "tags": [],
    "domain": "general",
    "file_path": "genesis-agents-cli/examples/agents/q-set-retrieval-agent.yaml",
    "created_at": "2025-10-08T14:22:10.269590"
  },
  "b4597a7b08d3f5a0": {
    "agent_id": "b4597a7b08d3f5a0",
    "name": "Guideline Check Agent",
    "description": "Perform rule-based checks for Medicare coverage, policy compliance, and medical necessity",
    "agent_goal": "Run pre-adjudication validations such as Medicare coverage, setting accuracy, and predefined policy checks to ensure rule compliance",
    "version": "1.0.0",
    "components": [
      {
        "component_id": "guideline-input",
        "component_type": "genesis:chat_input",
        "name": "Case Information",
        "description": "Case context and procedure information for guideline checking",
        "purpose": "input",
        "category": "data",
        "config_schema": {},
        "input_data_types": [],
        "output_data_types": [
          "text",
          "json"
        ],
        "input_schema": null,
        "output_schema": null,
        "provides": [
          {
            "useAs": "input",
            "in": "guideline-check-agent",
            "description": "Case details for validation"
          }
        ],
        "accepts_input_from": [],
        "sends_output_to": [
          "guideline-check-agent"
        ],
        "required_config": [],
        "optional_config": [],
        "capabilities": [],
        "usage_examples": [],
        "tags": []
      },
      {
        "component_id": "guideline-check-agent-prompt",
        "component_type": "genesis:prompt_template",
        "name": "Agent Instructions",
        "description": "Prompt template for agent instructions",
        "purpose": "unknown",
        "category": "unknown",
        "config_schema": {},
        "input_data_types": [
          "text",
          "json"
        ],
        "output_data_types": [
          "text",
          "json"
        ],
        "input_schema": null,
        "output_schema": null,
        "provides": [
          {
            "useAs": "system_prompt",
            "in": "guideline-check-agent",
            "description": "System prompt for the agent"
          }
        ],
        "accepts_input_from": [],
        "sends_output_to": [
          "guideline-check-agent"
        ],
        "required_config": [],
        "optional_config": [],
        "capabilities": [],
        "usage_examples": [],
        "tags": []
      },
      {
        "component_id": "guideline-check-agent",
        "component_type": "genesis:agent",
        "name": "Clinical Guideline Validation Agent",
        "description": "Validates requests against clinical guidelines and policies",
        "purpose": "processing",
        "category": "agent",
        "config_schema": {
          "temperature": 0.1,
          "max_tokens": 2000
        },
        "input_data_types": [
          "text",
          "json",
          "structured_data",
          "tool_results"
        ],
        "output_data_types": [
          "text",
          "json",
          "structured_data",
          "agent_response"
        ],
        "input_schema": null,
        "output_schema": null,
        "provides": [
          {
            "useAs": "input",
            "in": "guideline-output",
            "description": "Validation results"
          }
        ],
        "accepts_input_from": [],
        "sends_output_to": [
          "guideline-output"
        ],
        "required_config": [],
        "optional_config": [
          "temperature",
          "max_tokens"
        ],
        "capabilities": [],
        "usage_examples": [],
        "tags": []
      },
      {
        "component_id": "pa-lookup-tool",
        "component_type": "genesis:mcp_tool",
        "name": "PA Guidelines Lookup",
        "description": "Look up specific prior authorization guidelines via MCP",
        "purpose": "mcp_integration",
        "category": "mcp",
        "config_schema": {},
        "input_data_types": [
          "text",
          "json",
          "structured_data"
        ],
        "output_data_types": [
          "text",
          "json",
          "structured_data",
          "tool_response"
        ],
        "input_schema": null,
        "output_schema": null,
        "provides": [
          {
            "useAs": "tools",
            "in": "guideline-check-agent",
            "description": "PA policy lookup tool"
          }
        ],
        "accepts_input_from": [],
        "sends_output_to": [
          "guideline-check-agent"
        ],
        "required_config": [],
        "optional_config": [],
        "capabilities": [],
        "usage_examples": [],
        "tags": []
      },
      {
        "component_id": "guideline-output",
        "component_type": "genesis:chat_output",
        "name": "Guideline Validation Results",
        "description": "Display guideline check results and recommendations",
        "purpose": "output",
        "category": "data",
        "config_schema": {},
        "input_data_types": [
          "text",
          "json",
          "structured_data"
        ],
        "output_data_types": [],
        "input_schema": null,
        "output_schema": null,
        "provides": [],
        "accepts_input_from": [],
        "sends_output_to": [],
        "required_config": [],
        "optional_config": [],
        "capabilities": [],
        "usage_examples": [],
        "tags": []
      }
    ],
    "component_types": [
      "genesis:mcp_tool",
      "genesis:agent",
      "genesis:prompt_template",
      "genesis:chat_output",
      "genesis:chat_input"
    ],
    "component_categories": [
      "data",
      "unknown",
      "mcp",
      "agent"
    ],
    "capabilities": [
      "external_system_integration"
    ],
    "input_components": [
      "guideline-input"
    ],
    "output_components": [
      "guideline-output"
    ],
    "tool_components": [],
    "model_components": [],
    "agent_components": [
      "guideline-check-agent"
    ],
    "data_flow": [
      {
        "from_component": "guideline-input",
        "to_component": "guideline-check-agent",
        "from_type": "genesis:chat_input",
        "to_type": "genesis:agent",
        "from_category": "data",
        "to_category": "agent",
        "data_purpose": "input"
      },
      {
        "from_component": "guideline-check-agent-prompt",
        "to_component": "guideline-check-agent",
        "from_type": "genesis:prompt_template",
        "to_type": "genesis:agent",
        "from_category": "unknown",
        "to_category": "agent",
        "data_purpose": "unknown"
      },
      {
        "from_component": "guideline-check-agent",
        "to_component": "guideline-output",
        "from_type": "genesis:agent",
        "to_type": "genesis:chat_output",
        "from_category": "agent",
        "to_category": "data",
        "data_purpose": "processing"
      },
      {
        "from_component": "pa-lookup-tool",
        "to_component": "guideline-check-agent",
        "from_type": "genesis:mcp_tool",
        "to_type": "genesis:agent",
        "from_category": "mcp",
        "to_category": "agent",
        "data_purpose": "mcp_integration"
      }
    ],
    "complexity_score": 13,
    "tags": [
      "medical",
      "healthcare"
    ],
    "domain": "integration",
    "file_path": "genesis-agents-cli/examples/agents/guideline-check-agent.yaml",
    "created_at": "2025-10-08T14:22:10.274855"
  },
  "ad9b1760c511f118": {
    "agent_id": "ad9b1760c511f118",
    "name": "Clinical Validator",
    "description": "Validate clinical requests against medical guidelines and payer policies",
    "agent_goal": "Validate clinical requests against medical guidelines and payer policies to ensure medical necessity and appropriate care",
    "version": "2.0.0",
    "components": [
      {
        "component_id": "clinical-request",
        "component_type": "genesis:chat_input",
        "name": "Clinical Request",
        "description": "Clinical validation request with diagnosis and procedure",
        "purpose": "input",
        "category": "data",
        "config_schema": {},
        "input_data_types": [],
        "output_data_types": [
          "text",
          "json"
        ],
        "input_schema": null,
        "output_schema": null,
        "provides": [
          {
            "useAs": "input",
            "in": "validator-agent",
            "description": "Clinical information to validate"
          }
        ],
        "accepts_input_from": [],
        "sends_output_to": [
          "validator-agent"
        ],
        "required_config": [],
        "optional_config": [],
        "capabilities": [],
        "usage_examples": [],
        "tags": []
      },
      {
        "component_id": "validator-agent-prompt",
        "component_type": "genesis:prompt_template",
        "name": "Agent Instructions",
        "description": "Prompt template for agent instructions",
        "purpose": "unknown",
        "category": "unknown",
        "config_schema": {},
        "input_data_types": [
          "text",
          "json"
        ],
        "output_data_types": [
          "text",
          "json"
        ],
        "input_schema": null,
        "output_schema": null,
        "provides": [
          {
            "useAs": "system_prompt",
            "in": "validator-agent",
            "description": "System prompt for the agent"
          }
        ],
        "accepts_input_from": [],
        "sends_output_to": [
          "validator-agent"
        ],
        "required_config": [],
        "optional_config": [],
        "capabilities": [],
        "usage_examples": [],
        "tags": []
      },
      {
        "component_id": "validator-agent",
        "component_type": "genesis:agent",
        "name": "Clinical Validation Agent",
        "description": "Validates clinical appropriateness",
        "purpose": "processing",
        "category": "agent",
        "config_schema": {
          "temperature": 0.1,
          "max_tokens": 1500
        },
        "input_data_types": [
          "text",
          "json",
          "structured_data",
          "tool_results"
        ],
        "output_data_types": [
          "text",
          "json",
          "structured_data",
          "agent_response"
        ],
        "input_schema": null,
        "output_schema": null,
        "provides": [
          {
            "useAs": "input",
            "in": "validation-output",
            "description": "Validation results"
          }
        ],
        "accepts_input_from": [],
        "sends_output_to": [
          "validation-output"
        ],
        "required_config": [],
        "optional_config": [
          "temperature",
          "max_tokens"
        ],
        "capabilities": [],
        "usage_examples": [],
        "tags": []
      },
      {
        "component_id": "icd10-validator",
        "component_type": "genesis:autonomize_model",
        "name": "ICD-10 Code Validator",
        "description": "Validate and extract ICD-10 diagnosis codes",
        "purpose": "model_inference",
        "category": "model",
        "config_schema": {},
        "input_data_types": [
          "text"
        ],
        "output_data_types": [
          "text",
          "structured_data"
        ],
        "input_schema": null,
        "output_schema": null,
        "provides": [
          {
            "useAs": "tools",
            "in": "validator-agent",
            "description": "Diagnosis code validation"
          }
        ],
        "accepts_input_from": [],
        "sends_output_to": [
          "validator-agent"
        ],
        "required_config": [],
        "optional_config": [],
        "capabilities": [],
        "usage_examples": [],
        "tags": []
      },
      {
        "component_id": "cpt-validator",
        "component_type": "genesis:autonomize_model",
        "name": "CPT Code Validator",
        "description": "Validate CPT procedure codes",
        "purpose": "model_inference",
        "category": "model",
        "config_schema": {},
        "input_data_types": [
          "text"
        ],
        "output_data_types": [
          "text",
          "structured_data"
        ],
        "input_schema": null,
        "output_schema": null,
        "provides": [
          {
            "useAs": "tools",
            "in": "validator-agent",
            "description": "Procedure code validation"
          }
        ],
        "accepts_input_from": [],
        "sends_output_to": [
          "validator-agent"
        ],
        "required_config": [],
        "optional_config": [],
        "capabilities": [],
        "usage_examples": [],
        "tags": []
      },
      {
        "component_id": "guidelines-search",
        "component_type": "genesis:knowledge_hub_search",
        "name": "Clinical Guidelines",
        "description": "Search clinical practice guidelines",
        "purpose": "unknown",
        "category": "unknown",
        "config_schema": {},
        "input_data_types": [
          "text",
          "json"
        ],
        "output_data_types": [
          "text",
          "json"
        ],
        "input_schema": null,
        "output_schema": null,
        "provides": [
          {
            "useAs": "tools",
            "in": "validator-agent",
            "description": "Guidelines search tool"
          }
        ],
        "accepts_input_from": [],
        "sends_output_to": [
          "validator-agent"
        ],
        "required_config": [],
        "optional_config": [],
        "capabilities": [],
        "usage_examples": [],
        "tags": []
      },
      {
        "component_id": "validation-output",
        "component_type": "genesis:chat_output",
        "name": "Validation Results",
        "description": "Display clinical validation results",
        "purpose": "output",
        "category": "data",
        "config_schema": {},
        "input_data_types": [
          "text",
          "json",
          "structured_data"
        ],
        "output_data_types": [],
        "input_schema": null,
        "output_schema": null,
        "provides": [],
        "accepts_input_from": [],
        "sends_output_to": [],
        "required_config": [],
        "optional_config": [],
        "capabilities": [],
        "usage_examples": [],
        "tags": []
      }
    ],
    "component_types": [
      "genesis:autonomize_model",
      "genesis:agent",
      "genesis:knowledge_hub_search",
      "genesis:prompt_template",
      "genesis:chat_output",
      "genesis:chat_input"
    ],
    "component_categories": [
      "model",
      "data",
      "unknown",
      "agent"
    ],
    "capabilities": [
      "clinical_ai_processing",
      "ai_powered_processing"
    ],
    "input_components": [
      "clinical-request"
    ],
    "output_components": [
      "validation-output"
    ],
    "tool_components": [],
    "model_components": [
      "icd10-validator",
      "cpt-validator"
    ],
    "agent_components": [
      "validator-agent"
    ],
    "data_flow": [
      {
        "from_component": "clinical-request",
        "to_component": "validator-agent",
        "from_type": "genesis:chat_input",
        "to_type": "genesis:agent",
        "from_category": "data",
        "to_category": "agent",
        "data_purpose": "input"
      },
      {
        "from_component": "validator-agent-prompt",
        "to_component": "validator-agent",
        "from_type": "genesis:prompt_template",
        "to_type": "genesis:agent",
        "from_category": "unknown",
        "to_category": "agent",
        "data_purpose": "unknown"
      },
      {
        "from_component": "validator-agent",
        "to_component": "validation-output",
        "from_type": "genesis:agent",
        "to_type": "genesis:chat_output",
        "from_category": "agent",
        "to_category": "data",
        "data_purpose": "processing"
      },
      {
        "from_component": "icd10-validator",
        "to_component": "validator-agent",
        "from_type": "genesis:autonomize_model",
        "to_type": "genesis:agent",
        "from_category": "model",
        "to_category": "agent",
        "data_purpose": "model_inference"
      },
      {
        "from_component": "cpt-validator",
        "to_component": "validator-agent",
        "from_type": "genesis:autonomize_model",
        "to_type": "genesis:agent",
        "from_category": "model",
        "to_category": "agent",
        "data_purpose": "model_inference"
      },
      {
        "from_component": "guidelines-search",
        "to_component": "validator-agent",
        "from_type": "genesis:knowledge_hub_search",
        "to_type": "genesis:agent",
        "from_category": "unknown",
        "to_category": "agent",
        "data_purpose": "unknown"
      }
    ],
    "complexity_score": 19,
    "tags": [
      "medical",
      "healthcare",
      "clinical-ai"
    ],
    "domain": "healthcare",
    "file_path": "genesis-agents-cli/examples/agents/clinical-validator.yaml",
    "created_at": "2025-10-08T14:22:10.280881"
  },
  "6a8f5824c3965918": {
    "agent_id": "6a8f5824c3965918",
    "name": "Q-set Adjudication Agent",
    "description": "Apply Q-set logic to determine pharmacy PA approval or denial",
    "agent_goal": "Determine PA outcome based on retrieved Q-set by comparing case data with coverage requirements and producing a decision with rationale",
    "version": "1.0.0",
    "components": [
      {
        "component_id": "input",
        "component_type": "genesis:chat_input",
        "name": "Request Input",
        "description": "Input for q-set adjudication agent",
        "purpose": "input",
        "category": "data",
        "config_schema": {},
        "input_data_types": [],
        "output_data_types": [
          "text",
          "json"
        ],
        "input_schema": null,
        "output_schema": null,
        "provides": [
          {
            "useAs": "input",
            "in": "main-agent",
            "description": "Input data"
          }
        ],
        "accepts_input_from": [],
        "sends_output_to": [
          "main-agent"
        ],
        "required_config": [],
        "optional_config": [],
        "capabilities": [],
        "usage_examples": [],
        "tags": []
      },
      {
        "component_id": "main-agent",
        "component_type": "genesis:agent",
        "name": "Q-set Adjudication Agent",
        "description": "Apply Q-set logic to determine pharmacy PA approval or denial",
        "purpose": "processing",
        "category": "agent",
        "config_schema": {
          "has_system_prompt": true,
          "temperature": 0.1,
          "max_tokens": 2000
        },
        "input_data_types": [
          "text",
          "json",
          "structured_data",
          "tool_results"
        ],
        "output_data_types": [
          "text",
          "json",
          "structured_data",
          "agent_response"
        ],
        "input_schema": null,
        "output_schema": null,
        "provides": [
          {
            "useAs": "input",
            "in": "output",
            "description": "Results"
          }
        ],
        "accepts_input_from": [],
        "sends_output_to": [
          "output"
        ],
        "required_config": [],
        "optional_config": [
          "system_prompt",
          "temperature",
          "max_tokens"
        ],
        "capabilities": [],
        "usage_examples": [],
        "tags": []
      },
      {
        "component_id": "tool-1",
        "component_type": "genesis:prompt_template",
        "name": "Prompt Template",
        "description": "Tool for q-set adjudication agent",
        "purpose": "unknown",
        "category": "unknown",
        "config_schema": {},
        "input_data_types": [
          "text",
          "json"
        ],
        "output_data_types": [
          "text",
          "json"
        ],
        "input_schema": null,
        "output_schema": null,
        "provides": [
          {
            "useAs": "tools",
            "in": "main-agent",
            "description": "Prompt Template tool"
          }
        ],
        "accepts_input_from": [],
        "sends_output_to": [
          "main-agent"
        ],
        "required_config": [],
        "optional_config": [],
        "capabilities": [],
        "usage_examples": [],
        "tags": []
      },
      {
        "component_id": "output",
        "component_type": "genesis:chat_output",
        "name": "Results Output",
        "description": "Display results",
        "purpose": "output",
        "category": "data",
        "config_schema": {},
        "input_data_types": [
          "text",
          "json",
          "structured_data"
        ],
        "output_data_types": [],
        "input_schema": null,
        "output_schema": null,
        "provides": [],
        "accepts_input_from": [],
        "sends_output_to": [],
        "required_config": [],
        "optional_config": [],
        "capabilities": [],
        "usage_examples": [],
        "tags": []
      }
    ],
    "component_types": [
      "genesis:agent",
      "genesis:prompt_template",
      "genesis:chat_output",
      "genesis:chat_input"
    ],
    "component_categories": [
      "data",
      "unknown",
      "agent"
    ],
    "capabilities": [],
    "input_components": [
      "input"
    ],
    "output_components": [
      "output"
    ],
    "tool_components": [],
    "model_components": [],
    "agent_components": [
      "main-agent"
    ],
    "data_flow": [
      {
        "from_component": "input",
        "to_component": "main-agent",
        "from_type": "genesis:chat_input",
        "to_type": "genesis:agent",
        "from_category": "data",
        "to_category": "agent",
        "data_purpose": "input"
      },
      {
        "from_component": "main-agent",
        "to_component": "output",
        "from_type": "genesis:agent",
        "to_type": "genesis:chat_output",
        "from_category": "agent",
        "to_category": "data",
        "data_purpose": "processing"
      },
      {
        "from_component": "tool-1",
        "to_component": "main-agent",
        "from_type": "genesis:prompt_template",
        "to_type": "genesis:agent",
        "from_category": "unknown",
        "to_category": "agent",
        "data_purpose": "unknown"
      }
    ],
    "complexity_score": 10,
    "tags": [],
    "domain": "general",
    "file_path": "genesis-agents-cli/examples/agents/q-set-adjudication-agent.yaml",
    "created_at": "2025-10-08T14:22:10.285354"
  },
  "17ea38930cbd4adc": {
    "agent_id": "17ea38930cbd4adc",
    "name": "Benefit Check Agent",
    "description": "Orchestrates comprehensive healthcare authorization analysis using specialized agents",
    "agent_goal": "Orchestrate comprehensive healthcare authorization analysis by evaluating service code eligibility, coverage benefits, and utilization limits",
    "version": "1.0.0",
    "components": [
      {
        "component_id": "authorization-input",
        "component_type": "genesis:chat_input",
        "name": "Authorization Request",
        "description": "Input for authorization request with member and service details",
        "purpose": "input",
        "category": "data",
        "config_schema": {},
        "input_data_types": [],
        "output_data_types": [
          "text",
          "json"
        ],
        "input_schema": null,
        "output_schema": null,
        "provides": [
          {
            "in": "orchestrator-agent",
            "useAs": "input",
            "description": "Authorization request to orchestrator"
          }
        ],
        "accepts_input_from": [],
        "sends_output_to": [
          "orchestrator-agent"
        ],
        "required_config": [],
        "optional_config": [],
        "capabilities": [],
        "usage_examples": [],
        "tags": []
      },
      {
        "component_id": "eoc-checker",
        "component_type": "genesis:agent",
        "name": "EOC Check Agent",
        "description": "Evidence of Coverage validation agent",
        "purpose": "processing",
        "category": "agent",
        "config_schema": {
          "has_system_prompt": true,
          "temperature": 0.1
        },
        "input_data_types": [
          "text",
          "json",
          "structured_data",
          "tool_results"
        ],
        "output_data_types": [
          "text",
          "json",
          "structured_data",
          "agent_response"
        ],
        "input_schema": null,
        "output_schema": null,
        "provides": [
          {
            "in": "orchestrator-agent",
            "useAs": "tool",
            "description": "EOC validation tool"
          }
        ],
        "accepts_input_from": [],
        "sends_output_to": [
          "orchestrator-agent"
        ],
        "required_config": [],
        "optional_config": [
          "system_prompt",
          "temperature"
        ],
        "capabilities": [],
        "usage_examples": [],
        "tags": []
      },
      {
        "component_id": "eligibility-checker",
        "component_type": "genesis:agent",
        "name": "Eligibility Check Agent",
        "description": "Member eligibility validation agent",
        "purpose": "processing",
        "category": "agent",
        "config_schema": {
          "has_system_prompt": true,
          "temperature": 0.1
        },
        "input_data_types": [
          "text",
          "json",
          "structured_data",
          "tool_results"
        ],
        "output_data_types": [
          "text",
          "json",
          "structured_data",
          "agent_response"
        ],
        "input_schema": null,
        "output_schema": null,
        "provides": [
          {
            "in": "orchestrator-agent",
            "useAs": "tool",
            "description": "Eligibility validation tool"
          }
        ],
        "accepts_input_from": [],
        "sends_output_to": [
          "orchestrator-agent"
        ],
        "required_config": [],
        "optional_config": [
          "system_prompt",
          "temperature"
        ],
        "capabilities": [],
        "usage_examples": [],
        "tags": []
      },
      {
        "component_id": "orchestrator-agent",
        "component_type": "genesis:agent",
        "name": "Benefit Orchestrator",
        "description": "Main orchestrator for comprehensive benefit analysis",
        "purpose": "processing",
        "category": "agent",
        "config_schema": {
          "has_system_prompt": true,
          "temperature": 0.2,
          "max_tokens": 2000
        },
        "input_data_types": [
          "text",
          "json",
          "structured_data",
          "tool_results"
        ],
        "output_data_types": [
          "text",
          "json",
          "structured_data",
          "agent_response"
        ],
        "input_schema": null,
        "output_schema": null,
        "provides": [
          {
            "in": "authorization-output",
            "useAs": "input",
            "description": "Send orchestrated results to output"
          }
        ],
        "accepts_input_from": [],
        "sends_output_to": [
          "authorization-output"
        ],
        "required_config": [],
        "optional_config": [
          "system_prompt",
          "temperature",
          "max_tokens"
        ],
        "capabilities": [],
        "usage_examples": [],
        "tags": []
      },
      {
        "component_id": "authorization-output",
        "component_type": "genesis:chat_output",
        "name": "Authorization Decision",
        "description": "Display comprehensive authorization analysis and decision",
        "purpose": "output",
        "category": "data",
        "config_schema": {},
        "input_data_types": [
          "text",
          "json",
          "structured_data"
        ],
        "output_data_types": [],
        "input_schema": null,
        "output_schema": null,
        "provides": [],
        "accepts_input_from": [],
        "sends_output_to": [],
        "required_config": [],
        "optional_config": [],
        "capabilities": [],
        "usage_examples": [],
        "tags": []
      }
    ],
    "component_types": [
      "genesis:agent",
      "genesis:chat_output",
      "genesis:chat_input"
    ],
    "component_categories": [
      "data",
      "agent"
    ],
    "capabilities": [],
    "input_components": [
      "authorization-input"
    ],
    "output_components": [
      "authorization-output"
    ],
    "tool_components": [],
    "model_components": [],
    "agent_components": [
      "eoc-checker",
      "eligibility-checker",
      "orchestrator-agent"
    ],
    "data_flow": [
      {
        "from_component": "authorization-input",
        "to_component": "orchestrator-agent",
        "from_type": "genesis:chat_input",
        "to_type": "genesis:agent",
        "from_category": "data",
        "to_category": "agent",
        "data_purpose": "input"
      },
      {
        "from_component": "eoc-checker",
        "to_component": "orchestrator-agent",
        "from_type": "genesis:agent",
        "to_type": "genesis:agent",
        "from_category": "agent",
        "to_category": "agent",
        "data_purpose": "processing"
      },
      {
        "from_component": "eligibility-checker",
        "to_component": "orchestrator-agent",
        "from_type": "genesis:agent",
        "to_type": "genesis:agent",
        "from_category": "agent",
        "to_category": "agent",
        "data_purpose": "processing"
      },
      {
        "from_component": "orchestrator-agent",
        "to_component": "authorization-output",
        "from_type": "genesis:agent",
        "to_type": "genesis:chat_output",
        "from_category": "agent",
        "to_category": "data",
        "data_purpose": "processing"
      }
    ],
    "complexity_score": 13,
    "tags": [
      "medical",
      "healthcare"
    ],
    "domain": "general",
    "file_path": "genesis-agents-cli/examples/agents/benefit-check-agent.yaml",
    "created_at": "2025-10-08T14:22:10.287917"
  },
  "553bab50ba98d019": {
    "agent_id": "553bab50ba98d019",
    "name": "PA Coordinator Agent",
    "description": "Coordinates prior authorization processing using other agents as tools",
    "agent_goal": "Coordinate prior authorization requests by intelligently using specialized agents as tools",
    "version": "1.0.0",
    "components": [
      {
        "component_id": "pa-request-input",
        "component_type": "genesis:chat_input",
        "name": "PA Request",
        "description": "Prior authorization request information",
        "purpose": "input",
        "category": "data",
        "config_schema": {},
        "input_data_types": [],
        "output_data_types": [
          "text",
          "json"
        ],
        "input_schema": null,
        "output_schema": null,
        "provides": [
          {
            "useAs": "input",
            "in": "coordinator-agent",
            "description": "PA request details"
          }
        ],
        "accepts_input_from": [],
        "sends_output_to": [
          "coordinator-agent"
        ],
        "required_config": [],
        "optional_config": [],
        "capabilities": [],
        "usage_examples": [],
        "tags": []
      },
      {
        "component_id": "coordinator-agent-prompt",
        "component_type": "genesis:prompt_template",
        "name": "Agent Instructions",
        "description": "Prompt template for agent instructions",
        "purpose": "unknown",
        "category": "unknown",
        "config_schema": {},
        "input_data_types": [
          "text",
          "json"
        ],
        "output_data_types": [
          "text",
          "json"
        ],
        "input_schema": null,
        "output_schema": null,
        "provides": [
          {
            "useAs": "system_prompt",
            "in": "coordinator-agent",
            "description": "System prompt for the agent"
          }
        ],
        "accepts_input_from": [],
        "sends_output_to": [
          "coordinator-agent"
        ],
        "required_config": [],
        "optional_config": [],
        "capabilities": [],
        "usage_examples": [],
        "tags": []
      },
      {
        "component_id": "coordinator-agent",
        "component_type": "genesis:agent",
        "name": "PA Coordinator Agent",
        "description": "Main coordinator with access to other agents as tools",
        "purpose": "processing",
        "category": "agent",
        "config_schema": {
          "temperature": 0.2,
          "max_tokens": 3000
        },
        "input_data_types": [
          "text",
          "json",
          "structured_data",
          "tool_results"
        ],
        "output_data_types": [
          "text",
          "json",
          "structured_data",
          "agent_response"
        ],
        "input_schema": null,
        "output_schema": null,
        "provides": [
          {
            "useAs": "input",
            "in": "output-formatter",
            "description": "PA decision and processing summary"
          }
        ],
        "accepts_input_from": [],
        "sends_output_to": [
          "output-formatter"
        ],
        "required_config": [],
        "optional_config": [
          "temperature",
          "max_tokens"
        ],
        "capabilities": [],
        "usage_examples": [],
        "tags": []
      },
      {
        "component_id": "doc-processor-tool",
        "component_type": "$ref:document_processor",
        "name": "Document Processor Tool",
        "description": "Document processor agent used as tool",
        "purpose": "unknown",
        "category": "unknown",
        "config_schema": {},
        "input_data_types": [
          "text",
          "json",
          "structured_data"
        ],
        "output_data_types": [
          "text",
          "json",
          "structured_data",
          "agent_response"
        ],
        "input_schema": null,
        "output_schema": null,
        "provides": [
          {
            "useAs": "tools",
            "in": "coordinator-agent",
            "description": "Document processing tool"
          }
        ],
        "accepts_input_from": [],
        "sends_output_to": [
          "coordinator-agent"
        ],
        "required_config": [],
        "optional_config": [],
        "capabilities": [],
        "usage_examples": [],
        "tags": []
      },
      {
        "component_id": "med-extractor-tool",
        "component_type": "$ref:medication_extractor",
        "name": "Medication Extractor Tool",
        "description": "Medication extractor agent used as tool",
        "purpose": "unknown",
        "category": "unknown",
        "config_schema": {},
        "input_data_types": [
          "text",
          "json",
          "structured_data"
        ],
        "output_data_types": [
          "text",
          "json",
          "structured_data",
          "agent_response"
        ],
        "input_schema": null,
        "output_schema": null,
        "provides": [
          {
            "useAs": "tools",
            "in": "coordinator-agent",
            "description": "Medication extraction tool"
          }
        ],
        "accepts_input_from": [],
        "sends_output_to": [
          "coordinator-agent"
        ],
        "required_config": [],
        "optional_config": [],
        "capabilities": [],
        "usage_examples": [],
        "tags": []
      },
      {
        "component_id": "eligibility-tool",
        "component_type": "$ref:eligibility_checker",
        "name": "Eligibility Checker Tool",
        "description": "Eligibility checker agent used as tool",
        "purpose": "unknown",
        "category": "unknown",
        "config_schema": {},
        "input_data_types": [
          "text",
          "json",
          "structured_data"
        ],
        "output_data_types": [
          "text",
          "json",
          "structured_data",
          "agent_response"
        ],
        "input_schema": null,
        "output_schema": null,
        "provides": [
          {
            "useAs": "tools",
            "in": "coordinator-agent",
            "description": "Eligibility verification tool"
          }
        ],
        "accepts_input_from": [],
        "sends_output_to": [
          "coordinator-agent"
        ],
        "required_config": [],
        "optional_config": [],
        "capabilities": [],
        "usage_examples": [],
        "tags": []
      },
      {
        "component_id": "validator-tool",
        "component_type": "$ref:clinical_validator",
        "name": "Clinical Validator Tool",
        "description": "Clinical validator agent used as tool",
        "purpose": "unknown",
        "category": "unknown",
        "config_schema": {},
        "input_data_types": [
          "text",
          "json",
          "structured_data"
        ],
        "output_data_types": [
          "text",
          "json",
          "structured_data",
          "agent_response"
        ],
        "input_schema": null,
        "output_schema": null,
        "provides": [
          {
            "useAs": "tools",
            "in": "coordinator-agent",
            "description": "Clinical validation tool"
          }
        ],
        "accepts_input_from": [],
        "sends_output_to": [
          "coordinator-agent"
        ],
        "required_config": [],
        "optional_config": [],
        "capabilities": [],
        "usage_examples": [],
        "tags": []
      },
      {
        "component_id": "conversation-memory",
        "component_type": "genesis:conversation_chain",
        "name": "Conversation Memory",
        "description": "Track conversation context using ConversationChain",
        "purpose": "unknown",
        "category": "unknown",
        "config_schema": {},
        "input_data_types": [
          "text",
          "json"
        ],
        "output_data_types": [
          "text",
          "json"
        ],
        "input_schema": null,
        "output_schema": null,
        "provides": [
          {
            "useAs": "memory",
            "in": "coordinator-agent",
            "description": "Conversation history"
          }
        ],
        "accepts_input_from": [],
        "sends_output_to": [
          "coordinator-agent"
        ],
        "required_config": [],
        "optional_config": [],
        "capabilities": [],
        "usage_examples": [],
        "tags": []
      },
      {
        "component_id": "output-formatter",
        "component_type": "genesis:chat_output",
        "name": "PA Decision Output",
        "description": "Display final PA decision",
        "purpose": "output",
        "category": "data",
        "config_schema": {},
        "input_data_types": [
          "text",
          "json",
          "structured_data"
        ],
        "output_data_types": [],
        "input_schema": null,
        "output_schema": null,
        "provides": [],
        "accepts_input_from": [],
        "sends_output_to": [],
        "required_config": [],
        "optional_config": [],
        "capabilities": [],
        "usage_examples": [],
        "tags": []
      }
    ],
    "component_types": [
      "genesis:agent",
      "$ref:document_processor",
      "genesis:prompt_template",
      "genesis:chat_output",
      "$ref:eligibility_checker",
      "genesis:conversation_chain",
      "genesis:chat_input",
      "$ref:clinical_validator",
      "$ref:medication_extractor"
    ],
    "component_categories": [
      "data",
      "unknown",
      "agent"
    ],
    "capabilities": [],
    "input_components": [
      "pa-request-input"
    ],
    "output_components": [
      "output-formatter"
    ],
    "tool_components": [],
    "model_components": [],
    "agent_components": [
      "coordinator-agent"
    ],
    "data_flow": [
      {
        "from_component": "pa-request-input",
        "to_component": "coordinator-agent",
        "from_type": "genesis:chat_input",
        "to_type": "genesis:agent",
        "from_category": "data",
        "to_category": "agent",
        "data_purpose": "input"
      },
      {
        "from_component": "coordinator-agent-prompt",
        "to_component": "coordinator-agent",
        "from_type": "genesis:prompt_template",
        "to_type": "genesis:agent",
        "from_category": "unknown",
        "to_category": "agent",
        "data_purpose": "unknown"
      },
      {
        "from_component": "coordinator-agent",
        "to_component": "output-formatter",
        "from_type": "genesis:agent",
        "to_type": "genesis:chat_output",
        "from_category": "agent",
        "to_category": "data",
        "data_purpose": "processing"
      },
      {
        "from_component": "doc-processor-tool",
        "to_component": "coordinator-agent",
        "from_type": "$ref:document_processor",
        "to_type": "genesis:agent",
        "from_category": "unknown",
        "to_category": "agent",
        "data_purpose": "unknown"
      },
      {
        "from_component": "med-extractor-tool",
        "to_component": "coordinator-agent",
        "from_type": "$ref:medication_extractor",
        "to_type": "genesis:agent",
        "from_category": "unknown",
        "to_category": "agent",
        "data_purpose": "unknown"
      },
      {
        "from_component": "eligibility-tool",
        "to_component": "coordinator-agent",
        "from_type": "$ref:eligibility_checker",
        "to_type": "genesis:agent",
        "from_category": "unknown",
        "to_category": "agent",
        "data_purpose": "unknown"
      },
      {
        "from_component": "validator-tool",
        "to_component": "coordinator-agent",
        "from_type": "$ref:clinical_validator",
        "to_type": "genesis:agent",
        "from_category": "unknown",
        "to_category": "agent",
        "data_purpose": "unknown"
      },
      {
        "from_component": "conversation-memory",
        "to_component": "coordinator-agent",
        "from_type": "genesis:conversation_chain",
        "to_type": "genesis:agent",
        "from_category": "unknown",
        "to_category": "agent",
        "data_purpose": "unknown"
      }
    ],
    "complexity_score": 25,
    "tags": [
      "integration"
    ],
    "domain": "general",
    "file_path": "genesis-agents-cli/examples/agents/pa-coordinator.yaml",
    "created_at": "2025-10-08T14:22:10.296402"
  },
  "5b6c2a6bbae762ea": {
    "agent_id": "5b6c2a6bbae762ea",
    "name": "Prior Authorization Agent",
    "description": "Process prior authorization requests accurately and efficiently using clinical guidelines",
    "agent_goal": "Process prior authorization requests accurately and efficiently using clinical guidelines and payer policies to ensure timely patient care",
    "version": "2.0.0",
    "components": [
      {
        "component_id": "pa-request",
        "component_type": "genesis:chat_input",
        "name": "PA Request Input",
        "description": "Prior authorization request details",
        "purpose": "input",
        "category": "data",
        "config_schema": {},
        "input_data_types": [],
        "output_data_types": [
          "text",
          "json"
        ],
        "input_schema": null,
        "output_schema": null,
        "provides": [
          {
            "useAs": "input",
            "in": "pa-agent",
            "description": "PA request information"
          }
        ],
        "accepts_input_from": [],
        "sends_output_to": [
          "pa-agent"
        ],
        "required_config": [],
        "optional_config": [],
        "capabilities": [],
        "usage_examples": [],
        "tags": []
      },
      {
        "component_id": "pa-agent-prompt",
        "component_type": "genesis:prompt_template",
        "name": "Agent Instructions",
        "description": "Prompt template for agent instructions",
        "purpose": "unknown",
        "category": "unknown",
        "config_schema": {},
        "input_data_types": [
          "text",
          "json"
        ],
        "output_data_types": [
          "text",
          "json"
        ],
        "input_schema": null,
        "output_schema": null,
        "provides": [
          {
            "useAs": "system_prompt",
            "in": "pa-agent",
            "description": "System prompt for the agent"
          }
        ],
        "accepts_input_from": [],
        "sends_output_to": [
          "pa-agent"
        ],
        "required_config": [],
        "optional_config": [],
        "capabilities": [],
        "usage_examples": [],
        "tags": []
      },
      {
        "component_id": "pa-agent",
        "component_type": "genesis:agent",
        "name": "Prior Authorization Processor",
        "description": "Processes prior authorization requests",
        "purpose": "processing",
        "category": "agent",
        "config_schema": {
          "temperature": 0.1,
          "max_tokens": 2000
        },
        "input_data_types": [
          "text",
          "json",
          "structured_data",
          "tool_results"
        ],
        "output_data_types": [
          "text",
          "json",
          "structured_data",
          "agent_response"
        ],
        "input_schema": null,
        "output_schema": null,
        "provides": [
          {
            "useAs": "input",
            "in": "pa-output",
            "description": "PA decision and details"
          }
        ],
        "accepts_input_from": [],
        "sends_output_to": [
          "pa-output"
        ],
        "required_config": [],
        "optional_config": [
          "temperature",
          "max_tokens"
        ],
        "capabilities": [],
        "usage_examples": [],
        "tags": []
      },
      {
        "component_id": "pa-lookup",
        "component_type": "genesis:mcp_tool",
        "name": "PA Guidelines Lookup",
        "description": "Look up prior authorization guidelines via MCP",
        "purpose": "mcp_integration",
        "category": "mcp",
        "config_schema": {},
        "input_data_types": [
          "text",
          "json",
          "structured_data"
        ],
        "output_data_types": [
          "text",
          "json",
          "structured_data",
          "tool_response"
        ],
        "input_schema": null,
        "output_schema": null,
        "provides": [
          {
            "useAs": "tools",
            "in": "pa-agent",
            "description": "PA guidelines tool"
          }
        ],
        "accepts_input_from": [],
        "sends_output_to": [
          "pa-agent"
        ],
        "required_config": [],
        "optional_config": [],
        "capabilities": [],
        "usage_examples": [],
        "tags": []
      },
      {
        "component_id": "clinical-policies",
        "component_type": "genesis:knowledge_hub_search",
        "name": "Clinical Policy Search",
        "description": "Search clinical policies and guidelines",
        "purpose": "unknown",
        "category": "unknown",
        "config_schema": {},
        "input_data_types": [
          "text",
          "json"
        ],
        "output_data_types": [
          "text",
          "json"
        ],
        "input_schema": null,
        "output_schema": null,
        "provides": [
          {
            "useAs": "tools",
            "in": "pa-agent",
            "description": "Policy search tool"
          }
        ],
        "accepts_input_from": [],
        "sends_output_to": [
          "pa-agent"
        ],
        "required_config": [],
        "optional_config": [],
        "capabilities": [],
        "usage_examples": [],
        "tags": []
      },
      {
        "component_id": "pa-output",
        "component_type": "genesis:chat_output",
        "name": "PA Decision Output",
        "description": "Display PA decision and rationale",
        "purpose": "output",
        "category": "data",
        "config_schema": {},
        "input_data_types": [
          "text",
          "json",
          "structured_data"
        ],
        "output_data_types": [],
        "input_schema": null,
        "output_schema": null,
        "provides": [],
        "accepts_input_from": [],
        "sends_output_to": [],
        "required_config": [],
        "optional_config": [],
        "capabilities": [],
        "usage_examples": [],
        "tags": []
      }
    ],
    "component_types": [
      "genesis:mcp_tool",
      "genesis:agent",
      "genesis:knowledge_hub_search",
      "genesis:prompt_template",
      "genesis:chat_output",
      "genesis:chat_input"
    ],
    "component_categories": [
      "data",
      "unknown",
      "mcp",
      "agent"
    ],
    "capabilities": [
      "external_system_integration"
    ],
    "input_components": [
      "pa-request"
    ],
    "output_components": [
      "pa-output"
    ],
    "tool_components": [],
    "model_components": [],
    "agent_components": [
      "pa-agent"
    ],
    "data_flow": [
      {
        "from_component": "pa-request",
        "to_component": "pa-agent",
        "from_type": "genesis:chat_input",
        "to_type": "genesis:agent",
        "from_category": "data",
        "to_category": "agent",
        "data_purpose": "input"
      },
      {
        "from_component": "pa-agent-prompt",
        "to_component": "pa-agent",
        "from_type": "genesis:prompt_template",
        "to_type": "genesis:agent",
        "from_category": "unknown",
        "to_category": "agent",
        "data_purpose": "unknown"
      },
      {
        "from_component": "pa-agent",
        "to_component": "pa-output",
        "from_type": "genesis:agent",
        "to_type": "genesis:chat_output",
        "from_category": "agent",
        "to_category": "data",
        "data_purpose": "processing"
      },
      {
        "from_component": "pa-lookup",
        "to_component": "pa-agent",
        "from_type": "genesis:mcp_tool",
        "to_type": "genesis:agent",
        "from_category": "mcp",
        "to_category": "agent",
        "data_purpose": "mcp_integration"
      },
      {
        "from_component": "clinical-policies",
        "to_component": "pa-agent",
        "from_type": "genesis:knowledge_hub_search",
        "to_type": "genesis:agent",
        "from_category": "unknown",
        "to_category": "agent",
        "data_purpose": "unknown"
      }
    ],
    "complexity_score": 16,
    "tags": [
      "medical",
      "healthcare"
    ],
    "domain": "integration",
    "file_path": "genesis-agents-cli/examples/agents/prior-auth-agent.yaml",
    "created_at": "2025-10-08T14:22:10.301132"
  },
  "857f07521a6e69f6": {
    "agent_id": "857f07521a6e69f6",
    "name": "EOC Check Agent",
    "description": "Validates if services are covered under the member's Evidence of Coverage",
    "agent_goal": "Validate service coverage against member's Evidence of Coverage documents",
    "version": "1.0.0",
    "components": [
      {
        "component_id": "eoc-prompt",
        "component_type": "genesis:prompt_template",
        "name": "Agent Instructions",
        "description": "Prompt template for agent instructions",
        "purpose": "unknown",
        "category": "unknown",
        "config_schema": {},
        "input_data_types": [
          "text",
          "json"
        ],
        "output_data_types": [
          "text",
          "json"
        ],
        "input_schema": null,
        "output_schema": null,
        "provides": [
          {
            "useAs": "system_prompt",
            "in": "eoc-agent",
            "description": "System prompt for the agent"
          }
        ],
        "accepts_input_from": [],
        "sends_output_to": [
          "eoc-agent"
        ],
        "required_config": [],
        "optional_config": [],
        "capabilities": [],
        "usage_examples": [],
        "tags": []
      },
      {
        "component_id": "eoc-request",
        "component_type": "genesis:chat_input",
        "name": "EOC Check Request",
        "description": "Member and service information for EOC validation",
        "purpose": "input",
        "category": "data",
        "config_schema": {},
        "input_data_types": [],
        "output_data_types": [
          "text",
          "json"
        ],
        "input_schema": null,
        "output_schema": null,
        "provides": [
          {
            "useAs": "input",
            "in": "eoc-agent",
            "description": "EOC validation request"
          }
        ],
        "accepts_input_from": [],
        "sends_output_to": [
          "eoc-agent"
        ],
        "required_config": [],
        "optional_config": [],
        "capabilities": [],
        "usage_examples": [],
        "tags": []
      },
      {
        "component_id": "eoc-agent",
        "component_type": "genesis:agent",
        "name": "EOC Validation Agent",
        "description": "Validates coverage against EOC",
        "purpose": "processing",
        "category": "agent",
        "config_schema": {
          "temperature": 0.1,
          "max_tokens": 2000
        },
        "input_data_types": [
          "text",
          "json",
          "structured_data",
          "tool_results"
        ],
        "output_data_types": [
          "text",
          "json",
          "structured_data",
          "agent_response"
        ],
        "input_schema": null,
        "output_schema": null,
        "provides": [
          {
            "useAs": "input",
            "in": "eoc-formatter",
            "description": "EOC validation results"
          }
        ],
        "accepts_input_from": [],
        "sends_output_to": [
          "eoc-formatter"
        ],
        "required_config": [],
        "optional_config": [
          "temperature",
          "max_tokens"
        ],
        "capabilities": [],
        "usage_examples": [],
        "tags": []
      },
      {
        "component_id": "eoc-search",
        "component_type": "genesis:knowledge_hub_search",
        "name": "EOC Document Search",
        "description": "Search EOC documents",
        "purpose": "unknown",
        "category": "unknown",
        "config_schema": {},
        "input_data_types": [
          "text",
          "json"
        ],
        "output_data_types": [
          "text",
          "json"
        ],
        "input_schema": null,
        "output_schema": null,
        "provides": [
          {
            "useAs": "tools",
            "in": "eoc-agent",
            "description": "EOC document search tool"
          }
        ],
        "accepts_input_from": [],
        "sends_output_to": [
          "eoc-agent"
        ],
        "required_config": [],
        "optional_config": [],
        "capabilities": [],
        "usage_examples": [],
        "tags": []
      },
      {
        "component_id": "service-validator",
        "component_type": "genesis:mcp_tool",
        "name": "Service Code Validator",
        "description": "Validate and enrich service codes via MCP",
        "purpose": "mcp_integration",
        "category": "mcp",
        "config_schema": {},
        "input_data_types": [
          "text",
          "json",
          "structured_data"
        ],
        "output_data_types": [
          "text",
          "json",
          "structured_data",
          "tool_response"
        ],
        "input_schema": null,
        "output_schema": null,
        "provides": [
          {
            "useAs": "tools",
            "in": "eoc-agent",
            "description": "Service code validation tool"
          }
        ],
        "accepts_input_from": [],
        "sends_output_to": [
          "eoc-agent"
        ],
        "required_config": [],
        "optional_config": [],
        "capabilities": [],
        "usage_examples": [],
        "tags": []
      },
      {
        "component_id": "eoc-formatter",
        "component_type": "genesis:chat_output",
        "name": "EOC Validation Results",
        "description": "Display EOC validation results",
        "purpose": "output",
        "category": "data",
        "config_schema": {},
        "input_data_types": [
          "text",
          "json",
          "structured_data"
        ],
        "output_data_types": [],
        "input_schema": null,
        "output_schema": null,
        "provides": [],
        "accepts_input_from": [],
        "sends_output_to": [],
        "required_config": [],
        "optional_config": [],
        "capabilities": [],
        "usage_examples": [],
        "tags": []
      }
    ],
    "component_types": [
      "genesis:mcp_tool",
      "genesis:agent",
      "genesis:knowledge_hub_search",
      "genesis:prompt_template",
      "genesis:chat_output",
      "genesis:chat_input"
    ],
    "component_categories": [
      "data",
      "unknown",
      "mcp",
      "agent"
    ],
    "capabilities": [
      "external_system_integration"
    ],
    "input_components": [
      "eoc-request"
    ],
    "output_components": [
      "eoc-formatter"
    ],
    "tool_components": [],
    "model_components": [],
    "agent_components": [
      "eoc-agent"
    ],
    "data_flow": [
      {
        "from_component": "eoc-prompt",
        "to_component": "eoc-agent",
        "from_type": "genesis:prompt_template",
        "to_type": "genesis:agent",
        "from_category": "unknown",
        "to_category": "agent",
        "data_purpose": "unknown"
      },
      {
        "from_component": "eoc-request",
        "to_component": "eoc-agent",
        "from_type": "genesis:chat_input",
        "to_type": "genesis:agent",
        "from_category": "data",
        "to_category": "agent",
        "data_purpose": "input"
      },
      {
        "from_component": "eoc-agent",
        "to_component": "eoc-formatter",
        "from_type": "genesis:agent",
        "to_type": "genesis:chat_output",
        "from_category": "agent",
        "to_category": "data",
        "data_purpose": "processing"
      },
      {
        "from_component": "eoc-search",
        "to_component": "eoc-agent",
        "from_type": "genesis:knowledge_hub_search",
        "to_type": "genesis:agent",
        "from_category": "unknown",
        "to_category": "agent",
        "data_purpose": "unknown"
      },
      {
        "from_component": "service-validator",
        "to_component": "eoc-agent",
        "from_type": "genesis:mcp_tool",
        "to_type": "genesis:agent",
        "from_category": "mcp",
        "to_category": "agent",
        "data_purpose": "mcp_integration"
      }
    ],
    "complexity_score": 16,
    "tags": [],
    "domain": "integration",
    "file_path": "genesis-agents-cli/examples/agents/eoc-check-agent.yaml",
    "created_at": "2025-10-08T14:22:10.306912"
  },
  "06275185f8468b80": {
    "agent_id": "06275185f8468b80",
    "name": "Attach Document Agent",
    "description": "Attach original fax documents to case records for audit compliance",
    "agent_goal": "Attach the original pharmacy fax document to the case file for audit and downstream compliance workflows",
    "version": "1.0.0",
    "components": [
      {
        "component_id": "input",
        "component_type": "genesis:chat_input",
        "name": "Request Input",
        "description": "Input for attach document agent",
        "purpose": "input",
        "category": "data",
        "config_schema": {},
        "input_data_types": [],
        "output_data_types": [
          "text",
          "json"
        ],
        "input_schema": null,
        "output_schema": null,
        "provides": [
          {
            "useAs": "input",
            "in": "main-agent",
            "description": "Input data"
          }
        ],
        "accepts_input_from": [],
        "sends_output_to": [
          "main-agent"
        ],
        "required_config": [],
        "optional_config": [],
        "capabilities": [],
        "usage_examples": [],
        "tags": []
      },
      {
        "component_id": "main-agent-prompt",
        "component_type": "genesis:prompt_template",
        "name": "Agent Instructions",
        "description": "Prompt template for agent instructions",
        "purpose": "unknown",
        "category": "unknown",
        "config_schema": {},
        "input_data_types": [
          "text",
          "json"
        ],
        "output_data_types": [
          "text",
          "json"
        ],
        "input_schema": null,
        "output_schema": null,
        "provides": [
          {
            "useAs": "system_prompt",
            "in": "main-agent",
            "description": "System prompt for the agent"
          }
        ],
        "accepts_input_from": [],
        "sends_output_to": [
          "main-agent"
        ],
        "required_config": [],
        "optional_config": [],
        "capabilities": [],
        "usage_examples": [],
        "tags": []
      },
      {
        "component_id": "main-agent",
        "component_type": "genesis:agent",
        "name": "Attach Document Agent",
        "description": "Attach original fax documents to case records for audit compliance",
        "purpose": "processing",
        "category": "agent",
        "config_schema": {
          "temperature": 0.1,
          "max_tokens": 2000
        },
        "input_data_types": [
          "text",
          "json",
          "structured_data",
          "tool_results"
        ],
        "output_data_types": [
          "text",
          "json",
          "structured_data",
          "agent_response"
        ],
        "input_schema": null,
        "output_schema": null,
        "provides": [
          {
            "useAs": "input",
            "in": "output",
            "description": "Results"
          }
        ],
        "accepts_input_from": [],
        "sends_output_to": [
          "output"
        ],
        "required_config": [],
        "optional_config": [
          "temperature",
          "max_tokens"
        ],
        "capabilities": [],
        "usage_examples": [],
        "tags": []
      },
      {
        "component_id": "tool-1",
        "component_type": "genesis:mcp_tool",
        "name": "Api Component",
        "description": "Tool for attach document agent via MCP",
        "purpose": "mcp_integration",
        "category": "mcp",
        "config_schema": {},
        "input_data_types": [
          "text",
          "json",
          "structured_data"
        ],
        "output_data_types": [
          "text",
          "json",
          "structured_data",
          "tool_response"
        ],
        "input_schema": null,
        "output_schema": null,
        "provides": [
          {
            "useAs": "tools",
            "in": "main-agent",
            "description": "Api Component tool"
          }
        ],
        "accepts_input_from": [],
        "sends_output_to": [
          "main-agent"
        ],
        "required_config": [],
        "optional_config": [],
        "capabilities": [],
        "usage_examples": [],
        "tags": []
      },
      {
        "component_id": "tool-2",
        "component_type": "genesis:file_reader",
        "name": "File Reader",
        "description": "Tool for attach document agent",
        "purpose": "unknown",
        "category": "unknown",
        "config_schema": {},
        "input_data_types": [
          "text",
          "json"
        ],
        "output_data_types": [
          "text",
          "json"
        ],
        "input_schema": null,
        "output_schema": null,
        "provides": [
          {
            "useAs": "tools",
            "in": "main-agent",
            "description": "File Reader tool"
          }
        ],
        "accepts_input_from": [],
        "sends_output_to": [
          "main-agent"
        ],
        "required_config": [],
        "optional_config": [],
        "capabilities": [],
        "usage_examples": [],
        "tags": []
      },
      {
        "component_id": "output",
        "component_type": "genesis:chat_output",
        "name": "Results Output",
        "description": "Display results",
        "purpose": "output",
        "category": "data",
        "config_schema": {},
        "input_data_types": [
          "text",
          "json",
          "structured_data"
        ],
        "output_data_types": [],
        "input_schema": null,
        "output_schema": null,
        "provides": [],
        "accepts_input_from": [],
        "sends_output_to": [],
        "required_config": [],
        "optional_config": [],
        "capabilities": [],
        "usage_examples": [],
        "tags": []
      }
    ],
    "component_types": [
      "genesis:mcp_tool",
      "genesis:agent",
      "genesis:file_reader",
      "genesis:prompt_template",
      "genesis:chat_output",
      "genesis:chat_input"
    ],
    "component_categories": [
      "data",
      "unknown",
      "mcp",
      "agent"
    ],
    "capabilities": [
      "external_system_integration"
    ],
    "input_components": [
      "input"
    ],
    "output_components": [
      "output"
    ],
    "tool_components": [],
    "model_components": [],
    "agent_components": [
      "main-agent"
    ],
    "data_flow": [
      {
        "from_component": "input",
        "to_component": "main-agent",
        "from_type": "genesis:chat_input",
        "to_type": "genesis:agent",
        "from_category": "data",
        "to_category": "agent",
        "data_purpose": "input"
      },
      {
        "from_component": "main-agent-prompt",
        "to_component": "main-agent",
        "from_type": "genesis:prompt_template",
        "to_type": "genesis:agent",
        "from_category": "unknown",
        "to_category": "agent",
        "data_purpose": "unknown"
      },
      {
        "from_component": "main-agent",
        "to_component": "output",
        "from_type": "genesis:agent",
        "to_type": "genesis:chat_output",
        "from_category": "agent",
        "to_category": "data",
        "data_purpose": "processing"
      },
      {
        "from_component": "tool-1",
        "to_component": "main-agent",
        "from_type": "genesis:mcp_tool",
        "to_type": "genesis:agent",
        "from_category": "mcp",
        "to_category": "agent",
        "data_purpose": "mcp_integration"
      },
      {
        "from_component": "tool-2",
        "to_component": "main-agent",
        "from_type": "genesis:file_reader",
        "to_type": "genesis:agent",
        "from_category": "unknown",
        "to_category": "agent",
        "data_purpose": "unknown"
      }
    ],
    "complexity_score": 16,
    "tags": [],
    "domain": "integration",
    "file_path": "genesis-agents-cli/examples/agents/attach-document-agent.yaml",
    "created_at": "2025-10-08T14:22:10.311193"
  },
  "3d57e00ccb857b26": {
    "agent_id": "3d57e00ccb857b26",
    "name": "Simple Calculator Agent",
    "description": "A basic agent that can perform mathematical calculations",
    "agent_goal": "Perform mathematical calculations using a calculator tool",
    "version": "1.0.0",
    "components": [
      {
        "component_id": "user-question",
        "component_type": "genesis:chat_input",
        "name": "Math Question",
        "description": "Enter your math problem or calculation",
        "purpose": "input",
        "category": "data",
        "config_schema": {},
        "input_data_types": [],
        "output_data_types": [
          "text",
          "json"
        ],
        "input_schema": null,
        "output_schema": null,
        "provides": [
          {
            "in": "calculator-agent",
            "useAs": "input",
            "description": "Send question to agent"
          }
        ],
        "accepts_input_from": [],
        "sends_output_to": [
          "calculator-agent"
        ],
        "required_config": [],
        "optional_config": [],
        "capabilities": [],
        "usage_examples": [],
        "tags": []
      },
      {
        "component_id": "calculator-tool",
        "component_type": "genesis:calculator",
        "name": "Calculator",
        "description": "Tool for mathematical calculations",
        "purpose": "tool_integration",
        "category": "tool",
        "config_schema": {},
        "input_data_types": [
          "text",
          "mathematical_expression"
        ],
        "output_data_types": [
          "number",
          "calculation_result",
          "text"
        ],
        "input_schema": null,
        "output_schema": null,
        "provides": [
          {
            "in": "calculator-agent",
            "useAs": "tool",
            "description": "Provide calculator as a tool to the agent"
          }
        ],
        "accepts_input_from": [],
        "sends_output_to": [
          "calculator-agent"
        ],
        "required_config": [],
        "optional_config": [],
        "capabilities": [
          "mathematical_computation",
          "arithmetic_operations"
        ],
        "usage_examples": [],
        "tags": []
      },
      {
        "component_id": "calculator-agent",
        "component_type": "genesis:agent",
        "name": "Math Assistant",
        "description": "Agent that helps with mathematical calculations",
        "purpose": "processing",
        "category": "agent",
        "config_schema": {
          "has_system_prompt": true,
          "temperature": 0.1,
          "max_tokens": 1000
        },
        "input_data_types": [
          "text",
          "json",
          "structured_data",
          "tool_results"
        ],
        "output_data_types": [
          "text",
          "json",
          "structured_data",
          "agent_response"
        ],
        "input_schema": null,
        "output_schema": null,
        "provides": [
          {
            "in": "answer-output",
            "useAs": "input",
            "description": "Send response to output"
          }
        ],
        "accepts_input_from": [],
        "sends_output_to": [
          "answer-output"
        ],
        "required_config": [],
        "optional_config": [
          "system_prompt",
          "temperature",
          "max_tokens"
        ],
        "capabilities": [],
        "usage_examples": [],
        "tags": []
      },
      {
        "component_id": "answer-output",
        "component_type": "genesis:chat_output",
        "name": "Answer",
        "description": "Shows the calculated result and explanation",
        "purpose": "output",
        "category": "data",
        "config_schema": {},
        "input_data_types": [
          "text",
          "json",
          "structured_data"
        ],
        "output_data_types": [],
        "input_schema": null,
        "output_schema": null,
        "provides": [],
        "accepts_input_from": [],
        "sends_output_to": [],
        "required_config": [],
        "optional_config": [],
        "capabilities": [],
        "usage_examples": [],
        "tags": []
      }
    ],
    "component_types": [
      "genesis:agent",
      "genesis:chat_output",
      "genesis:calculator",
      "genesis:chat_input"
    ],
    "component_categories": [
      "data",
      "tool",
      "agent"
    ],
    "capabilities": [
      "mathematical_computation",
      "arithmetic_operations",
      "tool_integration"
    ],
    "input_components": [
      "user-question"
    ],
    "output_components": [
      "answer-output"
    ],
    "tool_components": [
      "calculator-tool"
    ],
    "model_components": [],
    "agent_components": [
      "calculator-agent"
    ],
    "data_flow": [
      {
        "from_component": "user-question",
        "to_component": "calculator-agent",
        "from_type": "genesis:chat_input",
        "to_type": "genesis:agent",
        "from_category": "data",
        "to_category": "agent",
        "data_purpose": "input"
      },
      {
        "from_component": "calculator-tool",
        "to_component": "calculator-agent",
        "from_type": "genesis:calculator",
        "to_type": "genesis:agent",
        "from_category": "tool",
        "to_category": "agent",
        "data_purpose": "tool_integration"
      },
      {
        "from_component": "calculator-agent",
        "to_component": "answer-output",
        "from_type": "genesis:agent",
        "to_type": "genesis:chat_output",
        "from_category": "agent",
        "to_category": "data",
        "data_purpose": "processing"
      }
    ],
    "complexity_score": 10,
    "tags": [
      "mathematics",
      "tool-integration",
      "calculation"
    ],
    "domain": "mathematics",
    "file_path": "genesis-agents-cli/examples/agents/simple-calculator-agent.yaml",
    "created_at": "2025-10-08T14:22:10.312708"
  }
}